/* soapClient.cpp
   Generated by gSOAP 2.8.2 from vimService.h
   Copyright(C) 2000-2011, Robert van Engelen, Genivia Inc. All Rights Reserved.
   The generated code is released under one of the following licenses:
   GPL OR Genivia's license for commercial use.
*/

#if defined(__BORLANDC__)
#pragma option push -w-8060
#pragma option push -w-8004
#endif
#include "soapH.h"

SOAP_SOURCE_STAMP("@(#) soapClient.cpp ver 2.8.2 2013-10-31 17:00:44 GMT")


SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__DestroyPropertyFilter(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__DestroyPropertyFilterRequestType *ns2__DestroyPropertyFilter, _ns2__DestroyPropertyFilterResponse *ns2__DestroyPropertyFilterResponse)
{	struct __ns2__DestroyPropertyFilter soap_tmp___ns2__DestroyPropertyFilter;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__DestroyPropertyFilter.ns2__DestroyPropertyFilter = ns2__DestroyPropertyFilter;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__DestroyPropertyFilter(soap, &soap_tmp___ns2__DestroyPropertyFilter);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__DestroyPropertyFilter(soap, &soap_tmp___ns2__DestroyPropertyFilter, "-ns2:DestroyPropertyFilter", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__DestroyPropertyFilter(soap, &soap_tmp___ns2__DestroyPropertyFilter, "-ns2:DestroyPropertyFilter", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__DestroyPropertyFilterResponse)
		return soap_closesock(soap);
	ns2__DestroyPropertyFilterResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__DestroyPropertyFilterResponse->soap_get(soap, "ns2:DestroyPropertyFilterResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__CreateFilter(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__CreateFilterRequestType *ns2__CreateFilter, _ns2__CreateFilterResponse *ns2__CreateFilterResponse)
{	struct __ns2__CreateFilter soap_tmp___ns2__CreateFilter;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__CreateFilter.ns2__CreateFilter = ns2__CreateFilter;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__CreateFilter(soap, &soap_tmp___ns2__CreateFilter);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__CreateFilter(soap, &soap_tmp___ns2__CreateFilter, "-ns2:CreateFilter", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__CreateFilter(soap, &soap_tmp___ns2__CreateFilter, "-ns2:CreateFilter", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CreateFilterResponse)
		return soap_closesock(soap);
	ns2__CreateFilterResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CreateFilterResponse->soap_get(soap, "ns2:CreateFilterResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RetrieveProperties(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RetrievePropertiesRequestType *ns2__RetrieveProperties, _ns2__RetrievePropertiesResponse *ns2__RetrievePropertiesResponse)
{	struct __ns2__RetrieveProperties soap_tmp___ns2__RetrieveProperties;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RetrieveProperties.ns2__RetrieveProperties = ns2__RetrieveProperties;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RetrieveProperties(soap, &soap_tmp___ns2__RetrieveProperties);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RetrieveProperties(soap, &soap_tmp___ns2__RetrieveProperties, "-ns2:RetrieveProperties", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RetrieveProperties(soap, &soap_tmp___ns2__RetrieveProperties, "-ns2:RetrieveProperties", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RetrievePropertiesResponse)
		return soap_closesock(soap);
	ns2__RetrievePropertiesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RetrievePropertiesResponse->soap_get(soap, "ns2:RetrievePropertiesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__CheckForUpdates(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__CheckForUpdatesRequestType *ns2__CheckForUpdates, _ns2__CheckForUpdatesResponse *ns2__CheckForUpdatesResponse)
{	struct __ns2__CheckForUpdates soap_tmp___ns2__CheckForUpdates;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__CheckForUpdates.ns2__CheckForUpdates = ns2__CheckForUpdates;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__CheckForUpdates(soap, &soap_tmp___ns2__CheckForUpdates);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__CheckForUpdates(soap, &soap_tmp___ns2__CheckForUpdates, "-ns2:CheckForUpdates", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__CheckForUpdates(soap, &soap_tmp___ns2__CheckForUpdates, "-ns2:CheckForUpdates", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CheckForUpdatesResponse)
		return soap_closesock(soap);
	ns2__CheckForUpdatesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CheckForUpdatesResponse->soap_get(soap, "ns2:CheckForUpdatesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__WaitForUpdates(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__WaitForUpdatesRequestType *ns2__WaitForUpdates, _ns2__WaitForUpdatesResponse *ns2__WaitForUpdatesResponse)
{	struct __ns2__WaitForUpdates soap_tmp___ns2__WaitForUpdates;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__WaitForUpdates.ns2__WaitForUpdates = ns2__WaitForUpdates;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__WaitForUpdates(soap, &soap_tmp___ns2__WaitForUpdates);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__WaitForUpdates(soap, &soap_tmp___ns2__WaitForUpdates, "-ns2:WaitForUpdates", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__WaitForUpdates(soap, &soap_tmp___ns2__WaitForUpdates, "-ns2:WaitForUpdates", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__WaitForUpdatesResponse)
		return soap_closesock(soap);
	ns2__WaitForUpdatesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__WaitForUpdatesResponse->soap_get(soap, "ns2:WaitForUpdatesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__CancelWaitForUpdates(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__CancelWaitForUpdatesRequestType *ns2__CancelWaitForUpdates, _ns2__CancelWaitForUpdatesResponse *ns2__CancelWaitForUpdatesResponse)
{	struct __ns2__CancelWaitForUpdates soap_tmp___ns2__CancelWaitForUpdates;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__CancelWaitForUpdates.ns2__CancelWaitForUpdates = ns2__CancelWaitForUpdates;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__CancelWaitForUpdates(soap, &soap_tmp___ns2__CancelWaitForUpdates);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__CancelWaitForUpdates(soap, &soap_tmp___ns2__CancelWaitForUpdates, "-ns2:CancelWaitForUpdates", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__CancelWaitForUpdates(soap, &soap_tmp___ns2__CancelWaitForUpdates, "-ns2:CancelWaitForUpdates", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CancelWaitForUpdatesResponse)
		return soap_closesock(soap);
	ns2__CancelWaitForUpdatesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CancelWaitForUpdatesResponse->soap_get(soap, "ns2:CancelWaitForUpdatesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__WaitForUpdatesEx(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__WaitForUpdatesExRequestType *ns2__WaitForUpdatesEx, _ns2__WaitForUpdatesExResponse *ns2__WaitForUpdatesExResponse)
{	struct __ns2__WaitForUpdatesEx soap_tmp___ns2__WaitForUpdatesEx;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__WaitForUpdatesEx.ns2__WaitForUpdatesEx = ns2__WaitForUpdatesEx;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__WaitForUpdatesEx(soap, &soap_tmp___ns2__WaitForUpdatesEx);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__WaitForUpdatesEx(soap, &soap_tmp___ns2__WaitForUpdatesEx, "-ns2:WaitForUpdatesEx", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__WaitForUpdatesEx(soap, &soap_tmp___ns2__WaitForUpdatesEx, "-ns2:WaitForUpdatesEx", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__WaitForUpdatesExResponse)
		return soap_closesock(soap);
	ns2__WaitForUpdatesExResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__WaitForUpdatesExResponse->soap_get(soap, "ns2:WaitForUpdatesExResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RetrievePropertiesEx(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RetrievePropertiesExRequestType *ns2__RetrievePropertiesEx, _ns2__RetrievePropertiesExResponse *ns2__RetrievePropertiesExResponse)
{	struct __ns2__RetrievePropertiesEx soap_tmp___ns2__RetrievePropertiesEx;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RetrievePropertiesEx.ns2__RetrievePropertiesEx = ns2__RetrievePropertiesEx;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RetrievePropertiesEx(soap, &soap_tmp___ns2__RetrievePropertiesEx);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RetrievePropertiesEx(soap, &soap_tmp___ns2__RetrievePropertiesEx, "-ns2:RetrievePropertiesEx", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RetrievePropertiesEx(soap, &soap_tmp___ns2__RetrievePropertiesEx, "-ns2:RetrievePropertiesEx", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RetrievePropertiesExResponse)
		return soap_closesock(soap);
	ns2__RetrievePropertiesExResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RetrievePropertiesExResponse->soap_get(soap, "ns2:RetrievePropertiesExResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ContinueRetrievePropertiesEx(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ContinueRetrievePropertiesExRequestType *ns2__ContinueRetrievePropertiesEx, _ns2__ContinueRetrievePropertiesExResponse *ns2__ContinueRetrievePropertiesExResponse)
{	struct __ns2__ContinueRetrievePropertiesEx soap_tmp___ns2__ContinueRetrievePropertiesEx;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ContinueRetrievePropertiesEx.ns2__ContinueRetrievePropertiesEx = ns2__ContinueRetrievePropertiesEx;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ContinueRetrievePropertiesEx(soap, &soap_tmp___ns2__ContinueRetrievePropertiesEx);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ContinueRetrievePropertiesEx(soap, &soap_tmp___ns2__ContinueRetrievePropertiesEx, "-ns2:ContinueRetrievePropertiesEx", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ContinueRetrievePropertiesEx(soap, &soap_tmp___ns2__ContinueRetrievePropertiesEx, "-ns2:ContinueRetrievePropertiesEx", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ContinueRetrievePropertiesExResponse)
		return soap_closesock(soap);
	ns2__ContinueRetrievePropertiesExResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ContinueRetrievePropertiesExResponse->soap_get(soap, "ns2:ContinueRetrievePropertiesExResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__CancelRetrievePropertiesEx(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__CancelRetrievePropertiesExRequestType *ns2__CancelRetrievePropertiesEx, _ns2__CancelRetrievePropertiesExResponse *ns2__CancelRetrievePropertiesExResponse)
{	struct __ns2__CancelRetrievePropertiesEx soap_tmp___ns2__CancelRetrievePropertiesEx;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__CancelRetrievePropertiesEx.ns2__CancelRetrievePropertiesEx = ns2__CancelRetrievePropertiesEx;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__CancelRetrievePropertiesEx(soap, &soap_tmp___ns2__CancelRetrievePropertiesEx);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__CancelRetrievePropertiesEx(soap, &soap_tmp___ns2__CancelRetrievePropertiesEx, "-ns2:CancelRetrievePropertiesEx", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__CancelRetrievePropertiesEx(soap, &soap_tmp___ns2__CancelRetrievePropertiesEx, "-ns2:CancelRetrievePropertiesEx", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CancelRetrievePropertiesExResponse)
		return soap_closesock(soap);
	ns2__CancelRetrievePropertiesExResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CancelRetrievePropertiesExResponse->soap_get(soap, "ns2:CancelRetrievePropertiesExResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__CreatePropertyCollector(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__CreatePropertyCollectorRequestType *ns2__CreatePropertyCollector, _ns2__CreatePropertyCollectorResponse *ns2__CreatePropertyCollectorResponse)
{	struct __ns2__CreatePropertyCollector soap_tmp___ns2__CreatePropertyCollector;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__CreatePropertyCollector.ns2__CreatePropertyCollector = ns2__CreatePropertyCollector;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__CreatePropertyCollector(soap, &soap_tmp___ns2__CreatePropertyCollector);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__CreatePropertyCollector(soap, &soap_tmp___ns2__CreatePropertyCollector, "-ns2:CreatePropertyCollector", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__CreatePropertyCollector(soap, &soap_tmp___ns2__CreatePropertyCollector, "-ns2:CreatePropertyCollector", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CreatePropertyCollectorResponse)
		return soap_closesock(soap);
	ns2__CreatePropertyCollectorResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CreatePropertyCollectorResponse->soap_get(soap, "ns2:CreatePropertyCollectorResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__DestroyPropertyCollector(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__DestroyPropertyCollectorRequestType *ns2__DestroyPropertyCollector, _ns2__DestroyPropertyCollectorResponse *ns2__DestroyPropertyCollectorResponse)
{	struct __ns2__DestroyPropertyCollector soap_tmp___ns2__DestroyPropertyCollector;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__DestroyPropertyCollector.ns2__DestroyPropertyCollector = ns2__DestroyPropertyCollector;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__DestroyPropertyCollector(soap, &soap_tmp___ns2__DestroyPropertyCollector);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__DestroyPropertyCollector(soap, &soap_tmp___ns2__DestroyPropertyCollector, "-ns2:DestroyPropertyCollector", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__DestroyPropertyCollector(soap, &soap_tmp___ns2__DestroyPropertyCollector, "-ns2:DestroyPropertyCollector", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__DestroyPropertyCollectorResponse)
		return soap_closesock(soap);
	ns2__DestroyPropertyCollectorResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__DestroyPropertyCollectorResponse->soap_get(soap, "ns2:DestroyPropertyCollectorResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__AddAuthorizationRole(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__AddAuthorizationRoleRequestType *ns2__AddAuthorizationRole, _ns2__AddAuthorizationRoleResponse *ns2__AddAuthorizationRoleResponse)
{	struct __ns2__AddAuthorizationRole soap_tmp___ns2__AddAuthorizationRole;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__AddAuthorizationRole.ns2__AddAuthorizationRole = ns2__AddAuthorizationRole;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__AddAuthorizationRole(soap, &soap_tmp___ns2__AddAuthorizationRole);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__AddAuthorizationRole(soap, &soap_tmp___ns2__AddAuthorizationRole, "-ns2:AddAuthorizationRole", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__AddAuthorizationRole(soap, &soap_tmp___ns2__AddAuthorizationRole, "-ns2:AddAuthorizationRole", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__AddAuthorizationRoleResponse)
		return soap_closesock(soap);
	ns2__AddAuthorizationRoleResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__AddAuthorizationRoleResponse->soap_get(soap, "ns2:AddAuthorizationRoleResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RemoveAuthorizationRole(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RemoveAuthorizationRoleRequestType *ns2__RemoveAuthorizationRole, _ns2__RemoveAuthorizationRoleResponse *ns2__RemoveAuthorizationRoleResponse)
{	struct __ns2__RemoveAuthorizationRole soap_tmp___ns2__RemoveAuthorizationRole;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RemoveAuthorizationRole.ns2__RemoveAuthorizationRole = ns2__RemoveAuthorizationRole;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RemoveAuthorizationRole(soap, &soap_tmp___ns2__RemoveAuthorizationRole);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RemoveAuthorizationRole(soap, &soap_tmp___ns2__RemoveAuthorizationRole, "-ns2:RemoveAuthorizationRole", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RemoveAuthorizationRole(soap, &soap_tmp___ns2__RemoveAuthorizationRole, "-ns2:RemoveAuthorizationRole", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RemoveAuthorizationRoleResponse)
		return soap_closesock(soap);
	ns2__RemoveAuthorizationRoleResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RemoveAuthorizationRoleResponse->soap_get(soap, "ns2:RemoveAuthorizationRoleResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UpdateAuthorizationRole(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UpdateAuthorizationRoleRequestType *ns2__UpdateAuthorizationRole, _ns2__UpdateAuthorizationRoleResponse *ns2__UpdateAuthorizationRoleResponse)
{	struct __ns2__UpdateAuthorizationRole soap_tmp___ns2__UpdateAuthorizationRole;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UpdateAuthorizationRole.ns2__UpdateAuthorizationRole = ns2__UpdateAuthorizationRole;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UpdateAuthorizationRole(soap, &soap_tmp___ns2__UpdateAuthorizationRole);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UpdateAuthorizationRole(soap, &soap_tmp___ns2__UpdateAuthorizationRole, "-ns2:UpdateAuthorizationRole", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UpdateAuthorizationRole(soap, &soap_tmp___ns2__UpdateAuthorizationRole, "-ns2:UpdateAuthorizationRole", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UpdateAuthorizationRoleResponse)
		return soap_closesock(soap);
	ns2__UpdateAuthorizationRoleResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UpdateAuthorizationRoleResponse->soap_get(soap, "ns2:UpdateAuthorizationRoleResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__MergePermissions(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__MergePermissionsRequestType *ns2__MergePermissions, _ns2__MergePermissionsResponse *ns2__MergePermissionsResponse)
{	struct __ns2__MergePermissions soap_tmp___ns2__MergePermissions;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__MergePermissions.ns2__MergePermissions = ns2__MergePermissions;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__MergePermissions(soap, &soap_tmp___ns2__MergePermissions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__MergePermissions(soap, &soap_tmp___ns2__MergePermissions, "-ns2:MergePermissions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__MergePermissions(soap, &soap_tmp___ns2__MergePermissions, "-ns2:MergePermissions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__MergePermissionsResponse)
		return soap_closesock(soap);
	ns2__MergePermissionsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__MergePermissionsResponse->soap_get(soap, "ns2:MergePermissionsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RetrieveRolePermissions(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RetrieveRolePermissionsRequestType *ns2__RetrieveRolePermissions, _ns2__RetrieveRolePermissionsResponse *ns2__RetrieveRolePermissionsResponse)
{	struct __ns2__RetrieveRolePermissions soap_tmp___ns2__RetrieveRolePermissions;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RetrieveRolePermissions.ns2__RetrieveRolePermissions = ns2__RetrieveRolePermissions;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RetrieveRolePermissions(soap, &soap_tmp___ns2__RetrieveRolePermissions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RetrieveRolePermissions(soap, &soap_tmp___ns2__RetrieveRolePermissions, "-ns2:RetrieveRolePermissions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RetrieveRolePermissions(soap, &soap_tmp___ns2__RetrieveRolePermissions, "-ns2:RetrieveRolePermissions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RetrieveRolePermissionsResponse)
		return soap_closesock(soap);
	ns2__RetrieveRolePermissionsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RetrieveRolePermissionsResponse->soap_get(soap, "ns2:RetrieveRolePermissionsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RetrieveEntityPermissions(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RetrieveEntityPermissionsRequestType *ns2__RetrieveEntityPermissions, _ns2__RetrieveEntityPermissionsResponse *ns2__RetrieveEntityPermissionsResponse)
{	struct __ns2__RetrieveEntityPermissions soap_tmp___ns2__RetrieveEntityPermissions;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RetrieveEntityPermissions.ns2__RetrieveEntityPermissions = ns2__RetrieveEntityPermissions;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RetrieveEntityPermissions(soap, &soap_tmp___ns2__RetrieveEntityPermissions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RetrieveEntityPermissions(soap, &soap_tmp___ns2__RetrieveEntityPermissions, "-ns2:RetrieveEntityPermissions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RetrieveEntityPermissions(soap, &soap_tmp___ns2__RetrieveEntityPermissions, "-ns2:RetrieveEntityPermissions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RetrieveEntityPermissionsResponse)
		return soap_closesock(soap);
	ns2__RetrieveEntityPermissionsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RetrieveEntityPermissionsResponse->soap_get(soap, "ns2:RetrieveEntityPermissionsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RetrieveAllPermissions(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RetrieveAllPermissionsRequestType *ns2__RetrieveAllPermissions, _ns2__RetrieveAllPermissionsResponse *ns2__RetrieveAllPermissionsResponse)
{	struct __ns2__RetrieveAllPermissions soap_tmp___ns2__RetrieveAllPermissions;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RetrieveAllPermissions.ns2__RetrieveAllPermissions = ns2__RetrieveAllPermissions;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RetrieveAllPermissions(soap, &soap_tmp___ns2__RetrieveAllPermissions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RetrieveAllPermissions(soap, &soap_tmp___ns2__RetrieveAllPermissions, "-ns2:RetrieveAllPermissions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RetrieveAllPermissions(soap, &soap_tmp___ns2__RetrieveAllPermissions, "-ns2:RetrieveAllPermissions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RetrieveAllPermissionsResponse)
		return soap_closesock(soap);
	ns2__RetrieveAllPermissionsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RetrieveAllPermissionsResponse->soap_get(soap, "ns2:RetrieveAllPermissionsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__SetEntityPermissions(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__SetEntityPermissionsRequestType *ns2__SetEntityPermissions, _ns2__SetEntityPermissionsResponse *ns2__SetEntityPermissionsResponse)
{	struct __ns2__SetEntityPermissions soap_tmp___ns2__SetEntityPermissions;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__SetEntityPermissions.ns2__SetEntityPermissions = ns2__SetEntityPermissions;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__SetEntityPermissions(soap, &soap_tmp___ns2__SetEntityPermissions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__SetEntityPermissions(soap, &soap_tmp___ns2__SetEntityPermissions, "-ns2:SetEntityPermissions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__SetEntityPermissions(soap, &soap_tmp___ns2__SetEntityPermissions, "-ns2:SetEntityPermissions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__SetEntityPermissionsResponse)
		return soap_closesock(soap);
	ns2__SetEntityPermissionsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__SetEntityPermissionsResponse->soap_get(soap, "ns2:SetEntityPermissionsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ResetEntityPermissions(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ResetEntityPermissionsRequestType *ns2__ResetEntityPermissions, _ns2__ResetEntityPermissionsResponse *ns2__ResetEntityPermissionsResponse)
{	struct __ns2__ResetEntityPermissions soap_tmp___ns2__ResetEntityPermissions;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ResetEntityPermissions.ns2__ResetEntityPermissions = ns2__ResetEntityPermissions;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ResetEntityPermissions(soap, &soap_tmp___ns2__ResetEntityPermissions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ResetEntityPermissions(soap, &soap_tmp___ns2__ResetEntityPermissions, "-ns2:ResetEntityPermissions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ResetEntityPermissions(soap, &soap_tmp___ns2__ResetEntityPermissions, "-ns2:ResetEntityPermissions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ResetEntityPermissionsResponse)
		return soap_closesock(soap);
	ns2__ResetEntityPermissionsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ResetEntityPermissionsResponse->soap_get(soap, "ns2:ResetEntityPermissionsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RemoveEntityPermission(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RemoveEntityPermissionRequestType *ns2__RemoveEntityPermission, _ns2__RemoveEntityPermissionResponse *ns2__RemoveEntityPermissionResponse)
{	struct __ns2__RemoveEntityPermission soap_tmp___ns2__RemoveEntityPermission;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RemoveEntityPermission.ns2__RemoveEntityPermission = ns2__RemoveEntityPermission;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RemoveEntityPermission(soap, &soap_tmp___ns2__RemoveEntityPermission);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RemoveEntityPermission(soap, &soap_tmp___ns2__RemoveEntityPermission, "-ns2:RemoveEntityPermission", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RemoveEntityPermission(soap, &soap_tmp___ns2__RemoveEntityPermission, "-ns2:RemoveEntityPermission", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RemoveEntityPermissionResponse)
		return soap_closesock(soap);
	ns2__RemoveEntityPermissionResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RemoveEntityPermissionResponse->soap_get(soap, "ns2:RemoveEntityPermissionResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__HasPrivilegeOnEntity(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__HasPrivilegeOnEntityRequestType *ns2__HasPrivilegeOnEntity, _ns2__HasPrivilegeOnEntityResponse *ns2__HasPrivilegeOnEntityResponse)
{	struct __ns2__HasPrivilegeOnEntity soap_tmp___ns2__HasPrivilegeOnEntity;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__HasPrivilegeOnEntity.ns2__HasPrivilegeOnEntity = ns2__HasPrivilegeOnEntity;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__HasPrivilegeOnEntity(soap, &soap_tmp___ns2__HasPrivilegeOnEntity);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__HasPrivilegeOnEntity(soap, &soap_tmp___ns2__HasPrivilegeOnEntity, "-ns2:HasPrivilegeOnEntity", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__HasPrivilegeOnEntity(soap, &soap_tmp___ns2__HasPrivilegeOnEntity, "-ns2:HasPrivilegeOnEntity", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__HasPrivilegeOnEntityResponse)
		return soap_closesock(soap);
	ns2__HasPrivilegeOnEntityResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__HasPrivilegeOnEntityResponse->soap_get(soap, "ns2:HasPrivilegeOnEntityResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__HasPrivilegeOnEntities(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__HasPrivilegeOnEntitiesRequestType *ns2__HasPrivilegeOnEntities, _ns2__HasPrivilegeOnEntitiesResponse *ns2__HasPrivilegeOnEntitiesResponse)
{	struct __ns2__HasPrivilegeOnEntities soap_tmp___ns2__HasPrivilegeOnEntities;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__HasPrivilegeOnEntities.ns2__HasPrivilegeOnEntities = ns2__HasPrivilegeOnEntities;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__HasPrivilegeOnEntities(soap, &soap_tmp___ns2__HasPrivilegeOnEntities);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__HasPrivilegeOnEntities(soap, &soap_tmp___ns2__HasPrivilegeOnEntities, "-ns2:HasPrivilegeOnEntities", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__HasPrivilegeOnEntities(soap, &soap_tmp___ns2__HasPrivilegeOnEntities, "-ns2:HasPrivilegeOnEntities", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__HasPrivilegeOnEntitiesResponse)
		return soap_closesock(soap);
	ns2__HasPrivilegeOnEntitiesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__HasPrivilegeOnEntitiesResponse->soap_get(soap, "ns2:HasPrivilegeOnEntitiesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ReconfigureCluster_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ReconfigureClusterRequestType *ns2__ReconfigureCluster_USCORETask, _ns2__ReconfigureCluster_USCORETaskResponse *ns2__ReconfigureCluster_USCORETaskResponse)
{	struct __ns2__ReconfigureCluster_USCORETask soap_tmp___ns2__ReconfigureCluster_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ReconfigureCluster_USCORETask.ns2__ReconfigureCluster_USCORETask = ns2__ReconfigureCluster_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ReconfigureCluster_USCORETask(soap, &soap_tmp___ns2__ReconfigureCluster_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ReconfigureCluster_USCORETask(soap, &soap_tmp___ns2__ReconfigureCluster_USCORETask, "-ns2:ReconfigureCluster_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ReconfigureCluster_USCORETask(soap, &soap_tmp___ns2__ReconfigureCluster_USCORETask, "-ns2:ReconfigureCluster_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ReconfigureCluster_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__ReconfigureCluster_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ReconfigureCluster_USCORETaskResponse->soap_get(soap, "ns2:ReconfigureCluster_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ApplyRecommendation(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ApplyRecommendationRequestType *ns2__ApplyRecommendation, _ns2__ApplyRecommendationResponse *ns2__ApplyRecommendationResponse)
{	struct __ns2__ApplyRecommendation soap_tmp___ns2__ApplyRecommendation;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ApplyRecommendation.ns2__ApplyRecommendation = ns2__ApplyRecommendation;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ApplyRecommendation(soap, &soap_tmp___ns2__ApplyRecommendation);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ApplyRecommendation(soap, &soap_tmp___ns2__ApplyRecommendation, "-ns2:ApplyRecommendation", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ApplyRecommendation(soap, &soap_tmp___ns2__ApplyRecommendation, "-ns2:ApplyRecommendation", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ApplyRecommendationResponse)
		return soap_closesock(soap);
	ns2__ApplyRecommendationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ApplyRecommendationResponse->soap_get(soap, "ns2:ApplyRecommendationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__CancelRecommendation(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__CancelRecommendationRequestType *ns2__CancelRecommendation, _ns2__CancelRecommendationResponse *ns2__CancelRecommendationResponse)
{	struct __ns2__CancelRecommendation soap_tmp___ns2__CancelRecommendation;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__CancelRecommendation.ns2__CancelRecommendation = ns2__CancelRecommendation;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__CancelRecommendation(soap, &soap_tmp___ns2__CancelRecommendation);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__CancelRecommendation(soap, &soap_tmp___ns2__CancelRecommendation, "-ns2:CancelRecommendation", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__CancelRecommendation(soap, &soap_tmp___ns2__CancelRecommendation, "-ns2:CancelRecommendation", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CancelRecommendationResponse)
		return soap_closesock(soap);
	ns2__CancelRecommendationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CancelRecommendationResponse->soap_get(soap, "ns2:CancelRecommendationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RecommendHostsForVm(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RecommendHostsForVmRequestType *ns2__RecommendHostsForVm, _ns2__RecommendHostsForVmResponse *ns2__RecommendHostsForVmResponse)
{	struct __ns2__RecommendHostsForVm soap_tmp___ns2__RecommendHostsForVm;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RecommendHostsForVm.ns2__RecommendHostsForVm = ns2__RecommendHostsForVm;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RecommendHostsForVm(soap, &soap_tmp___ns2__RecommendHostsForVm);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RecommendHostsForVm(soap, &soap_tmp___ns2__RecommendHostsForVm, "-ns2:RecommendHostsForVm", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RecommendHostsForVm(soap, &soap_tmp___ns2__RecommendHostsForVm, "-ns2:RecommendHostsForVm", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RecommendHostsForVmResponse)
		return soap_closesock(soap);
	ns2__RecommendHostsForVmResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RecommendHostsForVmResponse->soap_get(soap, "ns2:RecommendHostsForVmResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__AddHost_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__AddHostRequestType *ns2__AddHost_USCORETask, _ns2__AddHost_USCORETaskResponse *ns2__AddHost_USCORETaskResponse)
{	struct __ns2__AddHost_USCORETask soap_tmp___ns2__AddHost_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__AddHost_USCORETask.ns2__AddHost_USCORETask = ns2__AddHost_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__AddHost_USCORETask(soap, &soap_tmp___ns2__AddHost_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__AddHost_USCORETask(soap, &soap_tmp___ns2__AddHost_USCORETask, "-ns2:AddHost_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__AddHost_USCORETask(soap, &soap_tmp___ns2__AddHost_USCORETask, "-ns2:AddHost_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__AddHost_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__AddHost_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__AddHost_USCORETaskResponse->soap_get(soap, "ns2:AddHost_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__MoveInto_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__MoveIntoRequestType *ns2__MoveInto_USCORETask, _ns2__MoveInto_USCORETaskResponse *ns2__MoveInto_USCORETaskResponse)
{	struct __ns2__MoveInto_USCORETask soap_tmp___ns2__MoveInto_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__MoveInto_USCORETask.ns2__MoveInto_USCORETask = ns2__MoveInto_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__MoveInto_USCORETask(soap, &soap_tmp___ns2__MoveInto_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__MoveInto_USCORETask(soap, &soap_tmp___ns2__MoveInto_USCORETask, "-ns2:MoveInto_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__MoveInto_USCORETask(soap, &soap_tmp___ns2__MoveInto_USCORETask, "-ns2:MoveInto_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__MoveInto_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__MoveInto_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__MoveInto_USCORETaskResponse->soap_get(soap, "ns2:MoveInto_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__MoveHostInto_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__MoveHostIntoRequestType *ns2__MoveHostInto_USCORETask, _ns2__MoveHostInto_USCORETaskResponse *ns2__MoveHostInto_USCORETaskResponse)
{	struct __ns2__MoveHostInto_USCORETask soap_tmp___ns2__MoveHostInto_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__MoveHostInto_USCORETask.ns2__MoveHostInto_USCORETask = ns2__MoveHostInto_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__MoveHostInto_USCORETask(soap, &soap_tmp___ns2__MoveHostInto_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__MoveHostInto_USCORETask(soap, &soap_tmp___ns2__MoveHostInto_USCORETask, "-ns2:MoveHostInto_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__MoveHostInto_USCORETask(soap, &soap_tmp___ns2__MoveHostInto_USCORETask, "-ns2:MoveHostInto_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__MoveHostInto_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__MoveHostInto_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__MoveHostInto_USCORETaskResponse->soap_get(soap, "ns2:MoveHostInto_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RefreshRecommendation(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RefreshRecommendationRequestType *ns2__RefreshRecommendation, _ns2__RefreshRecommendationResponse *ns2__RefreshRecommendationResponse)
{	struct __ns2__RefreshRecommendation soap_tmp___ns2__RefreshRecommendation;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RefreshRecommendation.ns2__RefreshRecommendation = ns2__RefreshRecommendation;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RefreshRecommendation(soap, &soap_tmp___ns2__RefreshRecommendation);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RefreshRecommendation(soap, &soap_tmp___ns2__RefreshRecommendation, "-ns2:RefreshRecommendation", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RefreshRecommendation(soap, &soap_tmp___ns2__RefreshRecommendation, "-ns2:RefreshRecommendation", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RefreshRecommendationResponse)
		return soap_closesock(soap);
	ns2__RefreshRecommendationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RefreshRecommendationResponse->soap_get(soap, "ns2:RefreshRecommendationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RetrieveDasAdvancedRuntimeInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RetrieveDasAdvancedRuntimeInfoRequestType *ns2__RetrieveDasAdvancedRuntimeInfo, _ns2__RetrieveDasAdvancedRuntimeInfoResponse *ns2__RetrieveDasAdvancedRuntimeInfoResponse)
{	struct __ns2__RetrieveDasAdvancedRuntimeInfo soap_tmp___ns2__RetrieveDasAdvancedRuntimeInfo;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RetrieveDasAdvancedRuntimeInfo.ns2__RetrieveDasAdvancedRuntimeInfo = ns2__RetrieveDasAdvancedRuntimeInfo;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RetrieveDasAdvancedRuntimeInfo(soap, &soap_tmp___ns2__RetrieveDasAdvancedRuntimeInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RetrieveDasAdvancedRuntimeInfo(soap, &soap_tmp___ns2__RetrieveDasAdvancedRuntimeInfo, "-ns2:RetrieveDasAdvancedRuntimeInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RetrieveDasAdvancedRuntimeInfo(soap, &soap_tmp___ns2__RetrieveDasAdvancedRuntimeInfo, "-ns2:RetrieveDasAdvancedRuntimeInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RetrieveDasAdvancedRuntimeInfoResponse)
		return soap_closesock(soap);
	ns2__RetrieveDasAdvancedRuntimeInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RetrieveDasAdvancedRuntimeInfoResponse->soap_get(soap, "ns2:RetrieveDasAdvancedRuntimeInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ClusterEnterMaintenanceMode(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ClusterEnterMaintenanceModeRequestType *ns2__ClusterEnterMaintenanceMode, _ns2__ClusterEnterMaintenanceModeResponse *ns2__ClusterEnterMaintenanceModeResponse)
{	struct __ns2__ClusterEnterMaintenanceMode soap_tmp___ns2__ClusterEnterMaintenanceMode;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ClusterEnterMaintenanceMode.ns2__ClusterEnterMaintenanceMode = ns2__ClusterEnterMaintenanceMode;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ClusterEnterMaintenanceMode(soap, &soap_tmp___ns2__ClusterEnterMaintenanceMode);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ClusterEnterMaintenanceMode(soap, &soap_tmp___ns2__ClusterEnterMaintenanceMode, "-ns2:ClusterEnterMaintenanceMode", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ClusterEnterMaintenanceMode(soap, &soap_tmp___ns2__ClusterEnterMaintenanceMode, "-ns2:ClusterEnterMaintenanceMode", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ClusterEnterMaintenanceModeResponse)
		return soap_closesock(soap);
	ns2__ClusterEnterMaintenanceModeResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ClusterEnterMaintenanceModeResponse->soap_get(soap, "ns2:ClusterEnterMaintenanceModeResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ReconfigureComputeResource_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ReconfigureComputeResourceRequestType *ns2__ReconfigureComputeResource_USCORETask, _ns2__ReconfigureComputeResource_USCORETaskResponse *ns2__ReconfigureComputeResource_USCORETaskResponse)
{	struct __ns2__ReconfigureComputeResource_USCORETask soap_tmp___ns2__ReconfigureComputeResource_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ReconfigureComputeResource_USCORETask.ns2__ReconfigureComputeResource_USCORETask = ns2__ReconfigureComputeResource_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ReconfigureComputeResource_USCORETask(soap, &soap_tmp___ns2__ReconfigureComputeResource_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ReconfigureComputeResource_USCORETask(soap, &soap_tmp___ns2__ReconfigureComputeResource_USCORETask, "-ns2:ReconfigureComputeResource_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ReconfigureComputeResource_USCORETask(soap, &soap_tmp___ns2__ReconfigureComputeResource_USCORETask, "-ns2:ReconfigureComputeResource_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ReconfigureComputeResource_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__ReconfigureComputeResource_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ReconfigureComputeResource_USCORETaskResponse->soap_get(soap, "ns2:ReconfigureComputeResource_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__AddCustomFieldDef(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__AddCustomFieldDefRequestType *ns2__AddCustomFieldDef, _ns2__AddCustomFieldDefResponse *ns2__AddCustomFieldDefResponse)
{	struct __ns2__AddCustomFieldDef soap_tmp___ns2__AddCustomFieldDef;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__AddCustomFieldDef.ns2__AddCustomFieldDef = ns2__AddCustomFieldDef;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__AddCustomFieldDef(soap, &soap_tmp___ns2__AddCustomFieldDef);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__AddCustomFieldDef(soap, &soap_tmp___ns2__AddCustomFieldDef, "-ns2:AddCustomFieldDef", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__AddCustomFieldDef(soap, &soap_tmp___ns2__AddCustomFieldDef, "-ns2:AddCustomFieldDef", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__AddCustomFieldDefResponse)
		return soap_closesock(soap);
	ns2__AddCustomFieldDefResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__AddCustomFieldDefResponse->soap_get(soap, "ns2:AddCustomFieldDefResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RemoveCustomFieldDef(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RemoveCustomFieldDefRequestType *ns2__RemoveCustomFieldDef, _ns2__RemoveCustomFieldDefResponse *ns2__RemoveCustomFieldDefResponse)
{	struct __ns2__RemoveCustomFieldDef soap_tmp___ns2__RemoveCustomFieldDef;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RemoveCustomFieldDef.ns2__RemoveCustomFieldDef = ns2__RemoveCustomFieldDef;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RemoveCustomFieldDef(soap, &soap_tmp___ns2__RemoveCustomFieldDef);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RemoveCustomFieldDef(soap, &soap_tmp___ns2__RemoveCustomFieldDef, "-ns2:RemoveCustomFieldDef", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RemoveCustomFieldDef(soap, &soap_tmp___ns2__RemoveCustomFieldDef, "-ns2:RemoveCustomFieldDef", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RemoveCustomFieldDefResponse)
		return soap_closesock(soap);
	ns2__RemoveCustomFieldDefResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RemoveCustomFieldDefResponse->soap_get(soap, "ns2:RemoveCustomFieldDefResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RenameCustomFieldDef(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RenameCustomFieldDefRequestType *ns2__RenameCustomFieldDef, _ns2__RenameCustomFieldDefResponse *ns2__RenameCustomFieldDefResponse)
{	struct __ns2__RenameCustomFieldDef soap_tmp___ns2__RenameCustomFieldDef;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RenameCustomFieldDef.ns2__RenameCustomFieldDef = ns2__RenameCustomFieldDef;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RenameCustomFieldDef(soap, &soap_tmp___ns2__RenameCustomFieldDef);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RenameCustomFieldDef(soap, &soap_tmp___ns2__RenameCustomFieldDef, "-ns2:RenameCustomFieldDef", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RenameCustomFieldDef(soap, &soap_tmp___ns2__RenameCustomFieldDef, "-ns2:RenameCustomFieldDef", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RenameCustomFieldDefResponse)
		return soap_closesock(soap);
	ns2__RenameCustomFieldDefResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RenameCustomFieldDefResponse->soap_get(soap, "ns2:RenameCustomFieldDefResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__SetField(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__SetFieldRequestType *ns2__SetField, _ns2__SetFieldResponse *ns2__SetFieldResponse)
{	struct __ns2__SetField soap_tmp___ns2__SetField;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__SetField.ns2__SetField = ns2__SetField;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__SetField(soap, &soap_tmp___ns2__SetField);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__SetField(soap, &soap_tmp___ns2__SetField, "-ns2:SetField", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__SetField(soap, &soap_tmp___ns2__SetField, "-ns2:SetField", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__SetFieldResponse)
		return soap_closesock(soap);
	ns2__SetFieldResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__SetFieldResponse->soap_get(soap, "ns2:SetFieldResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__DoesCustomizationSpecExist(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__DoesCustomizationSpecExistRequestType *ns2__DoesCustomizationSpecExist, _ns2__DoesCustomizationSpecExistResponse *ns2__DoesCustomizationSpecExistResponse)
{	struct __ns2__DoesCustomizationSpecExist soap_tmp___ns2__DoesCustomizationSpecExist;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__DoesCustomizationSpecExist.ns2__DoesCustomizationSpecExist = ns2__DoesCustomizationSpecExist;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__DoesCustomizationSpecExist(soap, &soap_tmp___ns2__DoesCustomizationSpecExist);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__DoesCustomizationSpecExist(soap, &soap_tmp___ns2__DoesCustomizationSpecExist, "-ns2:DoesCustomizationSpecExist", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__DoesCustomizationSpecExist(soap, &soap_tmp___ns2__DoesCustomizationSpecExist, "-ns2:DoesCustomizationSpecExist", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__DoesCustomizationSpecExistResponse)
		return soap_closesock(soap);
	ns2__DoesCustomizationSpecExistResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__DoesCustomizationSpecExistResponse->soap_get(soap, "ns2:DoesCustomizationSpecExistResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__GetCustomizationSpec(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__GetCustomizationSpecRequestType *ns2__GetCustomizationSpec, _ns2__GetCustomizationSpecResponse *ns2__GetCustomizationSpecResponse)
{	struct __ns2__GetCustomizationSpec soap_tmp___ns2__GetCustomizationSpec;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__GetCustomizationSpec.ns2__GetCustomizationSpec = ns2__GetCustomizationSpec;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__GetCustomizationSpec(soap, &soap_tmp___ns2__GetCustomizationSpec);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__GetCustomizationSpec(soap, &soap_tmp___ns2__GetCustomizationSpec, "-ns2:GetCustomizationSpec", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__GetCustomizationSpec(soap, &soap_tmp___ns2__GetCustomizationSpec, "-ns2:GetCustomizationSpec", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__GetCustomizationSpecResponse)
		return soap_closesock(soap);
	ns2__GetCustomizationSpecResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__GetCustomizationSpecResponse->soap_get(soap, "ns2:GetCustomizationSpecResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__CreateCustomizationSpec(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__CreateCustomizationSpecRequestType *ns2__CreateCustomizationSpec, _ns2__CreateCustomizationSpecResponse *ns2__CreateCustomizationSpecResponse)
{	struct __ns2__CreateCustomizationSpec soap_tmp___ns2__CreateCustomizationSpec;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__CreateCustomizationSpec.ns2__CreateCustomizationSpec = ns2__CreateCustomizationSpec;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__CreateCustomizationSpec(soap, &soap_tmp___ns2__CreateCustomizationSpec);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__CreateCustomizationSpec(soap, &soap_tmp___ns2__CreateCustomizationSpec, "-ns2:CreateCustomizationSpec", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__CreateCustomizationSpec(soap, &soap_tmp___ns2__CreateCustomizationSpec, "-ns2:CreateCustomizationSpec", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CreateCustomizationSpecResponse)
		return soap_closesock(soap);
	ns2__CreateCustomizationSpecResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CreateCustomizationSpecResponse->soap_get(soap, "ns2:CreateCustomizationSpecResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__OverwriteCustomizationSpec(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__OverwriteCustomizationSpecRequestType *ns2__OverwriteCustomizationSpec, _ns2__OverwriteCustomizationSpecResponse *ns2__OverwriteCustomizationSpecResponse)
{	struct __ns2__OverwriteCustomizationSpec soap_tmp___ns2__OverwriteCustomizationSpec;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__OverwriteCustomizationSpec.ns2__OverwriteCustomizationSpec = ns2__OverwriteCustomizationSpec;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__OverwriteCustomizationSpec(soap, &soap_tmp___ns2__OverwriteCustomizationSpec);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__OverwriteCustomizationSpec(soap, &soap_tmp___ns2__OverwriteCustomizationSpec, "-ns2:OverwriteCustomizationSpec", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__OverwriteCustomizationSpec(soap, &soap_tmp___ns2__OverwriteCustomizationSpec, "-ns2:OverwriteCustomizationSpec", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__OverwriteCustomizationSpecResponse)
		return soap_closesock(soap);
	ns2__OverwriteCustomizationSpecResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__OverwriteCustomizationSpecResponse->soap_get(soap, "ns2:OverwriteCustomizationSpecResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__DeleteCustomizationSpec(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__DeleteCustomizationSpecRequestType *ns2__DeleteCustomizationSpec, _ns2__DeleteCustomizationSpecResponse *ns2__DeleteCustomizationSpecResponse)
{	struct __ns2__DeleteCustomizationSpec soap_tmp___ns2__DeleteCustomizationSpec;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__DeleteCustomizationSpec.ns2__DeleteCustomizationSpec = ns2__DeleteCustomizationSpec;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__DeleteCustomizationSpec(soap, &soap_tmp___ns2__DeleteCustomizationSpec);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__DeleteCustomizationSpec(soap, &soap_tmp___ns2__DeleteCustomizationSpec, "-ns2:DeleteCustomizationSpec", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__DeleteCustomizationSpec(soap, &soap_tmp___ns2__DeleteCustomizationSpec, "-ns2:DeleteCustomizationSpec", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__DeleteCustomizationSpecResponse)
		return soap_closesock(soap);
	ns2__DeleteCustomizationSpecResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__DeleteCustomizationSpecResponse->soap_get(soap, "ns2:DeleteCustomizationSpecResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__DuplicateCustomizationSpec(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__DuplicateCustomizationSpecRequestType *ns2__DuplicateCustomizationSpec, _ns2__DuplicateCustomizationSpecResponse *ns2__DuplicateCustomizationSpecResponse)
{	struct __ns2__DuplicateCustomizationSpec soap_tmp___ns2__DuplicateCustomizationSpec;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__DuplicateCustomizationSpec.ns2__DuplicateCustomizationSpec = ns2__DuplicateCustomizationSpec;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__DuplicateCustomizationSpec(soap, &soap_tmp___ns2__DuplicateCustomizationSpec);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__DuplicateCustomizationSpec(soap, &soap_tmp___ns2__DuplicateCustomizationSpec, "-ns2:DuplicateCustomizationSpec", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__DuplicateCustomizationSpec(soap, &soap_tmp___ns2__DuplicateCustomizationSpec, "-ns2:DuplicateCustomizationSpec", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__DuplicateCustomizationSpecResponse)
		return soap_closesock(soap);
	ns2__DuplicateCustomizationSpecResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__DuplicateCustomizationSpecResponse->soap_get(soap, "ns2:DuplicateCustomizationSpecResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RenameCustomizationSpec(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RenameCustomizationSpecRequestType *ns2__RenameCustomizationSpec, _ns2__RenameCustomizationSpecResponse *ns2__RenameCustomizationSpecResponse)
{	struct __ns2__RenameCustomizationSpec soap_tmp___ns2__RenameCustomizationSpec;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RenameCustomizationSpec.ns2__RenameCustomizationSpec = ns2__RenameCustomizationSpec;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RenameCustomizationSpec(soap, &soap_tmp___ns2__RenameCustomizationSpec);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RenameCustomizationSpec(soap, &soap_tmp___ns2__RenameCustomizationSpec, "-ns2:RenameCustomizationSpec", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RenameCustomizationSpec(soap, &soap_tmp___ns2__RenameCustomizationSpec, "-ns2:RenameCustomizationSpec", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RenameCustomizationSpecResponse)
		return soap_closesock(soap);
	ns2__RenameCustomizationSpecResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RenameCustomizationSpecResponse->soap_get(soap, "ns2:RenameCustomizationSpecResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__CustomizationSpecItemToXml(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__CustomizationSpecItemToXmlRequestType *ns2__CustomizationSpecItemToXml, _ns2__CustomizationSpecItemToXmlResponse *ns2__CustomizationSpecItemToXmlResponse)
{	struct __ns2__CustomizationSpecItemToXml soap_tmp___ns2__CustomizationSpecItemToXml;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__CustomizationSpecItemToXml.ns2__CustomizationSpecItemToXml = ns2__CustomizationSpecItemToXml;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__CustomizationSpecItemToXml(soap, &soap_tmp___ns2__CustomizationSpecItemToXml);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__CustomizationSpecItemToXml(soap, &soap_tmp___ns2__CustomizationSpecItemToXml, "-ns2:CustomizationSpecItemToXml", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__CustomizationSpecItemToXml(soap, &soap_tmp___ns2__CustomizationSpecItemToXml, "-ns2:CustomizationSpecItemToXml", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CustomizationSpecItemToXmlResponse)
		return soap_closesock(soap);
	ns2__CustomizationSpecItemToXmlResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CustomizationSpecItemToXmlResponse->soap_get(soap, "ns2:CustomizationSpecItemToXmlResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__XmlToCustomizationSpecItem(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__XmlToCustomizationSpecItemRequestType *ns2__XmlToCustomizationSpecItem, _ns2__XmlToCustomizationSpecItemResponse *ns2__XmlToCustomizationSpecItemResponse)
{	struct __ns2__XmlToCustomizationSpecItem soap_tmp___ns2__XmlToCustomizationSpecItem;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__XmlToCustomizationSpecItem.ns2__XmlToCustomizationSpecItem = ns2__XmlToCustomizationSpecItem;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__XmlToCustomizationSpecItem(soap, &soap_tmp___ns2__XmlToCustomizationSpecItem);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__XmlToCustomizationSpecItem(soap, &soap_tmp___ns2__XmlToCustomizationSpecItem, "-ns2:XmlToCustomizationSpecItem", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__XmlToCustomizationSpecItem(soap, &soap_tmp___ns2__XmlToCustomizationSpecItem, "-ns2:XmlToCustomizationSpecItem", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__XmlToCustomizationSpecItemResponse)
		return soap_closesock(soap);
	ns2__XmlToCustomizationSpecItemResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__XmlToCustomizationSpecItemResponse->soap_get(soap, "ns2:XmlToCustomizationSpecItemResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__CheckCustomizationResources(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__CheckCustomizationResourcesRequestType *ns2__CheckCustomizationResources, _ns2__CheckCustomizationResourcesResponse *ns2__CheckCustomizationResourcesResponse)
{	struct __ns2__CheckCustomizationResources soap_tmp___ns2__CheckCustomizationResources;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__CheckCustomizationResources.ns2__CheckCustomizationResources = ns2__CheckCustomizationResources;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__CheckCustomizationResources(soap, &soap_tmp___ns2__CheckCustomizationResources);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__CheckCustomizationResources(soap, &soap_tmp___ns2__CheckCustomizationResources, "-ns2:CheckCustomizationResources", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__CheckCustomizationResources(soap, &soap_tmp___ns2__CheckCustomizationResources, "-ns2:CheckCustomizationResources", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CheckCustomizationResourcesResponse)
		return soap_closesock(soap);
	ns2__CheckCustomizationResourcesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CheckCustomizationResourcesResponse->soap_get(soap, "ns2:CheckCustomizationResourcesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryConnectionInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryConnectionInfoRequestType *ns2__QueryConnectionInfo, _ns2__QueryConnectionInfoResponse *ns2__QueryConnectionInfoResponse)
{	struct __ns2__QueryConnectionInfo soap_tmp___ns2__QueryConnectionInfo;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryConnectionInfo.ns2__QueryConnectionInfo = ns2__QueryConnectionInfo;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryConnectionInfo(soap, &soap_tmp___ns2__QueryConnectionInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryConnectionInfo(soap, &soap_tmp___ns2__QueryConnectionInfo, "-ns2:QueryConnectionInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryConnectionInfo(soap, &soap_tmp___ns2__QueryConnectionInfo, "-ns2:QueryConnectionInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryConnectionInfoResponse)
		return soap_closesock(soap);
	ns2__QueryConnectionInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryConnectionInfoResponse->soap_get(soap, "ns2:QueryConnectionInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__PowerOnMultiVM_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__PowerOnMultiVMRequestType *ns2__PowerOnMultiVM_USCORETask, _ns2__PowerOnMultiVM_USCORETaskResponse *ns2__PowerOnMultiVM_USCORETaskResponse)
{	struct __ns2__PowerOnMultiVM_USCORETask soap_tmp___ns2__PowerOnMultiVM_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__PowerOnMultiVM_USCORETask.ns2__PowerOnMultiVM_USCORETask = ns2__PowerOnMultiVM_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__PowerOnMultiVM_USCORETask(soap, &soap_tmp___ns2__PowerOnMultiVM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__PowerOnMultiVM_USCORETask(soap, &soap_tmp___ns2__PowerOnMultiVM_USCORETask, "-ns2:PowerOnMultiVM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__PowerOnMultiVM_USCORETask(soap, &soap_tmp___ns2__PowerOnMultiVM_USCORETask, "-ns2:PowerOnMultiVM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__PowerOnMultiVM_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__PowerOnMultiVM_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__PowerOnMultiVM_USCORETaskResponse->soap_get(soap, "ns2:PowerOnMultiVM_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__queryDatacenterConfigOptionDescriptor(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__queryDatacenterConfigOptionDescriptorRequestType *ns2__queryDatacenterConfigOptionDescriptor, _ns2__queryDatacenterConfigOptionDescriptorResponse *ns2__queryDatacenterConfigOptionDescriptorResponse)
{	struct __ns2__queryDatacenterConfigOptionDescriptor soap_tmp___ns2__queryDatacenterConfigOptionDescriptor;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__queryDatacenterConfigOptionDescriptor.ns2__queryDatacenterConfigOptionDescriptor = ns2__queryDatacenterConfigOptionDescriptor;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__queryDatacenterConfigOptionDescriptor(soap, &soap_tmp___ns2__queryDatacenterConfigOptionDescriptor);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__queryDatacenterConfigOptionDescriptor(soap, &soap_tmp___ns2__queryDatacenterConfigOptionDescriptor, "-ns2:queryDatacenterConfigOptionDescriptor", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__queryDatacenterConfigOptionDescriptor(soap, &soap_tmp___ns2__queryDatacenterConfigOptionDescriptor, "-ns2:queryDatacenterConfigOptionDescriptor", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__queryDatacenterConfigOptionDescriptorResponse)
		return soap_closesock(soap);
	ns2__queryDatacenterConfigOptionDescriptorResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__queryDatacenterConfigOptionDescriptorResponse->soap_get(soap, "ns2:queryDatacenterConfigOptionDescriptorResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ReconfigureDatacenter_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ReconfigureDatacenterRequestType *ns2__ReconfigureDatacenter_USCORETask, _ns2__ReconfigureDatacenter_USCORETaskResponse *ns2__ReconfigureDatacenter_USCORETaskResponse)
{	struct __ns2__ReconfigureDatacenter_USCORETask soap_tmp___ns2__ReconfigureDatacenter_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ReconfigureDatacenter_USCORETask.ns2__ReconfigureDatacenter_USCORETask = ns2__ReconfigureDatacenter_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ReconfigureDatacenter_USCORETask(soap, &soap_tmp___ns2__ReconfigureDatacenter_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ReconfigureDatacenter_USCORETask(soap, &soap_tmp___ns2__ReconfigureDatacenter_USCORETask, "-ns2:ReconfigureDatacenter_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ReconfigureDatacenter_USCORETask(soap, &soap_tmp___ns2__ReconfigureDatacenter_USCORETask, "-ns2:ReconfigureDatacenter_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ReconfigureDatacenter_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__ReconfigureDatacenter_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ReconfigureDatacenter_USCORETaskResponse->soap_get(soap, "ns2:ReconfigureDatacenter_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RefreshDatastore(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RefreshDatastoreRequestType *ns2__RefreshDatastore, _ns2__RefreshDatastoreResponse *ns2__RefreshDatastoreResponse)
{	struct __ns2__RefreshDatastore soap_tmp___ns2__RefreshDatastore;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RefreshDatastore.ns2__RefreshDatastore = ns2__RefreshDatastore;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RefreshDatastore(soap, &soap_tmp___ns2__RefreshDatastore);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RefreshDatastore(soap, &soap_tmp___ns2__RefreshDatastore, "-ns2:RefreshDatastore", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RefreshDatastore(soap, &soap_tmp___ns2__RefreshDatastore, "-ns2:RefreshDatastore", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RefreshDatastoreResponse)
		return soap_closesock(soap);
	ns2__RefreshDatastoreResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RefreshDatastoreResponse->soap_get(soap, "ns2:RefreshDatastoreResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RefreshDatastoreStorageInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RefreshDatastoreStorageInfoRequestType *ns2__RefreshDatastoreStorageInfo, _ns2__RefreshDatastoreStorageInfoResponse *ns2__RefreshDatastoreStorageInfoResponse)
{	struct __ns2__RefreshDatastoreStorageInfo soap_tmp___ns2__RefreshDatastoreStorageInfo;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RefreshDatastoreStorageInfo.ns2__RefreshDatastoreStorageInfo = ns2__RefreshDatastoreStorageInfo;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RefreshDatastoreStorageInfo(soap, &soap_tmp___ns2__RefreshDatastoreStorageInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RefreshDatastoreStorageInfo(soap, &soap_tmp___ns2__RefreshDatastoreStorageInfo, "-ns2:RefreshDatastoreStorageInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RefreshDatastoreStorageInfo(soap, &soap_tmp___ns2__RefreshDatastoreStorageInfo, "-ns2:RefreshDatastoreStorageInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RefreshDatastoreStorageInfoResponse)
		return soap_closesock(soap);
	ns2__RefreshDatastoreStorageInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RefreshDatastoreStorageInfoResponse->soap_get(soap, "ns2:RefreshDatastoreStorageInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UpdateVirtualMachineFiles_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UpdateVirtualMachineFilesRequestType *ns2__UpdateVirtualMachineFiles_USCORETask, _ns2__UpdateVirtualMachineFiles_USCORETaskResponse *ns2__UpdateVirtualMachineFiles_USCORETaskResponse)
{	struct __ns2__UpdateVirtualMachineFiles_USCORETask soap_tmp___ns2__UpdateVirtualMachineFiles_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UpdateVirtualMachineFiles_USCORETask.ns2__UpdateVirtualMachineFiles_USCORETask = ns2__UpdateVirtualMachineFiles_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UpdateVirtualMachineFiles_USCORETask(soap, &soap_tmp___ns2__UpdateVirtualMachineFiles_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UpdateVirtualMachineFiles_USCORETask(soap, &soap_tmp___ns2__UpdateVirtualMachineFiles_USCORETask, "-ns2:UpdateVirtualMachineFiles_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UpdateVirtualMachineFiles_USCORETask(soap, &soap_tmp___ns2__UpdateVirtualMachineFiles_USCORETask, "-ns2:UpdateVirtualMachineFiles_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UpdateVirtualMachineFiles_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__UpdateVirtualMachineFiles_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UpdateVirtualMachineFiles_USCORETaskResponse->soap_get(soap, "ns2:UpdateVirtualMachineFiles_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RenameDatastore(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RenameDatastoreRequestType *ns2__RenameDatastore, _ns2__RenameDatastoreResponse *ns2__RenameDatastoreResponse)
{	struct __ns2__RenameDatastore soap_tmp___ns2__RenameDatastore;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RenameDatastore.ns2__RenameDatastore = ns2__RenameDatastore;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RenameDatastore(soap, &soap_tmp___ns2__RenameDatastore);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RenameDatastore(soap, &soap_tmp___ns2__RenameDatastore, "-ns2:RenameDatastore", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RenameDatastore(soap, &soap_tmp___ns2__RenameDatastore, "-ns2:RenameDatastore", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RenameDatastoreResponse)
		return soap_closesock(soap);
	ns2__RenameDatastoreResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RenameDatastoreResponse->soap_get(soap, "ns2:RenameDatastoreResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__DestroyDatastore(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__DestroyDatastoreRequestType *ns2__DestroyDatastore, _ns2__DestroyDatastoreResponse *ns2__DestroyDatastoreResponse)
{	struct __ns2__DestroyDatastore soap_tmp___ns2__DestroyDatastore;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__DestroyDatastore.ns2__DestroyDatastore = ns2__DestroyDatastore;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__DestroyDatastore(soap, &soap_tmp___ns2__DestroyDatastore);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__DestroyDatastore(soap, &soap_tmp___ns2__DestroyDatastore, "-ns2:DestroyDatastore", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__DestroyDatastore(soap, &soap_tmp___ns2__DestroyDatastore, "-ns2:DestroyDatastore", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__DestroyDatastoreResponse)
		return soap_closesock(soap);
	ns2__DestroyDatastoreResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__DestroyDatastoreResponse->soap_get(soap, "ns2:DestroyDatastoreResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__DatastoreEnterMaintenanceMode(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__DatastoreEnterMaintenanceModeRequestType *ns2__DatastoreEnterMaintenanceMode, _ns2__DatastoreEnterMaintenanceModeResponse *ns2__DatastoreEnterMaintenanceModeResponse)
{	struct __ns2__DatastoreEnterMaintenanceMode soap_tmp___ns2__DatastoreEnterMaintenanceMode;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__DatastoreEnterMaintenanceMode.ns2__DatastoreEnterMaintenanceMode = ns2__DatastoreEnterMaintenanceMode;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__DatastoreEnterMaintenanceMode(soap, &soap_tmp___ns2__DatastoreEnterMaintenanceMode);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__DatastoreEnterMaintenanceMode(soap, &soap_tmp___ns2__DatastoreEnterMaintenanceMode, "-ns2:DatastoreEnterMaintenanceMode", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__DatastoreEnterMaintenanceMode(soap, &soap_tmp___ns2__DatastoreEnterMaintenanceMode, "-ns2:DatastoreEnterMaintenanceMode", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__DatastoreEnterMaintenanceModeResponse)
		return soap_closesock(soap);
	ns2__DatastoreEnterMaintenanceModeResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__DatastoreEnterMaintenanceModeResponse->soap_get(soap, "ns2:DatastoreEnterMaintenanceModeResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__DatastoreExitMaintenanceMode_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__DatastoreExitMaintenanceModeRequestType *ns2__DatastoreExitMaintenanceMode_USCORETask, _ns2__DatastoreExitMaintenanceMode_USCORETaskResponse *ns2__DatastoreExitMaintenanceMode_USCORETaskResponse)
{	struct __ns2__DatastoreExitMaintenanceMode_USCORETask soap_tmp___ns2__DatastoreExitMaintenanceMode_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__DatastoreExitMaintenanceMode_USCORETask.ns2__DatastoreExitMaintenanceMode_USCORETask = ns2__DatastoreExitMaintenanceMode_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__DatastoreExitMaintenanceMode_USCORETask(soap, &soap_tmp___ns2__DatastoreExitMaintenanceMode_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__DatastoreExitMaintenanceMode_USCORETask(soap, &soap_tmp___ns2__DatastoreExitMaintenanceMode_USCORETask, "-ns2:DatastoreExitMaintenanceMode_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__DatastoreExitMaintenanceMode_USCORETask(soap, &soap_tmp___ns2__DatastoreExitMaintenanceMode_USCORETask, "-ns2:DatastoreExitMaintenanceMode_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__DatastoreExitMaintenanceMode_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__DatastoreExitMaintenanceMode_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__DatastoreExitMaintenanceMode_USCORETaskResponse->soap_get(soap, "ns2:DatastoreExitMaintenanceMode_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__CreateDirectory(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__CreateDirectoryRequestType *ns2__CreateDirectory, _ns2__CreateDirectoryResponse *ns2__CreateDirectoryResponse)
{	struct __ns2__CreateDirectory soap_tmp___ns2__CreateDirectory;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__CreateDirectory.ns2__CreateDirectory = ns2__CreateDirectory;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__CreateDirectory(soap, &soap_tmp___ns2__CreateDirectory);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__CreateDirectory(soap, &soap_tmp___ns2__CreateDirectory, "-ns2:CreateDirectory", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__CreateDirectory(soap, &soap_tmp___ns2__CreateDirectory, "-ns2:CreateDirectory", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CreateDirectoryResponse)
		return soap_closesock(soap);
	ns2__CreateDirectoryResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CreateDirectoryResponse->soap_get(soap, "ns2:CreateDirectoryResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__DeleteDirectory(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__DeleteDirectoryRequestType *ns2__DeleteDirectory, _ns2__DeleteDirectoryResponse *ns2__DeleteDirectoryResponse)
{	struct __ns2__DeleteDirectory soap_tmp___ns2__DeleteDirectory;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__DeleteDirectory.ns2__DeleteDirectory = ns2__DeleteDirectory;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__DeleteDirectory(soap, &soap_tmp___ns2__DeleteDirectory);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__DeleteDirectory(soap, &soap_tmp___ns2__DeleteDirectory, "-ns2:DeleteDirectory", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__DeleteDirectory(soap, &soap_tmp___ns2__DeleteDirectory, "-ns2:DeleteDirectory", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__DeleteDirectoryResponse)
		return soap_closesock(soap);
	ns2__DeleteDirectoryResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__DeleteDirectoryResponse->soap_get(soap, "ns2:DeleteDirectoryResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryDescriptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryDescriptionsRequestType *ns2__QueryDescriptions, _ns2__QueryDescriptionsResponse *ns2__QueryDescriptionsResponse)
{	struct __ns2__QueryDescriptions soap_tmp___ns2__QueryDescriptions;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryDescriptions.ns2__QueryDescriptions = ns2__QueryDescriptions;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryDescriptions(soap, &soap_tmp___ns2__QueryDescriptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryDescriptions(soap, &soap_tmp___ns2__QueryDescriptions, "-ns2:QueryDescriptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryDescriptions(soap, &soap_tmp___ns2__QueryDescriptions, "-ns2:QueryDescriptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryDescriptionsResponse)
		return soap_closesock(soap);
	ns2__QueryDescriptionsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryDescriptionsResponse->soap_get(soap, "ns2:QueryDescriptionsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__BrowseDiagnosticLog(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__BrowseDiagnosticLogRequestType *ns2__BrowseDiagnosticLog, _ns2__BrowseDiagnosticLogResponse *ns2__BrowseDiagnosticLogResponse)
{	struct __ns2__BrowseDiagnosticLog soap_tmp___ns2__BrowseDiagnosticLog;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__BrowseDiagnosticLog.ns2__BrowseDiagnosticLog = ns2__BrowseDiagnosticLog;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__BrowseDiagnosticLog(soap, &soap_tmp___ns2__BrowseDiagnosticLog);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__BrowseDiagnosticLog(soap, &soap_tmp___ns2__BrowseDiagnosticLog, "-ns2:BrowseDiagnosticLog", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__BrowseDiagnosticLog(soap, &soap_tmp___ns2__BrowseDiagnosticLog, "-ns2:BrowseDiagnosticLog", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__BrowseDiagnosticLogResponse)
		return soap_closesock(soap);
	ns2__BrowseDiagnosticLogResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__BrowseDiagnosticLogResponse->soap_get(soap, "ns2:BrowseDiagnosticLogResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__GenerateLogBundles_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__GenerateLogBundlesRequestType *ns2__GenerateLogBundles_USCORETask, _ns2__GenerateLogBundles_USCORETaskResponse *ns2__GenerateLogBundles_USCORETaskResponse)
{	struct __ns2__GenerateLogBundles_USCORETask soap_tmp___ns2__GenerateLogBundles_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__GenerateLogBundles_USCORETask.ns2__GenerateLogBundles_USCORETask = ns2__GenerateLogBundles_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__GenerateLogBundles_USCORETask(soap, &soap_tmp___ns2__GenerateLogBundles_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__GenerateLogBundles_USCORETask(soap, &soap_tmp___ns2__GenerateLogBundles_USCORETask, "-ns2:GenerateLogBundles_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__GenerateLogBundles_USCORETask(soap, &soap_tmp___ns2__GenerateLogBundles_USCORETask, "-ns2:GenerateLogBundles_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__GenerateLogBundles_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__GenerateLogBundles_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__GenerateLogBundles_USCORETaskResponse->soap_get(soap, "ns2:GenerateLogBundles_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__FetchDVPortKeys(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__FetchDVPortKeysRequestType *ns2__FetchDVPortKeys, _ns2__FetchDVPortKeysResponse *ns2__FetchDVPortKeysResponse)
{	struct __ns2__FetchDVPortKeys soap_tmp___ns2__FetchDVPortKeys;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__FetchDVPortKeys.ns2__FetchDVPortKeys = ns2__FetchDVPortKeys;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__FetchDVPortKeys(soap, &soap_tmp___ns2__FetchDVPortKeys);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__FetchDVPortKeys(soap, &soap_tmp___ns2__FetchDVPortKeys, "-ns2:FetchDVPortKeys", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__FetchDVPortKeys(soap, &soap_tmp___ns2__FetchDVPortKeys, "-ns2:FetchDVPortKeys", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__FetchDVPortKeysResponse)
		return soap_closesock(soap);
	ns2__FetchDVPortKeysResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__FetchDVPortKeysResponse->soap_get(soap, "ns2:FetchDVPortKeysResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__FetchDVPorts(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__FetchDVPortsRequestType *ns2__FetchDVPorts, _ns2__FetchDVPortsResponse *ns2__FetchDVPortsResponse)
{	struct __ns2__FetchDVPorts soap_tmp___ns2__FetchDVPorts;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__FetchDVPorts.ns2__FetchDVPorts = ns2__FetchDVPorts;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__FetchDVPorts(soap, &soap_tmp___ns2__FetchDVPorts);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__FetchDVPorts(soap, &soap_tmp___ns2__FetchDVPorts, "-ns2:FetchDVPorts", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__FetchDVPorts(soap, &soap_tmp___ns2__FetchDVPorts, "-ns2:FetchDVPorts", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__FetchDVPortsResponse)
		return soap_closesock(soap);
	ns2__FetchDVPortsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__FetchDVPortsResponse->soap_get(soap, "ns2:FetchDVPortsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryUsedVlanIdInDvs(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryUsedVlanIdInDvsRequestType *ns2__QueryUsedVlanIdInDvs, _ns2__QueryUsedVlanIdInDvsResponse *ns2__QueryUsedVlanIdInDvsResponse)
{	struct __ns2__QueryUsedVlanIdInDvs soap_tmp___ns2__QueryUsedVlanIdInDvs;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryUsedVlanIdInDvs.ns2__QueryUsedVlanIdInDvs = ns2__QueryUsedVlanIdInDvs;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryUsedVlanIdInDvs(soap, &soap_tmp___ns2__QueryUsedVlanIdInDvs);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryUsedVlanIdInDvs(soap, &soap_tmp___ns2__QueryUsedVlanIdInDvs, "-ns2:QueryUsedVlanIdInDvs", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryUsedVlanIdInDvs(soap, &soap_tmp___ns2__QueryUsedVlanIdInDvs, "-ns2:QueryUsedVlanIdInDvs", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryUsedVlanIdInDvsResponse)
		return soap_closesock(soap);
	ns2__QueryUsedVlanIdInDvsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryUsedVlanIdInDvsResponse->soap_get(soap, "ns2:QueryUsedVlanIdInDvsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ReconfigureDvs_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ReconfigureDvsRequestType *ns2__ReconfigureDvs_USCORETask, _ns2__ReconfigureDvs_USCORETaskResponse *ns2__ReconfigureDvs_USCORETaskResponse)
{	struct __ns2__ReconfigureDvs_USCORETask soap_tmp___ns2__ReconfigureDvs_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ReconfigureDvs_USCORETask.ns2__ReconfigureDvs_USCORETask = ns2__ReconfigureDvs_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ReconfigureDvs_USCORETask(soap, &soap_tmp___ns2__ReconfigureDvs_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ReconfigureDvs_USCORETask(soap, &soap_tmp___ns2__ReconfigureDvs_USCORETask, "-ns2:ReconfigureDvs_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ReconfigureDvs_USCORETask(soap, &soap_tmp___ns2__ReconfigureDvs_USCORETask, "-ns2:ReconfigureDvs_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ReconfigureDvs_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__ReconfigureDvs_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ReconfigureDvs_USCORETaskResponse->soap_get(soap, "ns2:ReconfigureDvs_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__PerformDvsProductSpecOperation_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__PerformDvsProductSpecOperationRequestType *ns2__PerformDvsProductSpecOperation_USCORETask, _ns2__PerformDvsProductSpecOperation_USCORETaskResponse *ns2__PerformDvsProductSpecOperation_USCORETaskResponse)
{	struct __ns2__PerformDvsProductSpecOperation_USCORETask soap_tmp___ns2__PerformDvsProductSpecOperation_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__PerformDvsProductSpecOperation_USCORETask.ns2__PerformDvsProductSpecOperation_USCORETask = ns2__PerformDvsProductSpecOperation_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__PerformDvsProductSpecOperation_USCORETask(soap, &soap_tmp___ns2__PerformDvsProductSpecOperation_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__PerformDvsProductSpecOperation_USCORETask(soap, &soap_tmp___ns2__PerformDvsProductSpecOperation_USCORETask, "-ns2:PerformDvsProductSpecOperation_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__PerformDvsProductSpecOperation_USCORETask(soap, &soap_tmp___ns2__PerformDvsProductSpecOperation_USCORETask, "-ns2:PerformDvsProductSpecOperation_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__PerformDvsProductSpecOperation_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__PerformDvsProductSpecOperation_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__PerformDvsProductSpecOperation_USCORETaskResponse->soap_get(soap, "ns2:PerformDvsProductSpecOperation_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__MergeDvs_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__MergeDvsRequestType *ns2__MergeDvs_USCORETask, _ns2__MergeDvs_USCORETaskResponse *ns2__MergeDvs_USCORETaskResponse)
{	struct __ns2__MergeDvs_USCORETask soap_tmp___ns2__MergeDvs_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__MergeDvs_USCORETask.ns2__MergeDvs_USCORETask = ns2__MergeDvs_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__MergeDvs_USCORETask(soap, &soap_tmp___ns2__MergeDvs_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__MergeDvs_USCORETask(soap, &soap_tmp___ns2__MergeDvs_USCORETask, "-ns2:MergeDvs_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__MergeDvs_USCORETask(soap, &soap_tmp___ns2__MergeDvs_USCORETask, "-ns2:MergeDvs_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__MergeDvs_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__MergeDvs_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__MergeDvs_USCORETaskResponse->soap_get(soap, "ns2:MergeDvs_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__AddDVPortgroup_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__AddDVPortgroupRequestType *ns2__AddDVPortgroup_USCORETask, _ns2__AddDVPortgroup_USCORETaskResponse *ns2__AddDVPortgroup_USCORETaskResponse)
{	struct __ns2__AddDVPortgroup_USCORETask soap_tmp___ns2__AddDVPortgroup_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__AddDVPortgroup_USCORETask.ns2__AddDVPortgroup_USCORETask = ns2__AddDVPortgroup_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__AddDVPortgroup_USCORETask(soap, &soap_tmp___ns2__AddDVPortgroup_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__AddDVPortgroup_USCORETask(soap, &soap_tmp___ns2__AddDVPortgroup_USCORETask, "-ns2:AddDVPortgroup_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__AddDVPortgroup_USCORETask(soap, &soap_tmp___ns2__AddDVPortgroup_USCORETask, "-ns2:AddDVPortgroup_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__AddDVPortgroup_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__AddDVPortgroup_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__AddDVPortgroup_USCORETaskResponse->soap_get(soap, "ns2:AddDVPortgroup_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__MoveDVPort_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__MoveDVPortRequestType *ns2__MoveDVPort_USCORETask, _ns2__MoveDVPort_USCORETaskResponse *ns2__MoveDVPort_USCORETaskResponse)
{	struct __ns2__MoveDVPort_USCORETask soap_tmp___ns2__MoveDVPort_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__MoveDVPort_USCORETask.ns2__MoveDVPort_USCORETask = ns2__MoveDVPort_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__MoveDVPort_USCORETask(soap, &soap_tmp___ns2__MoveDVPort_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__MoveDVPort_USCORETask(soap, &soap_tmp___ns2__MoveDVPort_USCORETask, "-ns2:MoveDVPort_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__MoveDVPort_USCORETask(soap, &soap_tmp___ns2__MoveDVPort_USCORETask, "-ns2:MoveDVPort_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__MoveDVPort_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__MoveDVPort_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__MoveDVPort_USCORETaskResponse->soap_get(soap, "ns2:MoveDVPort_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UpdateDvsCapability(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UpdateDvsCapabilityRequestType *ns2__UpdateDvsCapability, _ns2__UpdateDvsCapabilityResponse *ns2__UpdateDvsCapabilityResponse)
{	struct __ns2__UpdateDvsCapability soap_tmp___ns2__UpdateDvsCapability;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UpdateDvsCapability.ns2__UpdateDvsCapability = ns2__UpdateDvsCapability;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UpdateDvsCapability(soap, &soap_tmp___ns2__UpdateDvsCapability);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UpdateDvsCapability(soap, &soap_tmp___ns2__UpdateDvsCapability, "-ns2:UpdateDvsCapability", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UpdateDvsCapability(soap, &soap_tmp___ns2__UpdateDvsCapability, "-ns2:UpdateDvsCapability", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UpdateDvsCapabilityResponse)
		return soap_closesock(soap);
	ns2__UpdateDvsCapabilityResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UpdateDvsCapabilityResponse->soap_get(soap, "ns2:UpdateDvsCapabilityResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ReconfigureDVPort_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ReconfigureDVPortRequestType *ns2__ReconfigureDVPort_USCORETask, _ns2__ReconfigureDVPort_USCORETaskResponse *ns2__ReconfigureDVPort_USCORETaskResponse)
{	struct __ns2__ReconfigureDVPort_USCORETask soap_tmp___ns2__ReconfigureDVPort_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ReconfigureDVPort_USCORETask.ns2__ReconfigureDVPort_USCORETask = ns2__ReconfigureDVPort_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ReconfigureDVPort_USCORETask(soap, &soap_tmp___ns2__ReconfigureDVPort_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ReconfigureDVPort_USCORETask(soap, &soap_tmp___ns2__ReconfigureDVPort_USCORETask, "-ns2:ReconfigureDVPort_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ReconfigureDVPort_USCORETask(soap, &soap_tmp___ns2__ReconfigureDVPort_USCORETask, "-ns2:ReconfigureDVPort_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ReconfigureDVPort_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__ReconfigureDVPort_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ReconfigureDVPort_USCORETaskResponse->soap_get(soap, "ns2:ReconfigureDVPort_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RefreshDVPortState(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RefreshDVPortStateRequestType *ns2__RefreshDVPortState, _ns2__RefreshDVPortStateResponse *ns2__RefreshDVPortStateResponse)
{	struct __ns2__RefreshDVPortState soap_tmp___ns2__RefreshDVPortState;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RefreshDVPortState.ns2__RefreshDVPortState = ns2__RefreshDVPortState;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RefreshDVPortState(soap, &soap_tmp___ns2__RefreshDVPortState);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RefreshDVPortState(soap, &soap_tmp___ns2__RefreshDVPortState, "-ns2:RefreshDVPortState", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RefreshDVPortState(soap, &soap_tmp___ns2__RefreshDVPortState, "-ns2:RefreshDVPortState", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RefreshDVPortStateResponse)
		return soap_closesock(soap);
	ns2__RefreshDVPortStateResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RefreshDVPortStateResponse->soap_get(soap, "ns2:RefreshDVPortStateResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RectifyDvsHost_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RectifyDvsHostRequestType *ns2__RectifyDvsHost_USCORETask, _ns2__RectifyDvsHost_USCORETaskResponse *ns2__RectifyDvsHost_USCORETaskResponse)
{	struct __ns2__RectifyDvsHost_USCORETask soap_tmp___ns2__RectifyDvsHost_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RectifyDvsHost_USCORETask.ns2__RectifyDvsHost_USCORETask = ns2__RectifyDvsHost_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RectifyDvsHost_USCORETask(soap, &soap_tmp___ns2__RectifyDvsHost_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RectifyDvsHost_USCORETask(soap, &soap_tmp___ns2__RectifyDvsHost_USCORETask, "-ns2:RectifyDvsHost_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RectifyDvsHost_USCORETask(soap, &soap_tmp___ns2__RectifyDvsHost_USCORETask, "-ns2:RectifyDvsHost_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RectifyDvsHost_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__RectifyDvsHost_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RectifyDvsHost_USCORETaskResponse->soap_get(soap, "ns2:RectifyDvsHost_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UpdateNetworkResourcePool(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UpdateNetworkResourcePoolRequestType *ns2__UpdateNetworkResourcePool, _ns2__UpdateNetworkResourcePoolResponse *ns2__UpdateNetworkResourcePoolResponse)
{	struct __ns2__UpdateNetworkResourcePool soap_tmp___ns2__UpdateNetworkResourcePool;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UpdateNetworkResourcePool.ns2__UpdateNetworkResourcePool = ns2__UpdateNetworkResourcePool;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UpdateNetworkResourcePool(soap, &soap_tmp___ns2__UpdateNetworkResourcePool);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UpdateNetworkResourcePool(soap, &soap_tmp___ns2__UpdateNetworkResourcePool, "-ns2:UpdateNetworkResourcePool", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UpdateNetworkResourcePool(soap, &soap_tmp___ns2__UpdateNetworkResourcePool, "-ns2:UpdateNetworkResourcePool", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UpdateNetworkResourcePoolResponse)
		return soap_closesock(soap);
	ns2__UpdateNetworkResourcePoolResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UpdateNetworkResourcePoolResponse->soap_get(soap, "ns2:UpdateNetworkResourcePoolResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__AddNetworkResourcePool(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__AddNetworkResourcePoolRequestType *ns2__AddNetworkResourcePool, _ns2__AddNetworkResourcePoolResponse *ns2__AddNetworkResourcePoolResponse)
{	struct __ns2__AddNetworkResourcePool soap_tmp___ns2__AddNetworkResourcePool;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__AddNetworkResourcePool.ns2__AddNetworkResourcePool = ns2__AddNetworkResourcePool;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__AddNetworkResourcePool(soap, &soap_tmp___ns2__AddNetworkResourcePool);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__AddNetworkResourcePool(soap, &soap_tmp___ns2__AddNetworkResourcePool, "-ns2:AddNetworkResourcePool", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__AddNetworkResourcePool(soap, &soap_tmp___ns2__AddNetworkResourcePool, "-ns2:AddNetworkResourcePool", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__AddNetworkResourcePoolResponse)
		return soap_closesock(soap);
	ns2__AddNetworkResourcePoolResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__AddNetworkResourcePoolResponse->soap_get(soap, "ns2:AddNetworkResourcePoolResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RemoveNetworkResourcePool(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RemoveNetworkResourcePoolRequestType *ns2__RemoveNetworkResourcePool, _ns2__RemoveNetworkResourcePoolResponse *ns2__RemoveNetworkResourcePoolResponse)
{	struct __ns2__RemoveNetworkResourcePool soap_tmp___ns2__RemoveNetworkResourcePool;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RemoveNetworkResourcePool.ns2__RemoveNetworkResourcePool = ns2__RemoveNetworkResourcePool;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RemoveNetworkResourcePool(soap, &soap_tmp___ns2__RemoveNetworkResourcePool);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RemoveNetworkResourcePool(soap, &soap_tmp___ns2__RemoveNetworkResourcePool, "-ns2:RemoveNetworkResourcePool", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RemoveNetworkResourcePool(soap, &soap_tmp___ns2__RemoveNetworkResourcePool, "-ns2:RemoveNetworkResourcePool", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RemoveNetworkResourcePoolResponse)
		return soap_closesock(soap);
	ns2__RemoveNetworkResourcePoolResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RemoveNetworkResourcePoolResponse->soap_get(soap, "ns2:RemoveNetworkResourcePoolResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__EnableNetworkResourceManagement(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__EnableNetworkResourceManagementRequestType *ns2__EnableNetworkResourceManagement, _ns2__EnableNetworkResourceManagementResponse *ns2__EnableNetworkResourceManagementResponse)
{	struct __ns2__EnableNetworkResourceManagement soap_tmp___ns2__EnableNetworkResourceManagement;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__EnableNetworkResourceManagement.ns2__EnableNetworkResourceManagement = ns2__EnableNetworkResourceManagement;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__EnableNetworkResourceManagement(soap, &soap_tmp___ns2__EnableNetworkResourceManagement);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__EnableNetworkResourceManagement(soap, &soap_tmp___ns2__EnableNetworkResourceManagement, "-ns2:EnableNetworkResourceManagement", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__EnableNetworkResourceManagement(soap, &soap_tmp___ns2__EnableNetworkResourceManagement, "-ns2:EnableNetworkResourceManagement", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__EnableNetworkResourceManagementResponse)
		return soap_closesock(soap);
	ns2__EnableNetworkResourceManagementResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__EnableNetworkResourceManagementResponse->soap_get(soap, "ns2:EnableNetworkResourceManagementResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__DVSRollback_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__DVSRollbackRequestType *ns2__DVSRollback_USCORETask, _ns2__DVSRollback_USCORETaskResponse *ns2__DVSRollback_USCORETaskResponse)
{	struct __ns2__DVSRollback_USCORETask soap_tmp___ns2__DVSRollback_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__DVSRollback_USCORETask.ns2__DVSRollback_USCORETask = ns2__DVSRollback_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__DVSRollback_USCORETask(soap, &soap_tmp___ns2__DVSRollback_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__DVSRollback_USCORETask(soap, &soap_tmp___ns2__DVSRollback_USCORETask, "-ns2:DVSRollback_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__DVSRollback_USCORETask(soap, &soap_tmp___ns2__DVSRollback_USCORETask, "-ns2:DVSRollback_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__DVSRollback_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__DVSRollback_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__DVSRollback_USCORETaskResponse->soap_get(soap, "ns2:DVSRollback_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__CreateDVPortgroup_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__CreateDVPortgroupRequestType *ns2__CreateDVPortgroup_USCORETask, _ns2__CreateDVPortgroup_USCORETaskResponse *ns2__CreateDVPortgroup_USCORETaskResponse)
{	struct __ns2__CreateDVPortgroup_USCORETask soap_tmp___ns2__CreateDVPortgroup_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__CreateDVPortgroup_USCORETask.ns2__CreateDVPortgroup_USCORETask = ns2__CreateDVPortgroup_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__CreateDVPortgroup_USCORETask(soap, &soap_tmp___ns2__CreateDVPortgroup_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__CreateDVPortgroup_USCORETask(soap, &soap_tmp___ns2__CreateDVPortgroup_USCORETask, "-ns2:CreateDVPortgroup_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__CreateDVPortgroup_USCORETask(soap, &soap_tmp___ns2__CreateDVPortgroup_USCORETask, "-ns2:CreateDVPortgroup_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CreateDVPortgroup_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__CreateDVPortgroup_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CreateDVPortgroup_USCORETaskResponse->soap_get(soap, "ns2:CreateDVPortgroup_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UpdateDVSHealthCheckConfig_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UpdateDVSHealthCheckConfigRequestType *ns2__UpdateDVSHealthCheckConfig_USCORETask, _ns2__UpdateDVSHealthCheckConfig_USCORETaskResponse *ns2__UpdateDVSHealthCheckConfig_USCORETaskResponse)
{	struct __ns2__UpdateDVSHealthCheckConfig_USCORETask soap_tmp___ns2__UpdateDVSHealthCheckConfig_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UpdateDVSHealthCheckConfig_USCORETask.ns2__UpdateDVSHealthCheckConfig_USCORETask = ns2__UpdateDVSHealthCheckConfig_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UpdateDVSHealthCheckConfig_USCORETask(soap, &soap_tmp___ns2__UpdateDVSHealthCheckConfig_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UpdateDVSHealthCheckConfig_USCORETask(soap, &soap_tmp___ns2__UpdateDVSHealthCheckConfig_USCORETask, "-ns2:UpdateDVSHealthCheckConfig_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UpdateDVSHealthCheckConfig_USCORETask(soap, &soap_tmp___ns2__UpdateDVSHealthCheckConfig_USCORETask, "-ns2:UpdateDVSHealthCheckConfig_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UpdateDVSHealthCheckConfig_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__UpdateDVSHealthCheckConfig_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UpdateDVSHealthCheckConfig_USCORETaskResponse->soap_get(soap, "ns2:UpdateDVSHealthCheckConfig_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__LookupDvPortGroup(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__LookupDvPortGroupRequestType *ns2__LookupDvPortGroup, _ns2__LookupDvPortGroupResponse *ns2__LookupDvPortGroupResponse)
{	struct __ns2__LookupDvPortGroup soap_tmp___ns2__LookupDvPortGroup;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__LookupDvPortGroup.ns2__LookupDvPortGroup = ns2__LookupDvPortGroup;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__LookupDvPortGroup(soap, &soap_tmp___ns2__LookupDvPortGroup);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__LookupDvPortGroup(soap, &soap_tmp___ns2__LookupDvPortGroup, "-ns2:LookupDvPortGroup", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__LookupDvPortGroup(soap, &soap_tmp___ns2__LookupDvPortGroup, "-ns2:LookupDvPortGroup", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__LookupDvPortGroupResponse)
		return soap_closesock(soap);
	ns2__LookupDvPortGroupResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__LookupDvPortGroupResponse->soap_get(soap, "ns2:LookupDvPortGroupResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryConfigOptionDescriptor(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryConfigOptionDescriptorRequestType *ns2__QueryConfigOptionDescriptor, _ns2__QueryConfigOptionDescriptorResponse *ns2__QueryConfigOptionDescriptorResponse)
{	struct __ns2__QueryConfigOptionDescriptor soap_tmp___ns2__QueryConfigOptionDescriptor;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryConfigOptionDescriptor.ns2__QueryConfigOptionDescriptor = ns2__QueryConfigOptionDescriptor;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryConfigOptionDescriptor(soap, &soap_tmp___ns2__QueryConfigOptionDescriptor);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryConfigOptionDescriptor(soap, &soap_tmp___ns2__QueryConfigOptionDescriptor, "-ns2:QueryConfigOptionDescriptor", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryConfigOptionDescriptor(soap, &soap_tmp___ns2__QueryConfigOptionDescriptor, "-ns2:QueryConfigOptionDescriptor", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryConfigOptionDescriptorResponse)
		return soap_closesock(soap);
	ns2__QueryConfigOptionDescriptorResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryConfigOptionDescriptorResponse->soap_get(soap, "ns2:QueryConfigOptionDescriptorResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryConfigOption(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryConfigOptionRequestType *ns2__QueryConfigOption, _ns2__QueryConfigOptionResponse *ns2__QueryConfigOptionResponse)
{	struct __ns2__QueryConfigOption soap_tmp___ns2__QueryConfigOption;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryConfigOption.ns2__QueryConfigOption = ns2__QueryConfigOption;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryConfigOption(soap, &soap_tmp___ns2__QueryConfigOption);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryConfigOption(soap, &soap_tmp___ns2__QueryConfigOption, "-ns2:QueryConfigOption", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryConfigOption(soap, &soap_tmp___ns2__QueryConfigOption, "-ns2:QueryConfigOption", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryConfigOptionResponse)
		return soap_closesock(soap);
	ns2__QueryConfigOptionResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryConfigOptionResponse->soap_get(soap, "ns2:QueryConfigOptionResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryConfigTarget(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryConfigTargetRequestType *ns2__QueryConfigTarget, _ns2__QueryConfigTargetResponse *ns2__QueryConfigTargetResponse)
{	struct __ns2__QueryConfigTarget soap_tmp___ns2__QueryConfigTarget;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryConfigTarget.ns2__QueryConfigTarget = ns2__QueryConfigTarget;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryConfigTarget(soap, &soap_tmp___ns2__QueryConfigTarget);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryConfigTarget(soap, &soap_tmp___ns2__QueryConfigTarget, "-ns2:QueryConfigTarget", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryConfigTarget(soap, &soap_tmp___ns2__QueryConfigTarget, "-ns2:QueryConfigTarget", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryConfigTargetResponse)
		return soap_closesock(soap);
	ns2__QueryConfigTargetResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryConfigTargetResponse->soap_get(soap, "ns2:QueryConfigTargetResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryTargetCapabilities(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryTargetCapabilitiesRequestType *ns2__QueryTargetCapabilities, _ns2__QueryTargetCapabilitiesResponse *ns2__QueryTargetCapabilitiesResponse)
{	struct __ns2__QueryTargetCapabilities soap_tmp___ns2__QueryTargetCapabilities;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryTargetCapabilities.ns2__QueryTargetCapabilities = ns2__QueryTargetCapabilities;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryTargetCapabilities(soap, &soap_tmp___ns2__QueryTargetCapabilities);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryTargetCapabilities(soap, &soap_tmp___ns2__QueryTargetCapabilities, "-ns2:QueryTargetCapabilities", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryTargetCapabilities(soap, &soap_tmp___ns2__QueryTargetCapabilities, "-ns2:QueryTargetCapabilities", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryTargetCapabilitiesResponse)
		return soap_closesock(soap);
	ns2__QueryTargetCapabilitiesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryTargetCapabilitiesResponse->soap_get(soap, "ns2:QueryTargetCapabilitiesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__setCustomValue(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__setCustomValueRequestType *ns2__setCustomValue, _ns2__setCustomValueResponse *ns2__setCustomValueResponse)
{	struct __ns2__setCustomValue soap_tmp___ns2__setCustomValue;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__setCustomValue.ns2__setCustomValue = ns2__setCustomValue;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__setCustomValue(soap, &soap_tmp___ns2__setCustomValue);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__setCustomValue(soap, &soap_tmp___ns2__setCustomValue, "-ns2:setCustomValue", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__setCustomValue(soap, &soap_tmp___ns2__setCustomValue, "-ns2:setCustomValue", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__setCustomValueResponse)
		return soap_closesock(soap);
	ns2__setCustomValueResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__setCustomValueResponse->soap_get(soap, "ns2:setCustomValueResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UnregisterExtension(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UnregisterExtensionRequestType *ns2__UnregisterExtension, _ns2__UnregisterExtensionResponse *ns2__UnregisterExtensionResponse)
{	struct __ns2__UnregisterExtension soap_tmp___ns2__UnregisterExtension;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UnregisterExtension.ns2__UnregisterExtension = ns2__UnregisterExtension;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UnregisterExtension(soap, &soap_tmp___ns2__UnregisterExtension);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UnregisterExtension(soap, &soap_tmp___ns2__UnregisterExtension, "-ns2:UnregisterExtension", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UnregisterExtension(soap, &soap_tmp___ns2__UnregisterExtension, "-ns2:UnregisterExtension", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UnregisterExtensionResponse)
		return soap_closesock(soap);
	ns2__UnregisterExtensionResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UnregisterExtensionResponse->soap_get(soap, "ns2:UnregisterExtensionResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__FindExtension(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__FindExtensionRequestType *ns2__FindExtension, _ns2__FindExtensionResponse *ns2__FindExtensionResponse)
{	struct __ns2__FindExtension soap_tmp___ns2__FindExtension;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__FindExtension.ns2__FindExtension = ns2__FindExtension;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__FindExtension(soap, &soap_tmp___ns2__FindExtension);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__FindExtension(soap, &soap_tmp___ns2__FindExtension, "-ns2:FindExtension", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__FindExtension(soap, &soap_tmp___ns2__FindExtension, "-ns2:FindExtension", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__FindExtensionResponse)
		return soap_closesock(soap);
	ns2__FindExtensionResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__FindExtensionResponse->soap_get(soap, "ns2:FindExtensionResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RegisterExtension(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RegisterExtensionRequestType *ns2__RegisterExtension, _ns2__RegisterExtensionResponse *ns2__RegisterExtensionResponse)
{	struct __ns2__RegisterExtension soap_tmp___ns2__RegisterExtension;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RegisterExtension.ns2__RegisterExtension = ns2__RegisterExtension;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RegisterExtension(soap, &soap_tmp___ns2__RegisterExtension);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RegisterExtension(soap, &soap_tmp___ns2__RegisterExtension, "-ns2:RegisterExtension", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RegisterExtension(soap, &soap_tmp___ns2__RegisterExtension, "-ns2:RegisterExtension", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RegisterExtensionResponse)
		return soap_closesock(soap);
	ns2__RegisterExtensionResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RegisterExtensionResponse->soap_get(soap, "ns2:RegisterExtensionResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UpdateExtension(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UpdateExtensionRequestType *ns2__UpdateExtension, _ns2__UpdateExtensionResponse *ns2__UpdateExtensionResponse)
{	struct __ns2__UpdateExtension soap_tmp___ns2__UpdateExtension;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UpdateExtension.ns2__UpdateExtension = ns2__UpdateExtension;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UpdateExtension(soap, &soap_tmp___ns2__UpdateExtension);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UpdateExtension(soap, &soap_tmp___ns2__UpdateExtension, "-ns2:UpdateExtension", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UpdateExtension(soap, &soap_tmp___ns2__UpdateExtension, "-ns2:UpdateExtension", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UpdateExtensionResponse)
		return soap_closesock(soap);
	ns2__UpdateExtensionResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UpdateExtensionResponse->soap_get(soap, "ns2:UpdateExtensionResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__GetPublicKey(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__GetPublicKeyRequestType *ns2__GetPublicKey, _ns2__GetPublicKeyResponse *ns2__GetPublicKeyResponse)
{	struct __ns2__GetPublicKey soap_tmp___ns2__GetPublicKey;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__GetPublicKey.ns2__GetPublicKey = ns2__GetPublicKey;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__GetPublicKey(soap, &soap_tmp___ns2__GetPublicKey);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__GetPublicKey(soap, &soap_tmp___ns2__GetPublicKey, "-ns2:GetPublicKey", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__GetPublicKey(soap, &soap_tmp___ns2__GetPublicKey, "-ns2:GetPublicKey", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__GetPublicKeyResponse)
		return soap_closesock(soap);
	ns2__GetPublicKeyResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__GetPublicKeyResponse->soap_get(soap, "ns2:GetPublicKeyResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__SetPublicKey(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__SetPublicKeyRequestType *ns2__SetPublicKey, _ns2__SetPublicKeyResponse *ns2__SetPublicKeyResponse)
{	struct __ns2__SetPublicKey soap_tmp___ns2__SetPublicKey;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__SetPublicKey.ns2__SetPublicKey = ns2__SetPublicKey;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__SetPublicKey(soap, &soap_tmp___ns2__SetPublicKey);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__SetPublicKey(soap, &soap_tmp___ns2__SetPublicKey, "-ns2:SetPublicKey", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__SetPublicKey(soap, &soap_tmp___ns2__SetPublicKey, "-ns2:SetPublicKey", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__SetPublicKeyResponse)
		return soap_closesock(soap);
	ns2__SetPublicKeyResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__SetPublicKeyResponse->soap_get(soap, "ns2:SetPublicKeyResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__SetExtensionCertificate(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__SetExtensionCertificateRequestType *ns2__SetExtensionCertificate, _ns2__SetExtensionCertificateResponse *ns2__SetExtensionCertificateResponse)
{	struct __ns2__SetExtensionCertificate soap_tmp___ns2__SetExtensionCertificate;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__SetExtensionCertificate.ns2__SetExtensionCertificate = ns2__SetExtensionCertificate;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__SetExtensionCertificate(soap, &soap_tmp___ns2__SetExtensionCertificate);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__SetExtensionCertificate(soap, &soap_tmp___ns2__SetExtensionCertificate, "-ns2:SetExtensionCertificate", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__SetExtensionCertificate(soap, &soap_tmp___ns2__SetExtensionCertificate, "-ns2:SetExtensionCertificate", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__SetExtensionCertificateResponse)
		return soap_closesock(soap);
	ns2__SetExtensionCertificateResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__SetExtensionCertificateResponse->soap_get(soap, "ns2:SetExtensionCertificateResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryManagedBy(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryManagedByRequestType *ns2__QueryManagedBy, _ns2__QueryManagedByResponse *ns2__QueryManagedByResponse)
{	struct __ns2__QueryManagedBy soap_tmp___ns2__QueryManagedBy;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryManagedBy.ns2__QueryManagedBy = ns2__QueryManagedBy;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryManagedBy(soap, &soap_tmp___ns2__QueryManagedBy);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryManagedBy(soap, &soap_tmp___ns2__QueryManagedBy, "-ns2:QueryManagedBy", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryManagedBy(soap, &soap_tmp___ns2__QueryManagedBy, "-ns2:QueryManagedBy", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryManagedByResponse)
		return soap_closesock(soap);
	ns2__QueryManagedByResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryManagedByResponse->soap_get(soap, "ns2:QueryManagedByResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryExtensionIpAllocationUsage(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryExtensionIpAllocationUsageRequestType *ns2__QueryExtensionIpAllocationUsage, _ns2__QueryExtensionIpAllocationUsageResponse *ns2__QueryExtensionIpAllocationUsageResponse)
{	struct __ns2__QueryExtensionIpAllocationUsage soap_tmp___ns2__QueryExtensionIpAllocationUsage;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryExtensionIpAllocationUsage.ns2__QueryExtensionIpAllocationUsage = ns2__QueryExtensionIpAllocationUsage;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryExtensionIpAllocationUsage(soap, &soap_tmp___ns2__QueryExtensionIpAllocationUsage);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryExtensionIpAllocationUsage(soap, &soap_tmp___ns2__QueryExtensionIpAllocationUsage, "-ns2:QueryExtensionIpAllocationUsage", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryExtensionIpAllocationUsage(soap, &soap_tmp___ns2__QueryExtensionIpAllocationUsage, "-ns2:QueryExtensionIpAllocationUsage", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryExtensionIpAllocationUsageResponse)
		return soap_closesock(soap);
	ns2__QueryExtensionIpAllocationUsageResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryExtensionIpAllocationUsageResponse->soap_get(soap, "ns2:QueryExtensionIpAllocationUsageResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__MoveDatastoreFile_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__MoveDatastoreFileRequestType *ns2__MoveDatastoreFile_USCORETask, _ns2__MoveDatastoreFile_USCORETaskResponse *ns2__MoveDatastoreFile_USCORETaskResponse)
{	struct __ns2__MoveDatastoreFile_USCORETask soap_tmp___ns2__MoveDatastoreFile_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__MoveDatastoreFile_USCORETask.ns2__MoveDatastoreFile_USCORETask = ns2__MoveDatastoreFile_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__MoveDatastoreFile_USCORETask(soap, &soap_tmp___ns2__MoveDatastoreFile_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__MoveDatastoreFile_USCORETask(soap, &soap_tmp___ns2__MoveDatastoreFile_USCORETask, "-ns2:MoveDatastoreFile_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__MoveDatastoreFile_USCORETask(soap, &soap_tmp___ns2__MoveDatastoreFile_USCORETask, "-ns2:MoveDatastoreFile_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__MoveDatastoreFile_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__MoveDatastoreFile_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__MoveDatastoreFile_USCORETaskResponse->soap_get(soap, "ns2:MoveDatastoreFile_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__CopyDatastoreFile_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__CopyDatastoreFileRequestType *ns2__CopyDatastoreFile_USCORETask, _ns2__CopyDatastoreFile_USCORETaskResponse *ns2__CopyDatastoreFile_USCORETaskResponse)
{	struct __ns2__CopyDatastoreFile_USCORETask soap_tmp___ns2__CopyDatastoreFile_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__CopyDatastoreFile_USCORETask.ns2__CopyDatastoreFile_USCORETask = ns2__CopyDatastoreFile_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__CopyDatastoreFile_USCORETask(soap, &soap_tmp___ns2__CopyDatastoreFile_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__CopyDatastoreFile_USCORETask(soap, &soap_tmp___ns2__CopyDatastoreFile_USCORETask, "-ns2:CopyDatastoreFile_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__CopyDatastoreFile_USCORETask(soap, &soap_tmp___ns2__CopyDatastoreFile_USCORETask, "-ns2:CopyDatastoreFile_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CopyDatastoreFile_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__CopyDatastoreFile_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CopyDatastoreFile_USCORETaskResponse->soap_get(soap, "ns2:CopyDatastoreFile_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__DeleteDatastoreFile_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__DeleteDatastoreFileRequestType *ns2__DeleteDatastoreFile_USCORETask, _ns2__DeleteDatastoreFile_USCORETaskResponse *ns2__DeleteDatastoreFile_USCORETaskResponse)
{	struct __ns2__DeleteDatastoreFile_USCORETask soap_tmp___ns2__DeleteDatastoreFile_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__DeleteDatastoreFile_USCORETask.ns2__DeleteDatastoreFile_USCORETask = ns2__DeleteDatastoreFile_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__DeleteDatastoreFile_USCORETask(soap, &soap_tmp___ns2__DeleteDatastoreFile_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__DeleteDatastoreFile_USCORETask(soap, &soap_tmp___ns2__DeleteDatastoreFile_USCORETask, "-ns2:DeleteDatastoreFile_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__DeleteDatastoreFile_USCORETask(soap, &soap_tmp___ns2__DeleteDatastoreFile_USCORETask, "-ns2:DeleteDatastoreFile_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__DeleteDatastoreFile_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__DeleteDatastoreFile_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__DeleteDatastoreFile_USCORETaskResponse->soap_get(soap, "ns2:DeleteDatastoreFile_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__MakeDirectory(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__MakeDirectoryRequestType *ns2__MakeDirectory, _ns2__MakeDirectoryResponse *ns2__MakeDirectoryResponse)
{	struct __ns2__MakeDirectory soap_tmp___ns2__MakeDirectory;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__MakeDirectory.ns2__MakeDirectory = ns2__MakeDirectory;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__MakeDirectory(soap, &soap_tmp___ns2__MakeDirectory);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__MakeDirectory(soap, &soap_tmp___ns2__MakeDirectory, "-ns2:MakeDirectory", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__MakeDirectory(soap, &soap_tmp___ns2__MakeDirectory, "-ns2:MakeDirectory", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__MakeDirectoryResponse)
		return soap_closesock(soap);
	ns2__MakeDirectoryResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__MakeDirectoryResponse->soap_get(soap, "ns2:MakeDirectoryResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ChangeOwner(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ChangeOwnerRequestType *ns2__ChangeOwner, _ns2__ChangeOwnerResponse *ns2__ChangeOwnerResponse)
{	struct __ns2__ChangeOwner soap_tmp___ns2__ChangeOwner;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ChangeOwner.ns2__ChangeOwner = ns2__ChangeOwner;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ChangeOwner(soap, &soap_tmp___ns2__ChangeOwner);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ChangeOwner(soap, &soap_tmp___ns2__ChangeOwner, "-ns2:ChangeOwner", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ChangeOwner(soap, &soap_tmp___ns2__ChangeOwner, "-ns2:ChangeOwner", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ChangeOwnerResponse)
		return soap_closesock(soap);
	ns2__ChangeOwnerResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ChangeOwnerResponse->soap_get(soap, "ns2:ChangeOwnerResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__CreateFolder(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__CreateFolderRequestType *ns2__CreateFolder, _ns2__CreateFolderResponse *ns2__CreateFolderResponse)
{	struct __ns2__CreateFolder soap_tmp___ns2__CreateFolder;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__CreateFolder.ns2__CreateFolder = ns2__CreateFolder;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__CreateFolder(soap, &soap_tmp___ns2__CreateFolder);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__CreateFolder(soap, &soap_tmp___ns2__CreateFolder, "-ns2:CreateFolder", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__CreateFolder(soap, &soap_tmp___ns2__CreateFolder, "-ns2:CreateFolder", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CreateFolderResponse)
		return soap_closesock(soap);
	ns2__CreateFolderResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CreateFolderResponse->soap_get(soap, "ns2:CreateFolderResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__MoveIntoFolder_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__MoveIntoFolderRequestType *ns2__MoveIntoFolder_USCORETask, _ns2__MoveIntoFolder_USCORETaskResponse *ns2__MoveIntoFolder_USCORETaskResponse)
{	struct __ns2__MoveIntoFolder_USCORETask soap_tmp___ns2__MoveIntoFolder_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__MoveIntoFolder_USCORETask.ns2__MoveIntoFolder_USCORETask = ns2__MoveIntoFolder_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__MoveIntoFolder_USCORETask(soap, &soap_tmp___ns2__MoveIntoFolder_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__MoveIntoFolder_USCORETask(soap, &soap_tmp___ns2__MoveIntoFolder_USCORETask, "-ns2:MoveIntoFolder_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__MoveIntoFolder_USCORETask(soap, &soap_tmp___ns2__MoveIntoFolder_USCORETask, "-ns2:MoveIntoFolder_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__MoveIntoFolder_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__MoveIntoFolder_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__MoveIntoFolder_USCORETaskResponse->soap_get(soap, "ns2:MoveIntoFolder_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__CreateVM_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__CreateVMRequestType *ns2__CreateVM_USCORETask, _ns2__CreateVM_USCORETaskResponse *ns2__CreateVM_USCORETaskResponse)
{	struct __ns2__CreateVM_USCORETask soap_tmp___ns2__CreateVM_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__CreateVM_USCORETask.ns2__CreateVM_USCORETask = ns2__CreateVM_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__CreateVM_USCORETask(soap, &soap_tmp___ns2__CreateVM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__CreateVM_USCORETask(soap, &soap_tmp___ns2__CreateVM_USCORETask, "-ns2:CreateVM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__CreateVM_USCORETask(soap, &soap_tmp___ns2__CreateVM_USCORETask, "-ns2:CreateVM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CreateVM_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__CreateVM_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CreateVM_USCORETaskResponse->soap_get(soap, "ns2:CreateVM_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RegisterVM_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RegisterVMRequestType *ns2__RegisterVM_USCORETask, _ns2__RegisterVM_USCORETaskResponse *ns2__RegisterVM_USCORETaskResponse)
{	struct __ns2__RegisterVM_USCORETask soap_tmp___ns2__RegisterVM_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RegisterVM_USCORETask.ns2__RegisterVM_USCORETask = ns2__RegisterVM_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RegisterVM_USCORETask(soap, &soap_tmp___ns2__RegisterVM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RegisterVM_USCORETask(soap, &soap_tmp___ns2__RegisterVM_USCORETask, "-ns2:RegisterVM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RegisterVM_USCORETask(soap, &soap_tmp___ns2__RegisterVM_USCORETask, "-ns2:RegisterVM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RegisterVM_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__RegisterVM_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RegisterVM_USCORETaskResponse->soap_get(soap, "ns2:RegisterVM_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__CreateCluster(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__CreateClusterRequestType *ns2__CreateCluster, _ns2__CreateClusterResponse *ns2__CreateClusterResponse)
{	struct __ns2__CreateCluster soap_tmp___ns2__CreateCluster;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__CreateCluster.ns2__CreateCluster = ns2__CreateCluster;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__CreateCluster(soap, &soap_tmp___ns2__CreateCluster);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__CreateCluster(soap, &soap_tmp___ns2__CreateCluster, "-ns2:CreateCluster", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__CreateCluster(soap, &soap_tmp___ns2__CreateCluster, "-ns2:CreateCluster", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CreateClusterResponse)
		return soap_closesock(soap);
	ns2__CreateClusterResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CreateClusterResponse->soap_get(soap, "ns2:CreateClusterResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__CreateClusterEx(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__CreateClusterExRequestType *ns2__CreateClusterEx, _ns2__CreateClusterExResponse *ns2__CreateClusterExResponse)
{	struct __ns2__CreateClusterEx soap_tmp___ns2__CreateClusterEx;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__CreateClusterEx.ns2__CreateClusterEx = ns2__CreateClusterEx;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__CreateClusterEx(soap, &soap_tmp___ns2__CreateClusterEx);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__CreateClusterEx(soap, &soap_tmp___ns2__CreateClusterEx, "-ns2:CreateClusterEx", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__CreateClusterEx(soap, &soap_tmp___ns2__CreateClusterEx, "-ns2:CreateClusterEx", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CreateClusterExResponse)
		return soap_closesock(soap);
	ns2__CreateClusterExResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CreateClusterExResponse->soap_get(soap, "ns2:CreateClusterExResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__AddStandaloneHost_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__AddStandaloneHostRequestType *ns2__AddStandaloneHost_USCORETask, _ns2__AddStandaloneHost_USCORETaskResponse *ns2__AddStandaloneHost_USCORETaskResponse)
{	struct __ns2__AddStandaloneHost_USCORETask soap_tmp___ns2__AddStandaloneHost_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__AddStandaloneHost_USCORETask.ns2__AddStandaloneHost_USCORETask = ns2__AddStandaloneHost_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__AddStandaloneHost_USCORETask(soap, &soap_tmp___ns2__AddStandaloneHost_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__AddStandaloneHost_USCORETask(soap, &soap_tmp___ns2__AddStandaloneHost_USCORETask, "-ns2:AddStandaloneHost_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__AddStandaloneHost_USCORETask(soap, &soap_tmp___ns2__AddStandaloneHost_USCORETask, "-ns2:AddStandaloneHost_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__AddStandaloneHost_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__AddStandaloneHost_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__AddStandaloneHost_USCORETaskResponse->soap_get(soap, "ns2:AddStandaloneHost_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__CreateDatacenter(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__CreateDatacenterRequestType *ns2__CreateDatacenter, _ns2__CreateDatacenterResponse *ns2__CreateDatacenterResponse)
{	struct __ns2__CreateDatacenter soap_tmp___ns2__CreateDatacenter;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__CreateDatacenter.ns2__CreateDatacenter = ns2__CreateDatacenter;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__CreateDatacenter(soap, &soap_tmp___ns2__CreateDatacenter);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__CreateDatacenter(soap, &soap_tmp___ns2__CreateDatacenter, "-ns2:CreateDatacenter", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__CreateDatacenter(soap, &soap_tmp___ns2__CreateDatacenter, "-ns2:CreateDatacenter", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CreateDatacenterResponse)
		return soap_closesock(soap);
	ns2__CreateDatacenterResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CreateDatacenterResponse->soap_get(soap, "ns2:CreateDatacenterResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UnregisterAndDestroy_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UnregisterAndDestroyRequestType *ns2__UnregisterAndDestroy_USCORETask, _ns2__UnregisterAndDestroy_USCORETaskResponse *ns2__UnregisterAndDestroy_USCORETaskResponse)
{	struct __ns2__UnregisterAndDestroy_USCORETask soap_tmp___ns2__UnregisterAndDestroy_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UnregisterAndDestroy_USCORETask.ns2__UnregisterAndDestroy_USCORETask = ns2__UnregisterAndDestroy_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UnregisterAndDestroy_USCORETask(soap, &soap_tmp___ns2__UnregisterAndDestroy_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UnregisterAndDestroy_USCORETask(soap, &soap_tmp___ns2__UnregisterAndDestroy_USCORETask, "-ns2:UnregisterAndDestroy_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UnregisterAndDestroy_USCORETask(soap, &soap_tmp___ns2__UnregisterAndDestroy_USCORETask, "-ns2:UnregisterAndDestroy_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UnregisterAndDestroy_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__UnregisterAndDestroy_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UnregisterAndDestroy_USCORETaskResponse->soap_get(soap, "ns2:UnregisterAndDestroy_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__CreateDVS_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__CreateDVSRequestType *ns2__CreateDVS_USCORETask, _ns2__CreateDVS_USCORETaskResponse *ns2__CreateDVS_USCORETaskResponse)
{	struct __ns2__CreateDVS_USCORETask soap_tmp___ns2__CreateDVS_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__CreateDVS_USCORETask.ns2__CreateDVS_USCORETask = ns2__CreateDVS_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__CreateDVS_USCORETask(soap, &soap_tmp___ns2__CreateDVS_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__CreateDVS_USCORETask(soap, &soap_tmp___ns2__CreateDVS_USCORETask, "-ns2:CreateDVS_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__CreateDVS_USCORETask(soap, &soap_tmp___ns2__CreateDVS_USCORETask, "-ns2:CreateDVS_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CreateDVS_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__CreateDVS_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CreateDVS_USCORETaskResponse->soap_get(soap, "ns2:CreateDVS_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__CreateStoragePod(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__CreateStoragePodRequestType *ns2__CreateStoragePod, _ns2__CreateStoragePodResponse *ns2__CreateStoragePodResponse)
{	struct __ns2__CreateStoragePod soap_tmp___ns2__CreateStoragePod;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__CreateStoragePod.ns2__CreateStoragePod = ns2__CreateStoragePod;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__CreateStoragePod(soap, &soap_tmp___ns2__CreateStoragePod);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__CreateStoragePod(soap, &soap_tmp___ns2__CreateStoragePod, "-ns2:CreateStoragePod", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__CreateStoragePod(soap, &soap_tmp___ns2__CreateStoragePod, "-ns2:CreateStoragePod", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CreateStoragePodResponse)
		return soap_closesock(soap);
	ns2__CreateStoragePodResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CreateStoragePodResponse->soap_get(soap, "ns2:CreateStoragePodResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__SetCollectorPageSize(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__SetCollectorPageSizeRequestType *ns2__SetCollectorPageSize, _ns2__SetCollectorPageSizeResponse *ns2__SetCollectorPageSizeResponse)
{	struct __ns2__SetCollectorPageSize soap_tmp___ns2__SetCollectorPageSize;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__SetCollectorPageSize.ns2__SetCollectorPageSize = ns2__SetCollectorPageSize;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__SetCollectorPageSize(soap, &soap_tmp___ns2__SetCollectorPageSize);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__SetCollectorPageSize(soap, &soap_tmp___ns2__SetCollectorPageSize, "-ns2:SetCollectorPageSize", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__SetCollectorPageSize(soap, &soap_tmp___ns2__SetCollectorPageSize, "-ns2:SetCollectorPageSize", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__SetCollectorPageSizeResponse)
		return soap_closesock(soap);
	ns2__SetCollectorPageSizeResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__SetCollectorPageSizeResponse->soap_get(soap, "ns2:SetCollectorPageSizeResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RewindCollector(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RewindCollectorRequestType *ns2__RewindCollector, _ns2__RewindCollectorResponse *ns2__RewindCollectorResponse)
{	struct __ns2__RewindCollector soap_tmp___ns2__RewindCollector;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RewindCollector.ns2__RewindCollector = ns2__RewindCollector;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RewindCollector(soap, &soap_tmp___ns2__RewindCollector);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RewindCollector(soap, &soap_tmp___ns2__RewindCollector, "-ns2:RewindCollector", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RewindCollector(soap, &soap_tmp___ns2__RewindCollector, "-ns2:RewindCollector", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RewindCollectorResponse)
		return soap_closesock(soap);
	ns2__RewindCollectorResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RewindCollectorResponse->soap_get(soap, "ns2:RewindCollectorResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ResetCollector(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ResetCollectorRequestType *ns2__ResetCollector, _ns2__ResetCollectorResponse *ns2__ResetCollectorResponse)
{	struct __ns2__ResetCollector soap_tmp___ns2__ResetCollector;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ResetCollector.ns2__ResetCollector = ns2__ResetCollector;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ResetCollector(soap, &soap_tmp___ns2__ResetCollector);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ResetCollector(soap, &soap_tmp___ns2__ResetCollector, "-ns2:ResetCollector", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ResetCollector(soap, &soap_tmp___ns2__ResetCollector, "-ns2:ResetCollector", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ResetCollectorResponse)
		return soap_closesock(soap);
	ns2__ResetCollectorResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ResetCollectorResponse->soap_get(soap, "ns2:ResetCollectorResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__DestroyCollector(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__DestroyCollectorRequestType *ns2__DestroyCollector, _ns2__DestroyCollectorResponse *ns2__DestroyCollectorResponse)
{	struct __ns2__DestroyCollector soap_tmp___ns2__DestroyCollector;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__DestroyCollector.ns2__DestroyCollector = ns2__DestroyCollector;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__DestroyCollector(soap, &soap_tmp___ns2__DestroyCollector);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__DestroyCollector(soap, &soap_tmp___ns2__DestroyCollector, "-ns2:DestroyCollector", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__DestroyCollector(soap, &soap_tmp___ns2__DestroyCollector, "-ns2:DestroyCollector", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__DestroyCollectorResponse)
		return soap_closesock(soap);
	ns2__DestroyCollectorResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__DestroyCollectorResponse->soap_get(soap, "ns2:DestroyCollectorResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryTpmAttestationReport(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryTpmAttestationReportRequestType *ns2__QueryTpmAttestationReport, _ns2__QueryTpmAttestationReportResponse *ns2__QueryTpmAttestationReportResponse)
{	struct __ns2__QueryTpmAttestationReport soap_tmp___ns2__QueryTpmAttestationReport;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryTpmAttestationReport.ns2__QueryTpmAttestationReport = ns2__QueryTpmAttestationReport;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryTpmAttestationReport(soap, &soap_tmp___ns2__QueryTpmAttestationReport);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryTpmAttestationReport(soap, &soap_tmp___ns2__QueryTpmAttestationReport, "-ns2:QueryTpmAttestationReport", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryTpmAttestationReport(soap, &soap_tmp___ns2__QueryTpmAttestationReport, "-ns2:QueryTpmAttestationReport", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryTpmAttestationReportResponse)
		return soap_closesock(soap);
	ns2__QueryTpmAttestationReportResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryTpmAttestationReportResponse->soap_get(soap, "ns2:QueryTpmAttestationReportResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryHostConnectionInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryHostConnectionInfoRequestType *ns2__QueryHostConnectionInfo, _ns2__QueryHostConnectionInfoResponse *ns2__QueryHostConnectionInfoResponse)
{	struct __ns2__QueryHostConnectionInfo soap_tmp___ns2__QueryHostConnectionInfo;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryHostConnectionInfo.ns2__QueryHostConnectionInfo = ns2__QueryHostConnectionInfo;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryHostConnectionInfo(soap, &soap_tmp___ns2__QueryHostConnectionInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryHostConnectionInfo(soap, &soap_tmp___ns2__QueryHostConnectionInfo, "-ns2:QueryHostConnectionInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryHostConnectionInfo(soap, &soap_tmp___ns2__QueryHostConnectionInfo, "-ns2:QueryHostConnectionInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryHostConnectionInfoResponse)
		return soap_closesock(soap);
	ns2__QueryHostConnectionInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryHostConnectionInfoResponse->soap_get(soap, "ns2:QueryHostConnectionInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UpdateSystemResources(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UpdateSystemResourcesRequestType *ns2__UpdateSystemResources, _ns2__UpdateSystemResourcesResponse *ns2__UpdateSystemResourcesResponse)
{	struct __ns2__UpdateSystemResources soap_tmp___ns2__UpdateSystemResources;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UpdateSystemResources.ns2__UpdateSystemResources = ns2__UpdateSystemResources;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UpdateSystemResources(soap, &soap_tmp___ns2__UpdateSystemResources);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UpdateSystemResources(soap, &soap_tmp___ns2__UpdateSystemResources, "-ns2:UpdateSystemResources", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UpdateSystemResources(soap, &soap_tmp___ns2__UpdateSystemResources, "-ns2:UpdateSystemResources", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UpdateSystemResourcesResponse)
		return soap_closesock(soap);
	ns2__UpdateSystemResourcesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UpdateSystemResourcesResponse->soap_get(soap, "ns2:UpdateSystemResourcesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UpdateSystemSwapConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UpdateSystemSwapConfigurationRequestType *ns2__UpdateSystemSwapConfiguration, _ns2__UpdateSystemSwapConfigurationResponse *ns2__UpdateSystemSwapConfigurationResponse)
{	struct __ns2__UpdateSystemSwapConfiguration soap_tmp___ns2__UpdateSystemSwapConfiguration;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UpdateSystemSwapConfiguration.ns2__UpdateSystemSwapConfiguration = ns2__UpdateSystemSwapConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UpdateSystemSwapConfiguration(soap, &soap_tmp___ns2__UpdateSystemSwapConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UpdateSystemSwapConfiguration(soap, &soap_tmp___ns2__UpdateSystemSwapConfiguration, "-ns2:UpdateSystemSwapConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UpdateSystemSwapConfiguration(soap, &soap_tmp___ns2__UpdateSystemSwapConfiguration, "-ns2:UpdateSystemSwapConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UpdateSystemSwapConfigurationResponse)
		return soap_closesock(soap);
	ns2__UpdateSystemSwapConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UpdateSystemSwapConfigurationResponse->soap_get(soap, "ns2:UpdateSystemSwapConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ReconnectHost_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ReconnectHostRequestType *ns2__ReconnectHost_USCORETask, _ns2__ReconnectHost_USCORETaskResponse *ns2__ReconnectHost_USCORETaskResponse)
{	struct __ns2__ReconnectHost_USCORETask soap_tmp___ns2__ReconnectHost_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ReconnectHost_USCORETask.ns2__ReconnectHost_USCORETask = ns2__ReconnectHost_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ReconnectHost_USCORETask(soap, &soap_tmp___ns2__ReconnectHost_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ReconnectHost_USCORETask(soap, &soap_tmp___ns2__ReconnectHost_USCORETask, "-ns2:ReconnectHost_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ReconnectHost_USCORETask(soap, &soap_tmp___ns2__ReconnectHost_USCORETask, "-ns2:ReconnectHost_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ReconnectHost_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__ReconnectHost_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ReconnectHost_USCORETaskResponse->soap_get(soap, "ns2:ReconnectHost_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__DisconnectHost_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__DisconnectHostRequestType *ns2__DisconnectHost_USCORETask, _ns2__DisconnectHost_USCORETaskResponse *ns2__DisconnectHost_USCORETaskResponse)
{	struct __ns2__DisconnectHost_USCORETask soap_tmp___ns2__DisconnectHost_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__DisconnectHost_USCORETask.ns2__DisconnectHost_USCORETask = ns2__DisconnectHost_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__DisconnectHost_USCORETask(soap, &soap_tmp___ns2__DisconnectHost_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__DisconnectHost_USCORETask(soap, &soap_tmp___ns2__DisconnectHost_USCORETask, "-ns2:DisconnectHost_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__DisconnectHost_USCORETask(soap, &soap_tmp___ns2__DisconnectHost_USCORETask, "-ns2:DisconnectHost_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__DisconnectHost_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__DisconnectHost_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__DisconnectHost_USCORETaskResponse->soap_get(soap, "ns2:DisconnectHost_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__EnterMaintenanceMode_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__EnterMaintenanceModeRequestType *ns2__EnterMaintenanceMode_USCORETask, _ns2__EnterMaintenanceMode_USCORETaskResponse *ns2__EnterMaintenanceMode_USCORETaskResponse)
{	struct __ns2__EnterMaintenanceMode_USCORETask soap_tmp___ns2__EnterMaintenanceMode_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__EnterMaintenanceMode_USCORETask.ns2__EnterMaintenanceMode_USCORETask = ns2__EnterMaintenanceMode_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__EnterMaintenanceMode_USCORETask(soap, &soap_tmp___ns2__EnterMaintenanceMode_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__EnterMaintenanceMode_USCORETask(soap, &soap_tmp___ns2__EnterMaintenanceMode_USCORETask, "-ns2:EnterMaintenanceMode_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__EnterMaintenanceMode_USCORETask(soap, &soap_tmp___ns2__EnterMaintenanceMode_USCORETask, "-ns2:EnterMaintenanceMode_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__EnterMaintenanceMode_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__EnterMaintenanceMode_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__EnterMaintenanceMode_USCORETaskResponse->soap_get(soap, "ns2:EnterMaintenanceMode_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ExitMaintenanceMode_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ExitMaintenanceModeRequestType *ns2__ExitMaintenanceMode_USCORETask, _ns2__ExitMaintenanceMode_USCORETaskResponse *ns2__ExitMaintenanceMode_USCORETaskResponse)
{	struct __ns2__ExitMaintenanceMode_USCORETask soap_tmp___ns2__ExitMaintenanceMode_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ExitMaintenanceMode_USCORETask.ns2__ExitMaintenanceMode_USCORETask = ns2__ExitMaintenanceMode_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ExitMaintenanceMode_USCORETask(soap, &soap_tmp___ns2__ExitMaintenanceMode_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ExitMaintenanceMode_USCORETask(soap, &soap_tmp___ns2__ExitMaintenanceMode_USCORETask, "-ns2:ExitMaintenanceMode_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ExitMaintenanceMode_USCORETask(soap, &soap_tmp___ns2__ExitMaintenanceMode_USCORETask, "-ns2:ExitMaintenanceMode_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ExitMaintenanceMode_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__ExitMaintenanceMode_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ExitMaintenanceMode_USCORETaskResponse->soap_get(soap, "ns2:ExitMaintenanceMode_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RebootHost_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RebootHostRequestType *ns2__RebootHost_USCORETask, _ns2__RebootHost_USCORETaskResponse *ns2__RebootHost_USCORETaskResponse)
{	struct __ns2__RebootHost_USCORETask soap_tmp___ns2__RebootHost_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RebootHost_USCORETask.ns2__RebootHost_USCORETask = ns2__RebootHost_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RebootHost_USCORETask(soap, &soap_tmp___ns2__RebootHost_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RebootHost_USCORETask(soap, &soap_tmp___ns2__RebootHost_USCORETask, "-ns2:RebootHost_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RebootHost_USCORETask(soap, &soap_tmp___ns2__RebootHost_USCORETask, "-ns2:RebootHost_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RebootHost_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__RebootHost_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RebootHost_USCORETaskResponse->soap_get(soap, "ns2:RebootHost_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ShutdownHost_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ShutdownHostRequestType *ns2__ShutdownHost_USCORETask, _ns2__ShutdownHost_USCORETaskResponse *ns2__ShutdownHost_USCORETaskResponse)
{	struct __ns2__ShutdownHost_USCORETask soap_tmp___ns2__ShutdownHost_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ShutdownHost_USCORETask.ns2__ShutdownHost_USCORETask = ns2__ShutdownHost_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ShutdownHost_USCORETask(soap, &soap_tmp___ns2__ShutdownHost_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ShutdownHost_USCORETask(soap, &soap_tmp___ns2__ShutdownHost_USCORETask, "-ns2:ShutdownHost_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ShutdownHost_USCORETask(soap, &soap_tmp___ns2__ShutdownHost_USCORETask, "-ns2:ShutdownHost_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ShutdownHost_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__ShutdownHost_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ShutdownHost_USCORETaskResponse->soap_get(soap, "ns2:ShutdownHost_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__PowerDownHostToStandBy_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__PowerDownHostToStandByRequestType *ns2__PowerDownHostToStandBy_USCORETask, _ns2__PowerDownHostToStandBy_USCORETaskResponse *ns2__PowerDownHostToStandBy_USCORETaskResponse)
{	struct __ns2__PowerDownHostToStandBy_USCORETask soap_tmp___ns2__PowerDownHostToStandBy_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__PowerDownHostToStandBy_USCORETask.ns2__PowerDownHostToStandBy_USCORETask = ns2__PowerDownHostToStandBy_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__PowerDownHostToStandBy_USCORETask(soap, &soap_tmp___ns2__PowerDownHostToStandBy_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__PowerDownHostToStandBy_USCORETask(soap, &soap_tmp___ns2__PowerDownHostToStandBy_USCORETask, "-ns2:PowerDownHostToStandBy_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__PowerDownHostToStandBy_USCORETask(soap, &soap_tmp___ns2__PowerDownHostToStandBy_USCORETask, "-ns2:PowerDownHostToStandBy_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__PowerDownHostToStandBy_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__PowerDownHostToStandBy_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__PowerDownHostToStandBy_USCORETaskResponse->soap_get(soap, "ns2:PowerDownHostToStandBy_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__PowerUpHostFromStandBy_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__PowerUpHostFromStandByRequestType *ns2__PowerUpHostFromStandBy_USCORETask, _ns2__PowerUpHostFromStandBy_USCORETaskResponse *ns2__PowerUpHostFromStandBy_USCORETaskResponse)
{	struct __ns2__PowerUpHostFromStandBy_USCORETask soap_tmp___ns2__PowerUpHostFromStandBy_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__PowerUpHostFromStandBy_USCORETask.ns2__PowerUpHostFromStandBy_USCORETask = ns2__PowerUpHostFromStandBy_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__PowerUpHostFromStandBy_USCORETask(soap, &soap_tmp___ns2__PowerUpHostFromStandBy_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__PowerUpHostFromStandBy_USCORETask(soap, &soap_tmp___ns2__PowerUpHostFromStandBy_USCORETask, "-ns2:PowerUpHostFromStandBy_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__PowerUpHostFromStandBy_USCORETask(soap, &soap_tmp___ns2__PowerUpHostFromStandBy_USCORETask, "-ns2:PowerUpHostFromStandBy_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__PowerUpHostFromStandBy_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__PowerUpHostFromStandBy_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__PowerUpHostFromStandBy_USCORETaskResponse->soap_get(soap, "ns2:PowerUpHostFromStandBy_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryMemoryOverhead(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryMemoryOverheadRequestType *ns2__QueryMemoryOverhead, _ns2__QueryMemoryOverheadResponse *ns2__QueryMemoryOverheadResponse)
{	struct __ns2__QueryMemoryOverhead soap_tmp___ns2__QueryMemoryOverhead;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryMemoryOverhead.ns2__QueryMemoryOverhead = ns2__QueryMemoryOverhead;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryMemoryOverhead(soap, &soap_tmp___ns2__QueryMemoryOverhead);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryMemoryOverhead(soap, &soap_tmp___ns2__QueryMemoryOverhead, "-ns2:QueryMemoryOverhead", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryMemoryOverhead(soap, &soap_tmp___ns2__QueryMemoryOverhead, "-ns2:QueryMemoryOverhead", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryMemoryOverheadResponse)
		return soap_closesock(soap);
	ns2__QueryMemoryOverheadResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryMemoryOverheadResponse->soap_get(soap, "ns2:QueryMemoryOverheadResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryMemoryOverheadEx(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryMemoryOverheadExRequestType *ns2__QueryMemoryOverheadEx, _ns2__QueryMemoryOverheadExResponse *ns2__QueryMemoryOverheadExResponse)
{	struct __ns2__QueryMemoryOverheadEx soap_tmp___ns2__QueryMemoryOverheadEx;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryMemoryOverheadEx.ns2__QueryMemoryOverheadEx = ns2__QueryMemoryOverheadEx;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryMemoryOverheadEx(soap, &soap_tmp___ns2__QueryMemoryOverheadEx);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryMemoryOverheadEx(soap, &soap_tmp___ns2__QueryMemoryOverheadEx, "-ns2:QueryMemoryOverheadEx", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryMemoryOverheadEx(soap, &soap_tmp___ns2__QueryMemoryOverheadEx, "-ns2:QueryMemoryOverheadEx", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryMemoryOverheadExResponse)
		return soap_closesock(soap);
	ns2__QueryMemoryOverheadExResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryMemoryOverheadExResponse->soap_get(soap, "ns2:QueryMemoryOverheadExResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ReconfigureHostForDAS_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ReconfigureHostForDASRequestType *ns2__ReconfigureHostForDAS_USCORETask, _ns2__ReconfigureHostForDAS_USCORETaskResponse *ns2__ReconfigureHostForDAS_USCORETaskResponse)
{	struct __ns2__ReconfigureHostForDAS_USCORETask soap_tmp___ns2__ReconfigureHostForDAS_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ReconfigureHostForDAS_USCORETask.ns2__ReconfigureHostForDAS_USCORETask = ns2__ReconfigureHostForDAS_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ReconfigureHostForDAS_USCORETask(soap, &soap_tmp___ns2__ReconfigureHostForDAS_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ReconfigureHostForDAS_USCORETask(soap, &soap_tmp___ns2__ReconfigureHostForDAS_USCORETask, "-ns2:ReconfigureHostForDAS_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ReconfigureHostForDAS_USCORETask(soap, &soap_tmp___ns2__ReconfigureHostForDAS_USCORETask, "-ns2:ReconfigureHostForDAS_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ReconfigureHostForDAS_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__ReconfigureHostForDAS_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ReconfigureHostForDAS_USCORETaskResponse->soap_get(soap, "ns2:ReconfigureHostForDAS_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UpdateFlags(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UpdateFlagsRequestType *ns2__UpdateFlags, _ns2__UpdateFlagsResponse *ns2__UpdateFlagsResponse)
{	struct __ns2__UpdateFlags soap_tmp___ns2__UpdateFlags;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UpdateFlags.ns2__UpdateFlags = ns2__UpdateFlags;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UpdateFlags(soap, &soap_tmp___ns2__UpdateFlags);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UpdateFlags(soap, &soap_tmp___ns2__UpdateFlags, "-ns2:UpdateFlags", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UpdateFlags(soap, &soap_tmp___ns2__UpdateFlags, "-ns2:UpdateFlags", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UpdateFlagsResponse)
		return soap_closesock(soap);
	ns2__UpdateFlagsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UpdateFlagsResponse->soap_get(soap, "ns2:UpdateFlagsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__EnterLockdownMode(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__EnterLockdownModeRequestType *ns2__EnterLockdownMode, _ns2__EnterLockdownModeResponse *ns2__EnterLockdownModeResponse)
{	struct __ns2__EnterLockdownMode soap_tmp___ns2__EnterLockdownMode;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__EnterLockdownMode.ns2__EnterLockdownMode = ns2__EnterLockdownMode;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__EnterLockdownMode(soap, &soap_tmp___ns2__EnterLockdownMode);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__EnterLockdownMode(soap, &soap_tmp___ns2__EnterLockdownMode, "-ns2:EnterLockdownMode", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__EnterLockdownMode(soap, &soap_tmp___ns2__EnterLockdownMode, "-ns2:EnterLockdownMode", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__EnterLockdownModeResponse)
		return soap_closesock(soap);
	ns2__EnterLockdownModeResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__EnterLockdownModeResponse->soap_get(soap, "ns2:EnterLockdownModeResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ExitLockdownMode(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ExitLockdownModeRequestType *ns2__ExitLockdownMode, _ns2__ExitLockdownModeResponse *ns2__ExitLockdownModeResponse)
{	struct __ns2__ExitLockdownMode soap_tmp___ns2__ExitLockdownMode;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ExitLockdownMode.ns2__ExitLockdownMode = ns2__ExitLockdownMode;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ExitLockdownMode(soap, &soap_tmp___ns2__ExitLockdownMode);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ExitLockdownMode(soap, &soap_tmp___ns2__ExitLockdownMode, "-ns2:ExitLockdownMode", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ExitLockdownMode(soap, &soap_tmp___ns2__ExitLockdownMode, "-ns2:ExitLockdownMode", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ExitLockdownModeResponse)
		return soap_closesock(soap);
	ns2__ExitLockdownModeResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ExitLockdownModeResponse->soap_get(soap, "ns2:ExitLockdownModeResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__AcquireCimServicesTicket(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__AcquireCimServicesTicketRequestType *ns2__AcquireCimServicesTicket, _ns2__AcquireCimServicesTicketResponse *ns2__AcquireCimServicesTicketResponse)
{	struct __ns2__AcquireCimServicesTicket soap_tmp___ns2__AcquireCimServicesTicket;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__AcquireCimServicesTicket.ns2__AcquireCimServicesTicket = ns2__AcquireCimServicesTicket;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__AcquireCimServicesTicket(soap, &soap_tmp___ns2__AcquireCimServicesTicket);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__AcquireCimServicesTicket(soap, &soap_tmp___ns2__AcquireCimServicesTicket, "-ns2:AcquireCimServicesTicket", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__AcquireCimServicesTicket(soap, &soap_tmp___ns2__AcquireCimServicesTicket, "-ns2:AcquireCimServicesTicket", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__AcquireCimServicesTicketResponse)
		return soap_closesock(soap);
	ns2__AcquireCimServicesTicketResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__AcquireCimServicesTicketResponse->soap_get(soap, "ns2:AcquireCimServicesTicketResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UpdateIpmi(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UpdateIpmiRequestType *ns2__UpdateIpmi, _ns2__UpdateIpmiResponse *ns2__UpdateIpmiResponse)
{	struct __ns2__UpdateIpmi soap_tmp___ns2__UpdateIpmi;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UpdateIpmi.ns2__UpdateIpmi = ns2__UpdateIpmi;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UpdateIpmi(soap, &soap_tmp___ns2__UpdateIpmi);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UpdateIpmi(soap, &soap_tmp___ns2__UpdateIpmi, "-ns2:UpdateIpmi", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UpdateIpmi(soap, &soap_tmp___ns2__UpdateIpmi, "-ns2:UpdateIpmi", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UpdateIpmiResponse)
		return soap_closesock(soap);
	ns2__UpdateIpmiResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UpdateIpmiResponse->soap_get(soap, "ns2:UpdateIpmiResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RetrieveHardwareUptime(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RetrieveHardwareUptimeRequestType *ns2__RetrieveHardwareUptime, _ns2__RetrieveHardwareUptimeResponse *ns2__RetrieveHardwareUptimeResponse)
{	struct __ns2__RetrieveHardwareUptime soap_tmp___ns2__RetrieveHardwareUptime;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RetrieveHardwareUptime.ns2__RetrieveHardwareUptime = ns2__RetrieveHardwareUptime;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RetrieveHardwareUptime(soap, &soap_tmp___ns2__RetrieveHardwareUptime);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RetrieveHardwareUptime(soap, &soap_tmp___ns2__RetrieveHardwareUptime, "-ns2:RetrieveHardwareUptime", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RetrieveHardwareUptime(soap, &soap_tmp___ns2__RetrieveHardwareUptime, "-ns2:RetrieveHardwareUptime", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RetrieveHardwareUptimeResponse)
		return soap_closesock(soap);
	ns2__RetrieveHardwareUptimeResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RetrieveHardwareUptimeResponse->soap_get(soap, "ns2:RetrieveHardwareUptimeResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__HttpNfcLeaseGetManifest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__HttpNfcLeaseGetManifestRequestType *ns2__HttpNfcLeaseGetManifest, _ns2__HttpNfcLeaseGetManifestResponse *ns2__HttpNfcLeaseGetManifestResponse)
{	struct __ns2__HttpNfcLeaseGetManifest soap_tmp___ns2__HttpNfcLeaseGetManifest;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__HttpNfcLeaseGetManifest.ns2__HttpNfcLeaseGetManifest = ns2__HttpNfcLeaseGetManifest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__HttpNfcLeaseGetManifest(soap, &soap_tmp___ns2__HttpNfcLeaseGetManifest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__HttpNfcLeaseGetManifest(soap, &soap_tmp___ns2__HttpNfcLeaseGetManifest, "-ns2:HttpNfcLeaseGetManifest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__HttpNfcLeaseGetManifest(soap, &soap_tmp___ns2__HttpNfcLeaseGetManifest, "-ns2:HttpNfcLeaseGetManifest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__HttpNfcLeaseGetManifestResponse)
		return soap_closesock(soap);
	ns2__HttpNfcLeaseGetManifestResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__HttpNfcLeaseGetManifestResponse->soap_get(soap, "ns2:HttpNfcLeaseGetManifestResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__HttpNfcLeaseComplete(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__HttpNfcLeaseCompleteRequestType *ns2__HttpNfcLeaseComplete, _ns2__HttpNfcLeaseCompleteResponse *ns2__HttpNfcLeaseCompleteResponse)
{	struct __ns2__HttpNfcLeaseComplete soap_tmp___ns2__HttpNfcLeaseComplete;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__HttpNfcLeaseComplete.ns2__HttpNfcLeaseComplete = ns2__HttpNfcLeaseComplete;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__HttpNfcLeaseComplete(soap, &soap_tmp___ns2__HttpNfcLeaseComplete);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__HttpNfcLeaseComplete(soap, &soap_tmp___ns2__HttpNfcLeaseComplete, "-ns2:HttpNfcLeaseComplete", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__HttpNfcLeaseComplete(soap, &soap_tmp___ns2__HttpNfcLeaseComplete, "-ns2:HttpNfcLeaseComplete", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__HttpNfcLeaseCompleteResponse)
		return soap_closesock(soap);
	ns2__HttpNfcLeaseCompleteResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__HttpNfcLeaseCompleteResponse->soap_get(soap, "ns2:HttpNfcLeaseCompleteResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__HttpNfcLeaseAbort(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__HttpNfcLeaseAbortRequestType *ns2__HttpNfcLeaseAbort, _ns2__HttpNfcLeaseAbortResponse *ns2__HttpNfcLeaseAbortResponse)
{	struct __ns2__HttpNfcLeaseAbort soap_tmp___ns2__HttpNfcLeaseAbort;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__HttpNfcLeaseAbort.ns2__HttpNfcLeaseAbort = ns2__HttpNfcLeaseAbort;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__HttpNfcLeaseAbort(soap, &soap_tmp___ns2__HttpNfcLeaseAbort);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__HttpNfcLeaseAbort(soap, &soap_tmp___ns2__HttpNfcLeaseAbort, "-ns2:HttpNfcLeaseAbort", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__HttpNfcLeaseAbort(soap, &soap_tmp___ns2__HttpNfcLeaseAbort, "-ns2:HttpNfcLeaseAbort", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__HttpNfcLeaseAbortResponse)
		return soap_closesock(soap);
	ns2__HttpNfcLeaseAbortResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__HttpNfcLeaseAbortResponse->soap_get(soap, "ns2:HttpNfcLeaseAbortResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__HttpNfcLeaseProgress(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__HttpNfcLeaseProgressRequestType *ns2__HttpNfcLeaseProgress, _ns2__HttpNfcLeaseProgressResponse *ns2__HttpNfcLeaseProgressResponse)
{	struct __ns2__HttpNfcLeaseProgress soap_tmp___ns2__HttpNfcLeaseProgress;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__HttpNfcLeaseProgress.ns2__HttpNfcLeaseProgress = ns2__HttpNfcLeaseProgress;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__HttpNfcLeaseProgress(soap, &soap_tmp___ns2__HttpNfcLeaseProgress);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__HttpNfcLeaseProgress(soap, &soap_tmp___ns2__HttpNfcLeaseProgress, "-ns2:HttpNfcLeaseProgress", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__HttpNfcLeaseProgress(soap, &soap_tmp___ns2__HttpNfcLeaseProgress, "-ns2:HttpNfcLeaseProgress", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__HttpNfcLeaseProgressResponse)
		return soap_closesock(soap);
	ns2__HttpNfcLeaseProgressResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__HttpNfcLeaseProgressResponse->soap_get(soap, "ns2:HttpNfcLeaseProgressResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryIpPools(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryIpPoolsRequestType *ns2__QueryIpPools, _ns2__QueryIpPoolsResponse *ns2__QueryIpPoolsResponse)
{	struct __ns2__QueryIpPools soap_tmp___ns2__QueryIpPools;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryIpPools.ns2__QueryIpPools = ns2__QueryIpPools;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryIpPools(soap, &soap_tmp___ns2__QueryIpPools);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryIpPools(soap, &soap_tmp___ns2__QueryIpPools, "-ns2:QueryIpPools", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryIpPools(soap, &soap_tmp___ns2__QueryIpPools, "-ns2:QueryIpPools", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryIpPoolsResponse)
		return soap_closesock(soap);
	ns2__QueryIpPoolsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryIpPoolsResponse->soap_get(soap, "ns2:QueryIpPoolsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__CreateIpPool(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__CreateIpPoolRequestType *ns2__CreateIpPool, _ns2__CreateIpPoolResponse *ns2__CreateIpPoolResponse)
{	struct __ns2__CreateIpPool soap_tmp___ns2__CreateIpPool;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__CreateIpPool.ns2__CreateIpPool = ns2__CreateIpPool;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__CreateIpPool(soap, &soap_tmp___ns2__CreateIpPool);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__CreateIpPool(soap, &soap_tmp___ns2__CreateIpPool, "-ns2:CreateIpPool", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__CreateIpPool(soap, &soap_tmp___ns2__CreateIpPool, "-ns2:CreateIpPool", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CreateIpPoolResponse)
		return soap_closesock(soap);
	ns2__CreateIpPoolResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CreateIpPoolResponse->soap_get(soap, "ns2:CreateIpPoolResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UpdateIpPool(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UpdateIpPoolRequestType *ns2__UpdateIpPool, _ns2__UpdateIpPoolResponse *ns2__UpdateIpPoolResponse)
{	struct __ns2__UpdateIpPool soap_tmp___ns2__UpdateIpPool;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UpdateIpPool.ns2__UpdateIpPool = ns2__UpdateIpPool;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UpdateIpPool(soap, &soap_tmp___ns2__UpdateIpPool);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UpdateIpPool(soap, &soap_tmp___ns2__UpdateIpPool, "-ns2:UpdateIpPool", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UpdateIpPool(soap, &soap_tmp___ns2__UpdateIpPool, "-ns2:UpdateIpPool", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UpdateIpPoolResponse)
		return soap_closesock(soap);
	ns2__UpdateIpPoolResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UpdateIpPoolResponse->soap_get(soap, "ns2:UpdateIpPoolResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__DestroyIpPool(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__DestroyIpPoolRequestType *ns2__DestroyIpPool, _ns2__DestroyIpPoolResponse *ns2__DestroyIpPoolResponse)
{	struct __ns2__DestroyIpPool soap_tmp___ns2__DestroyIpPool;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__DestroyIpPool.ns2__DestroyIpPool = ns2__DestroyIpPool;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__DestroyIpPool(soap, &soap_tmp___ns2__DestroyIpPool);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__DestroyIpPool(soap, &soap_tmp___ns2__DestroyIpPool, "-ns2:DestroyIpPool", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__DestroyIpPool(soap, &soap_tmp___ns2__DestroyIpPool, "-ns2:DestroyIpPool", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__DestroyIpPoolResponse)
		return soap_closesock(soap);
	ns2__DestroyIpPoolResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__DestroyIpPoolResponse->soap_get(soap, "ns2:DestroyIpPoolResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__AllocateIpv4Address(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__AllocateIpv4AddressRequestType *ns2__AllocateIpv4Address, _ns2__AllocateIpv4AddressResponse *ns2__AllocateIpv4AddressResponse)
{	struct __ns2__AllocateIpv4Address soap_tmp___ns2__AllocateIpv4Address;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__AllocateIpv4Address.ns2__AllocateIpv4Address = ns2__AllocateIpv4Address;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__AllocateIpv4Address(soap, &soap_tmp___ns2__AllocateIpv4Address);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__AllocateIpv4Address(soap, &soap_tmp___ns2__AllocateIpv4Address, "-ns2:AllocateIpv4Address", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__AllocateIpv4Address(soap, &soap_tmp___ns2__AllocateIpv4Address, "-ns2:AllocateIpv4Address", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__AllocateIpv4AddressResponse)
		return soap_closesock(soap);
	ns2__AllocateIpv4AddressResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__AllocateIpv4AddressResponse->soap_get(soap, "ns2:AllocateIpv4AddressResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__AllocateIpv6Address(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__AllocateIpv6AddressRequestType *ns2__AllocateIpv6Address, _ns2__AllocateIpv6AddressResponse *ns2__AllocateIpv6AddressResponse)
{	struct __ns2__AllocateIpv6Address soap_tmp___ns2__AllocateIpv6Address;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__AllocateIpv6Address.ns2__AllocateIpv6Address = ns2__AllocateIpv6Address;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__AllocateIpv6Address(soap, &soap_tmp___ns2__AllocateIpv6Address);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__AllocateIpv6Address(soap, &soap_tmp___ns2__AllocateIpv6Address, "-ns2:AllocateIpv6Address", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__AllocateIpv6Address(soap, &soap_tmp___ns2__AllocateIpv6Address, "-ns2:AllocateIpv6Address", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__AllocateIpv6AddressResponse)
		return soap_closesock(soap);
	ns2__AllocateIpv6AddressResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__AllocateIpv6AddressResponse->soap_get(soap, "ns2:AllocateIpv6AddressResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ReleaseIpAllocation(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ReleaseIpAllocationRequestType *ns2__ReleaseIpAllocation, _ns2__ReleaseIpAllocationResponse *ns2__ReleaseIpAllocationResponse)
{	struct __ns2__ReleaseIpAllocation soap_tmp___ns2__ReleaseIpAllocation;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ReleaseIpAllocation.ns2__ReleaseIpAllocation = ns2__ReleaseIpAllocation;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ReleaseIpAllocation(soap, &soap_tmp___ns2__ReleaseIpAllocation);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ReleaseIpAllocation(soap, &soap_tmp___ns2__ReleaseIpAllocation, "-ns2:ReleaseIpAllocation", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ReleaseIpAllocation(soap, &soap_tmp___ns2__ReleaseIpAllocation, "-ns2:ReleaseIpAllocation", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ReleaseIpAllocationResponse)
		return soap_closesock(soap);
	ns2__ReleaseIpAllocationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ReleaseIpAllocationResponse->soap_get(soap, "ns2:ReleaseIpAllocationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryIPAllocations(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryIPAllocationsRequestType *ns2__QueryIPAllocations, _ns2__QueryIPAllocationsResponse *ns2__QueryIPAllocationsResponse)
{	struct __ns2__QueryIPAllocations soap_tmp___ns2__QueryIPAllocations;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryIPAllocations.ns2__QueryIPAllocations = ns2__QueryIPAllocations;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryIPAllocations(soap, &soap_tmp___ns2__QueryIPAllocations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryIPAllocations(soap, &soap_tmp___ns2__QueryIPAllocations, "-ns2:QueryIPAllocations", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryIPAllocations(soap, &soap_tmp___ns2__QueryIPAllocations, "-ns2:QueryIPAllocations", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryIPAllocationsResponse)
		return soap_closesock(soap);
	ns2__QueryIPAllocationsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryIPAllocationsResponse->soap_get(soap, "ns2:QueryIPAllocationsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UpdateAssignedLicense(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UpdateAssignedLicenseRequestType *ns2__UpdateAssignedLicense, _ns2__UpdateAssignedLicenseResponse *ns2__UpdateAssignedLicenseResponse)
{	struct __ns2__UpdateAssignedLicense soap_tmp___ns2__UpdateAssignedLicense;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UpdateAssignedLicense.ns2__UpdateAssignedLicense = ns2__UpdateAssignedLicense;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UpdateAssignedLicense(soap, &soap_tmp___ns2__UpdateAssignedLicense);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UpdateAssignedLicense(soap, &soap_tmp___ns2__UpdateAssignedLicense, "-ns2:UpdateAssignedLicense", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UpdateAssignedLicense(soap, &soap_tmp___ns2__UpdateAssignedLicense, "-ns2:UpdateAssignedLicense", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UpdateAssignedLicenseResponse)
		return soap_closesock(soap);
	ns2__UpdateAssignedLicenseResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UpdateAssignedLicenseResponse->soap_get(soap, "ns2:UpdateAssignedLicenseResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RemoveAssignedLicense(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RemoveAssignedLicenseRequestType *ns2__RemoveAssignedLicense, _ns2__RemoveAssignedLicenseResponse *ns2__RemoveAssignedLicenseResponse)
{	struct __ns2__RemoveAssignedLicense soap_tmp___ns2__RemoveAssignedLicense;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RemoveAssignedLicense.ns2__RemoveAssignedLicense = ns2__RemoveAssignedLicense;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RemoveAssignedLicense(soap, &soap_tmp___ns2__RemoveAssignedLicense);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RemoveAssignedLicense(soap, &soap_tmp___ns2__RemoveAssignedLicense, "-ns2:RemoveAssignedLicense", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RemoveAssignedLicense(soap, &soap_tmp___ns2__RemoveAssignedLicense, "-ns2:RemoveAssignedLicense", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RemoveAssignedLicenseResponse)
		return soap_closesock(soap);
	ns2__RemoveAssignedLicenseResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RemoveAssignedLicenseResponse->soap_get(soap, "ns2:RemoveAssignedLicenseResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryAssignedLicenses(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryAssignedLicensesRequestType *ns2__QueryAssignedLicenses, _ns2__QueryAssignedLicensesResponse *ns2__QueryAssignedLicensesResponse)
{	struct __ns2__QueryAssignedLicenses soap_tmp___ns2__QueryAssignedLicenses;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryAssignedLicenses.ns2__QueryAssignedLicenses = ns2__QueryAssignedLicenses;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryAssignedLicenses(soap, &soap_tmp___ns2__QueryAssignedLicenses);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryAssignedLicenses(soap, &soap_tmp___ns2__QueryAssignedLicenses, "-ns2:QueryAssignedLicenses", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryAssignedLicenses(soap, &soap_tmp___ns2__QueryAssignedLicenses, "-ns2:QueryAssignedLicenses", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryAssignedLicensesResponse)
		return soap_closesock(soap);
	ns2__QueryAssignedLicensesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryAssignedLicensesResponse->soap_get(soap, "ns2:QueryAssignedLicensesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QuerySupportedFeatures(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QuerySupportedFeaturesRequestType *ns2__QuerySupportedFeatures, _ns2__QuerySupportedFeaturesResponse *ns2__QuerySupportedFeaturesResponse)
{	struct __ns2__QuerySupportedFeatures soap_tmp___ns2__QuerySupportedFeatures;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QuerySupportedFeatures.ns2__QuerySupportedFeatures = ns2__QuerySupportedFeatures;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QuerySupportedFeatures(soap, &soap_tmp___ns2__QuerySupportedFeatures);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QuerySupportedFeatures(soap, &soap_tmp___ns2__QuerySupportedFeatures, "-ns2:QuerySupportedFeatures", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QuerySupportedFeatures(soap, &soap_tmp___ns2__QuerySupportedFeatures, "-ns2:QuerySupportedFeatures", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QuerySupportedFeaturesResponse)
		return soap_closesock(soap);
	ns2__QuerySupportedFeaturesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QuerySupportedFeaturesResponse->soap_get(soap, "ns2:QuerySupportedFeaturesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryLicenseSourceAvailability(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryLicenseSourceAvailabilityRequestType *ns2__QueryLicenseSourceAvailability, _ns2__QueryLicenseSourceAvailabilityResponse *ns2__QueryLicenseSourceAvailabilityResponse)
{	struct __ns2__QueryLicenseSourceAvailability soap_tmp___ns2__QueryLicenseSourceAvailability;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryLicenseSourceAvailability.ns2__QueryLicenseSourceAvailability = ns2__QueryLicenseSourceAvailability;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryLicenseSourceAvailability(soap, &soap_tmp___ns2__QueryLicenseSourceAvailability);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryLicenseSourceAvailability(soap, &soap_tmp___ns2__QueryLicenseSourceAvailability, "-ns2:QueryLicenseSourceAvailability", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryLicenseSourceAvailability(soap, &soap_tmp___ns2__QueryLicenseSourceAvailability, "-ns2:QueryLicenseSourceAvailability", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryLicenseSourceAvailabilityResponse)
		return soap_closesock(soap);
	ns2__QueryLicenseSourceAvailabilityResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryLicenseSourceAvailabilityResponse->soap_get(soap, "ns2:QueryLicenseSourceAvailabilityResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryLicenseUsage(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryLicenseUsageRequestType *ns2__QueryLicenseUsage, _ns2__QueryLicenseUsageResponse *ns2__QueryLicenseUsageResponse)
{	struct __ns2__QueryLicenseUsage soap_tmp___ns2__QueryLicenseUsage;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryLicenseUsage.ns2__QueryLicenseUsage = ns2__QueryLicenseUsage;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryLicenseUsage(soap, &soap_tmp___ns2__QueryLicenseUsage);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryLicenseUsage(soap, &soap_tmp___ns2__QueryLicenseUsage, "-ns2:QueryLicenseUsage", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryLicenseUsage(soap, &soap_tmp___ns2__QueryLicenseUsage, "-ns2:QueryLicenseUsage", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryLicenseUsageResponse)
		return soap_closesock(soap);
	ns2__QueryLicenseUsageResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryLicenseUsageResponse->soap_get(soap, "ns2:QueryLicenseUsageResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__SetLicenseEdition(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__SetLicenseEditionRequestType *ns2__SetLicenseEdition, _ns2__SetLicenseEditionResponse *ns2__SetLicenseEditionResponse)
{	struct __ns2__SetLicenseEdition soap_tmp___ns2__SetLicenseEdition;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__SetLicenseEdition.ns2__SetLicenseEdition = ns2__SetLicenseEdition;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__SetLicenseEdition(soap, &soap_tmp___ns2__SetLicenseEdition);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__SetLicenseEdition(soap, &soap_tmp___ns2__SetLicenseEdition, "-ns2:SetLicenseEdition", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__SetLicenseEdition(soap, &soap_tmp___ns2__SetLicenseEdition, "-ns2:SetLicenseEdition", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__SetLicenseEditionResponse)
		return soap_closesock(soap);
	ns2__SetLicenseEditionResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__SetLicenseEditionResponse->soap_get(soap, "ns2:SetLicenseEditionResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__CheckLicenseFeature(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__CheckLicenseFeatureRequestType *ns2__CheckLicenseFeature, _ns2__CheckLicenseFeatureResponse *ns2__CheckLicenseFeatureResponse)
{	struct __ns2__CheckLicenseFeature soap_tmp___ns2__CheckLicenseFeature;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__CheckLicenseFeature.ns2__CheckLicenseFeature = ns2__CheckLicenseFeature;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__CheckLicenseFeature(soap, &soap_tmp___ns2__CheckLicenseFeature);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__CheckLicenseFeature(soap, &soap_tmp___ns2__CheckLicenseFeature, "-ns2:CheckLicenseFeature", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__CheckLicenseFeature(soap, &soap_tmp___ns2__CheckLicenseFeature, "-ns2:CheckLicenseFeature", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CheckLicenseFeatureResponse)
		return soap_closesock(soap);
	ns2__CheckLicenseFeatureResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CheckLicenseFeatureResponse->soap_get(soap, "ns2:CheckLicenseFeatureResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__EnableFeature(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__EnableFeatureRequestType *ns2__EnableFeature, _ns2__EnableFeatureResponse *ns2__EnableFeatureResponse)
{	struct __ns2__EnableFeature soap_tmp___ns2__EnableFeature;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__EnableFeature.ns2__EnableFeature = ns2__EnableFeature;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__EnableFeature(soap, &soap_tmp___ns2__EnableFeature);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__EnableFeature(soap, &soap_tmp___ns2__EnableFeature, "-ns2:EnableFeature", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__EnableFeature(soap, &soap_tmp___ns2__EnableFeature, "-ns2:EnableFeature", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__EnableFeatureResponse)
		return soap_closesock(soap);
	ns2__EnableFeatureResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__EnableFeatureResponse->soap_get(soap, "ns2:EnableFeatureResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__DisableFeature(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__DisableFeatureRequestType *ns2__DisableFeature, _ns2__DisableFeatureResponse *ns2__DisableFeatureResponse)
{	struct __ns2__DisableFeature soap_tmp___ns2__DisableFeature;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__DisableFeature.ns2__DisableFeature = ns2__DisableFeature;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__DisableFeature(soap, &soap_tmp___ns2__DisableFeature);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__DisableFeature(soap, &soap_tmp___ns2__DisableFeature, "-ns2:DisableFeature", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__DisableFeature(soap, &soap_tmp___ns2__DisableFeature, "-ns2:DisableFeature", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__DisableFeatureResponse)
		return soap_closesock(soap);
	ns2__DisableFeatureResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__DisableFeatureResponse->soap_get(soap, "ns2:DisableFeatureResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ConfigureLicenseSource(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ConfigureLicenseSourceRequestType *ns2__ConfigureLicenseSource, _ns2__ConfigureLicenseSourceResponse *ns2__ConfigureLicenseSourceResponse)
{	struct __ns2__ConfigureLicenseSource soap_tmp___ns2__ConfigureLicenseSource;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ConfigureLicenseSource.ns2__ConfigureLicenseSource = ns2__ConfigureLicenseSource;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ConfigureLicenseSource(soap, &soap_tmp___ns2__ConfigureLicenseSource);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ConfigureLicenseSource(soap, &soap_tmp___ns2__ConfigureLicenseSource, "-ns2:ConfigureLicenseSource", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ConfigureLicenseSource(soap, &soap_tmp___ns2__ConfigureLicenseSource, "-ns2:ConfigureLicenseSource", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ConfigureLicenseSourceResponse)
		return soap_closesock(soap);
	ns2__ConfigureLicenseSourceResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ConfigureLicenseSourceResponse->soap_get(soap, "ns2:ConfigureLicenseSourceResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UpdateLicense(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UpdateLicenseRequestType *ns2__UpdateLicense, _ns2__UpdateLicenseResponse *ns2__UpdateLicenseResponse)
{	struct __ns2__UpdateLicense soap_tmp___ns2__UpdateLicense;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UpdateLicense.ns2__UpdateLicense = ns2__UpdateLicense;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UpdateLicense(soap, &soap_tmp___ns2__UpdateLicense);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UpdateLicense(soap, &soap_tmp___ns2__UpdateLicense, "-ns2:UpdateLicense", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UpdateLicense(soap, &soap_tmp___ns2__UpdateLicense, "-ns2:UpdateLicense", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UpdateLicenseResponse)
		return soap_closesock(soap);
	ns2__UpdateLicenseResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UpdateLicenseResponse->soap_get(soap, "ns2:UpdateLicenseResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__AddLicense(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__AddLicenseRequestType *ns2__AddLicense, _ns2__AddLicenseResponse *ns2__AddLicenseResponse)
{	struct __ns2__AddLicense soap_tmp___ns2__AddLicense;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__AddLicense.ns2__AddLicense = ns2__AddLicense;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__AddLicense(soap, &soap_tmp___ns2__AddLicense);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__AddLicense(soap, &soap_tmp___ns2__AddLicense, "-ns2:AddLicense", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__AddLicense(soap, &soap_tmp___ns2__AddLicense, "-ns2:AddLicense", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__AddLicenseResponse)
		return soap_closesock(soap);
	ns2__AddLicenseResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__AddLicenseResponse->soap_get(soap, "ns2:AddLicenseResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RemoveLicense(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RemoveLicenseRequestType *ns2__RemoveLicense, _ns2__RemoveLicenseResponse *ns2__RemoveLicenseResponse)
{	struct __ns2__RemoveLicense soap_tmp___ns2__RemoveLicense;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RemoveLicense.ns2__RemoveLicense = ns2__RemoveLicense;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RemoveLicense(soap, &soap_tmp___ns2__RemoveLicense);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RemoveLicense(soap, &soap_tmp___ns2__RemoveLicense, "-ns2:RemoveLicense", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RemoveLicense(soap, &soap_tmp___ns2__RemoveLicense, "-ns2:RemoveLicense", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RemoveLicenseResponse)
		return soap_closesock(soap);
	ns2__RemoveLicenseResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RemoveLicenseResponse->soap_get(soap, "ns2:RemoveLicenseResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__DecodeLicense(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__DecodeLicenseRequestType *ns2__DecodeLicense, _ns2__DecodeLicenseResponse *ns2__DecodeLicenseResponse)
{	struct __ns2__DecodeLicense soap_tmp___ns2__DecodeLicense;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__DecodeLicense.ns2__DecodeLicense = ns2__DecodeLicense;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__DecodeLicense(soap, &soap_tmp___ns2__DecodeLicense);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__DecodeLicense(soap, &soap_tmp___ns2__DecodeLicense, "-ns2:DecodeLicense", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__DecodeLicense(soap, &soap_tmp___ns2__DecodeLicense, "-ns2:DecodeLicense", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__DecodeLicenseResponse)
		return soap_closesock(soap);
	ns2__DecodeLicenseResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__DecodeLicenseResponse->soap_get(soap, "ns2:DecodeLicenseResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UpdateLicenseLabel(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UpdateLicenseLabelRequestType *ns2__UpdateLicenseLabel, _ns2__UpdateLicenseLabelResponse *ns2__UpdateLicenseLabelResponse)
{	struct __ns2__UpdateLicenseLabel soap_tmp___ns2__UpdateLicenseLabel;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UpdateLicenseLabel.ns2__UpdateLicenseLabel = ns2__UpdateLicenseLabel;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UpdateLicenseLabel(soap, &soap_tmp___ns2__UpdateLicenseLabel);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UpdateLicenseLabel(soap, &soap_tmp___ns2__UpdateLicenseLabel, "-ns2:UpdateLicenseLabel", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UpdateLicenseLabel(soap, &soap_tmp___ns2__UpdateLicenseLabel, "-ns2:UpdateLicenseLabel", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UpdateLicenseLabelResponse)
		return soap_closesock(soap);
	ns2__UpdateLicenseLabelResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UpdateLicenseLabelResponse->soap_get(soap, "ns2:UpdateLicenseLabelResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RemoveLicenseLabel(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RemoveLicenseLabelRequestType *ns2__RemoveLicenseLabel, _ns2__RemoveLicenseLabelResponse *ns2__RemoveLicenseLabelResponse)
{	struct __ns2__RemoveLicenseLabel soap_tmp___ns2__RemoveLicenseLabel;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RemoveLicenseLabel.ns2__RemoveLicenseLabel = ns2__RemoveLicenseLabel;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RemoveLicenseLabel(soap, &soap_tmp___ns2__RemoveLicenseLabel);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RemoveLicenseLabel(soap, &soap_tmp___ns2__RemoveLicenseLabel, "-ns2:RemoveLicenseLabel", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RemoveLicenseLabel(soap, &soap_tmp___ns2__RemoveLicenseLabel, "-ns2:RemoveLicenseLabel", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RemoveLicenseLabelResponse)
		return soap_closesock(soap);
	ns2__RemoveLicenseLabelResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RemoveLicenseLabelResponse->soap_get(soap, "ns2:RemoveLicenseLabelResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__Reload(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ReloadRequestType *ns2__Reload, _ns2__ReloadResponse *ns2__ReloadResponse)
{	struct __ns2__Reload soap_tmp___ns2__Reload;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__Reload.ns2__Reload = ns2__Reload;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__Reload(soap, &soap_tmp___ns2__Reload);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__Reload(soap, &soap_tmp___ns2__Reload, "-ns2:Reload", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__Reload(soap, &soap_tmp___ns2__Reload, "-ns2:Reload", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ReloadResponse)
		return soap_closesock(soap);
	ns2__ReloadResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ReloadResponse->soap_get(soap, "ns2:ReloadResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__Rename_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RenameRequestType *ns2__Rename_USCORETask, _ns2__Rename_USCORETaskResponse *ns2__Rename_USCORETaskResponse)
{	struct __ns2__Rename_USCORETask soap_tmp___ns2__Rename_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__Rename_USCORETask.ns2__Rename_USCORETask = ns2__Rename_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__Rename_USCORETask(soap, &soap_tmp___ns2__Rename_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__Rename_USCORETask(soap, &soap_tmp___ns2__Rename_USCORETask, "-ns2:Rename_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__Rename_USCORETask(soap, &soap_tmp___ns2__Rename_USCORETask, "-ns2:Rename_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__Rename_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__Rename_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__Rename_USCORETaskResponse->soap_get(soap, "ns2:Rename_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__Destroy_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__DestroyRequestType *ns2__Destroy_USCORETask, _ns2__Destroy_USCORETaskResponse *ns2__Destroy_USCORETaskResponse)
{	struct __ns2__Destroy_USCORETask soap_tmp___ns2__Destroy_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__Destroy_USCORETask.ns2__Destroy_USCORETask = ns2__Destroy_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__Destroy_USCORETask(soap, &soap_tmp___ns2__Destroy_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__Destroy_USCORETask(soap, &soap_tmp___ns2__Destroy_USCORETask, "-ns2:Destroy_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__Destroy_USCORETask(soap, &soap_tmp___ns2__Destroy_USCORETask, "-ns2:Destroy_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__Destroy_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__Destroy_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__Destroy_USCORETaskResponse->soap_get(soap, "ns2:Destroy_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__DestroyNetwork(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__DestroyNetworkRequestType *ns2__DestroyNetwork, _ns2__DestroyNetworkResponse *ns2__DestroyNetworkResponse)
{	struct __ns2__DestroyNetwork soap_tmp___ns2__DestroyNetwork;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__DestroyNetwork.ns2__DestroyNetwork = ns2__DestroyNetwork;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__DestroyNetwork(soap, &soap_tmp___ns2__DestroyNetwork);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__DestroyNetwork(soap, &soap_tmp___ns2__DestroyNetwork, "-ns2:DestroyNetwork", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__DestroyNetwork(soap, &soap_tmp___ns2__DestroyNetwork, "-ns2:DestroyNetwork", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__DestroyNetworkResponse)
		return soap_closesock(soap);
	ns2__DestroyNetworkResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__DestroyNetworkResponse->soap_get(soap, "ns2:DestroyNetworkResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ValidateHost(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ValidateHostRequestType *ns2__ValidateHost, _ns2__ValidateHostResponse *ns2__ValidateHostResponse)
{	struct __ns2__ValidateHost soap_tmp___ns2__ValidateHost;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ValidateHost.ns2__ValidateHost = ns2__ValidateHost;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ValidateHost(soap, &soap_tmp___ns2__ValidateHost);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ValidateHost(soap, &soap_tmp___ns2__ValidateHost, "-ns2:ValidateHost", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ValidateHost(soap, &soap_tmp___ns2__ValidateHost, "-ns2:ValidateHost", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ValidateHostResponse)
		return soap_closesock(soap);
	ns2__ValidateHostResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ValidateHostResponse->soap_get(soap, "ns2:ValidateHostResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ParseDescriptor(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ParseDescriptorRequestType *ns2__ParseDescriptor, _ns2__ParseDescriptorResponse *ns2__ParseDescriptorResponse)
{	struct __ns2__ParseDescriptor soap_tmp___ns2__ParseDescriptor;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ParseDescriptor.ns2__ParseDescriptor = ns2__ParseDescriptor;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ParseDescriptor(soap, &soap_tmp___ns2__ParseDescriptor);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ParseDescriptor(soap, &soap_tmp___ns2__ParseDescriptor, "-ns2:ParseDescriptor", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ParseDescriptor(soap, &soap_tmp___ns2__ParseDescriptor, "-ns2:ParseDescriptor", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ParseDescriptorResponse)
		return soap_closesock(soap);
	ns2__ParseDescriptorResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ParseDescriptorResponse->soap_get(soap, "ns2:ParseDescriptorResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__CreateImportSpec(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__CreateImportSpecRequestType *ns2__CreateImportSpec, _ns2__CreateImportSpecResponse *ns2__CreateImportSpecResponse)
{	struct __ns2__CreateImportSpec soap_tmp___ns2__CreateImportSpec;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__CreateImportSpec.ns2__CreateImportSpec = ns2__CreateImportSpec;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__CreateImportSpec(soap, &soap_tmp___ns2__CreateImportSpec);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__CreateImportSpec(soap, &soap_tmp___ns2__CreateImportSpec, "-ns2:CreateImportSpec", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__CreateImportSpec(soap, &soap_tmp___ns2__CreateImportSpec, "-ns2:CreateImportSpec", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CreateImportSpecResponse)
		return soap_closesock(soap);
	ns2__CreateImportSpecResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CreateImportSpecResponse->soap_get(soap, "ns2:CreateImportSpecResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__CreateDescriptor(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__CreateDescriptorRequestType *ns2__CreateDescriptor, _ns2__CreateDescriptorResponse *ns2__CreateDescriptorResponse)
{	struct __ns2__CreateDescriptor soap_tmp___ns2__CreateDescriptor;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__CreateDescriptor.ns2__CreateDescriptor = ns2__CreateDescriptor;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__CreateDescriptor(soap, &soap_tmp___ns2__CreateDescriptor);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__CreateDescriptor(soap, &soap_tmp___ns2__CreateDescriptor, "-ns2:CreateDescriptor", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__CreateDescriptor(soap, &soap_tmp___ns2__CreateDescriptor, "-ns2:CreateDescriptor", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CreateDescriptorResponse)
		return soap_closesock(soap);
	ns2__CreateDescriptorResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CreateDescriptorResponse->soap_get(soap, "ns2:CreateDescriptorResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryPerfProviderSummary(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryPerfProviderSummaryRequestType *ns2__QueryPerfProviderSummary, _ns2__QueryPerfProviderSummaryResponse *ns2__QueryPerfProviderSummaryResponse)
{	struct __ns2__QueryPerfProviderSummary soap_tmp___ns2__QueryPerfProviderSummary;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryPerfProviderSummary.ns2__QueryPerfProviderSummary = ns2__QueryPerfProviderSummary;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryPerfProviderSummary(soap, &soap_tmp___ns2__QueryPerfProviderSummary);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryPerfProviderSummary(soap, &soap_tmp___ns2__QueryPerfProviderSummary, "-ns2:QueryPerfProviderSummary", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryPerfProviderSummary(soap, &soap_tmp___ns2__QueryPerfProviderSummary, "-ns2:QueryPerfProviderSummary", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryPerfProviderSummaryResponse)
		return soap_closesock(soap);
	ns2__QueryPerfProviderSummaryResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryPerfProviderSummaryResponse->soap_get(soap, "ns2:QueryPerfProviderSummaryResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryAvailablePerfMetric(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryAvailablePerfMetricRequestType *ns2__QueryAvailablePerfMetric, _ns2__QueryAvailablePerfMetricResponse *ns2__QueryAvailablePerfMetricResponse)
{	struct __ns2__QueryAvailablePerfMetric soap_tmp___ns2__QueryAvailablePerfMetric;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryAvailablePerfMetric.ns2__QueryAvailablePerfMetric = ns2__QueryAvailablePerfMetric;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryAvailablePerfMetric(soap, &soap_tmp___ns2__QueryAvailablePerfMetric);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryAvailablePerfMetric(soap, &soap_tmp___ns2__QueryAvailablePerfMetric, "-ns2:QueryAvailablePerfMetric", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryAvailablePerfMetric(soap, &soap_tmp___ns2__QueryAvailablePerfMetric, "-ns2:QueryAvailablePerfMetric", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryAvailablePerfMetricResponse)
		return soap_closesock(soap);
	ns2__QueryAvailablePerfMetricResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryAvailablePerfMetricResponse->soap_get(soap, "ns2:QueryAvailablePerfMetricResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryPerfCounter(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryPerfCounterRequestType *ns2__QueryPerfCounter, _ns2__QueryPerfCounterResponse *ns2__QueryPerfCounterResponse)
{	struct __ns2__QueryPerfCounter soap_tmp___ns2__QueryPerfCounter;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryPerfCounter.ns2__QueryPerfCounter = ns2__QueryPerfCounter;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryPerfCounter(soap, &soap_tmp___ns2__QueryPerfCounter);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryPerfCounter(soap, &soap_tmp___ns2__QueryPerfCounter, "-ns2:QueryPerfCounter", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryPerfCounter(soap, &soap_tmp___ns2__QueryPerfCounter, "-ns2:QueryPerfCounter", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryPerfCounterResponse)
		return soap_closesock(soap);
	ns2__QueryPerfCounterResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryPerfCounterResponse->soap_get(soap, "ns2:QueryPerfCounterResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryPerfCounterByLevel(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryPerfCounterByLevelRequestType *ns2__QueryPerfCounterByLevel, _ns2__QueryPerfCounterByLevelResponse *ns2__QueryPerfCounterByLevelResponse)
{	struct __ns2__QueryPerfCounterByLevel soap_tmp___ns2__QueryPerfCounterByLevel;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryPerfCounterByLevel.ns2__QueryPerfCounterByLevel = ns2__QueryPerfCounterByLevel;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryPerfCounterByLevel(soap, &soap_tmp___ns2__QueryPerfCounterByLevel);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryPerfCounterByLevel(soap, &soap_tmp___ns2__QueryPerfCounterByLevel, "-ns2:QueryPerfCounterByLevel", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryPerfCounterByLevel(soap, &soap_tmp___ns2__QueryPerfCounterByLevel, "-ns2:QueryPerfCounterByLevel", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryPerfCounterByLevelResponse)
		return soap_closesock(soap);
	ns2__QueryPerfCounterByLevelResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryPerfCounterByLevelResponse->soap_get(soap, "ns2:QueryPerfCounterByLevelResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryPerf(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryPerfRequestType *ns2__QueryPerf, _ns2__QueryPerfResponse *ns2__QueryPerfResponse)
{	struct __ns2__QueryPerf soap_tmp___ns2__QueryPerf;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryPerf.ns2__QueryPerf = ns2__QueryPerf;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryPerf(soap, &soap_tmp___ns2__QueryPerf);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryPerf(soap, &soap_tmp___ns2__QueryPerf, "-ns2:QueryPerf", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryPerf(soap, &soap_tmp___ns2__QueryPerf, "-ns2:QueryPerf", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryPerfResponse)
		return soap_closesock(soap);
	ns2__QueryPerfResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryPerfResponse->soap_get(soap, "ns2:QueryPerfResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryPerfComposite(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryPerfCompositeRequestType *ns2__QueryPerfComposite, _ns2__QueryPerfCompositeResponse *ns2__QueryPerfCompositeResponse)
{	struct __ns2__QueryPerfComposite soap_tmp___ns2__QueryPerfComposite;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryPerfComposite.ns2__QueryPerfComposite = ns2__QueryPerfComposite;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryPerfComposite(soap, &soap_tmp___ns2__QueryPerfComposite);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryPerfComposite(soap, &soap_tmp___ns2__QueryPerfComposite, "-ns2:QueryPerfComposite", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryPerfComposite(soap, &soap_tmp___ns2__QueryPerfComposite, "-ns2:QueryPerfComposite", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryPerfCompositeResponse)
		return soap_closesock(soap);
	ns2__QueryPerfCompositeResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryPerfCompositeResponse->soap_get(soap, "ns2:QueryPerfCompositeResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__CreatePerfInterval(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__CreatePerfIntervalRequestType *ns2__CreatePerfInterval, _ns2__CreatePerfIntervalResponse *ns2__CreatePerfIntervalResponse)
{	struct __ns2__CreatePerfInterval soap_tmp___ns2__CreatePerfInterval;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__CreatePerfInterval.ns2__CreatePerfInterval = ns2__CreatePerfInterval;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__CreatePerfInterval(soap, &soap_tmp___ns2__CreatePerfInterval);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__CreatePerfInterval(soap, &soap_tmp___ns2__CreatePerfInterval, "-ns2:CreatePerfInterval", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__CreatePerfInterval(soap, &soap_tmp___ns2__CreatePerfInterval, "-ns2:CreatePerfInterval", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CreatePerfIntervalResponse)
		return soap_closesock(soap);
	ns2__CreatePerfIntervalResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CreatePerfIntervalResponse->soap_get(soap, "ns2:CreatePerfIntervalResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RemovePerfInterval(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RemovePerfIntervalRequestType *ns2__RemovePerfInterval, _ns2__RemovePerfIntervalResponse *ns2__RemovePerfIntervalResponse)
{	struct __ns2__RemovePerfInterval soap_tmp___ns2__RemovePerfInterval;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RemovePerfInterval.ns2__RemovePerfInterval = ns2__RemovePerfInterval;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RemovePerfInterval(soap, &soap_tmp___ns2__RemovePerfInterval);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RemovePerfInterval(soap, &soap_tmp___ns2__RemovePerfInterval, "-ns2:RemovePerfInterval", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RemovePerfInterval(soap, &soap_tmp___ns2__RemovePerfInterval, "-ns2:RemovePerfInterval", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RemovePerfIntervalResponse)
		return soap_closesock(soap);
	ns2__RemovePerfIntervalResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RemovePerfIntervalResponse->soap_get(soap, "ns2:RemovePerfIntervalResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UpdatePerfInterval(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UpdatePerfIntervalRequestType *ns2__UpdatePerfInterval, _ns2__UpdatePerfIntervalResponse *ns2__UpdatePerfIntervalResponse)
{	struct __ns2__UpdatePerfInterval soap_tmp___ns2__UpdatePerfInterval;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UpdatePerfInterval.ns2__UpdatePerfInterval = ns2__UpdatePerfInterval;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UpdatePerfInterval(soap, &soap_tmp___ns2__UpdatePerfInterval);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UpdatePerfInterval(soap, &soap_tmp___ns2__UpdatePerfInterval, "-ns2:UpdatePerfInterval", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UpdatePerfInterval(soap, &soap_tmp___ns2__UpdatePerfInterval, "-ns2:UpdatePerfInterval", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UpdatePerfIntervalResponse)
		return soap_closesock(soap);
	ns2__UpdatePerfIntervalResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UpdatePerfIntervalResponse->soap_get(soap, "ns2:UpdatePerfIntervalResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UpdateCounterLevelMapping(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UpdateCounterLevelMappingRequestType *ns2__UpdateCounterLevelMapping, _ns2__UpdateCounterLevelMappingResponse *ns2__UpdateCounterLevelMappingResponse)
{	struct __ns2__UpdateCounterLevelMapping soap_tmp___ns2__UpdateCounterLevelMapping;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UpdateCounterLevelMapping.ns2__UpdateCounterLevelMapping = ns2__UpdateCounterLevelMapping;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UpdateCounterLevelMapping(soap, &soap_tmp___ns2__UpdateCounterLevelMapping);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UpdateCounterLevelMapping(soap, &soap_tmp___ns2__UpdateCounterLevelMapping, "-ns2:UpdateCounterLevelMapping", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UpdateCounterLevelMapping(soap, &soap_tmp___ns2__UpdateCounterLevelMapping, "-ns2:UpdateCounterLevelMapping", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UpdateCounterLevelMappingResponse)
		return soap_closesock(soap);
	ns2__UpdateCounterLevelMappingResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UpdateCounterLevelMappingResponse->soap_get(soap, "ns2:UpdateCounterLevelMappingResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ResetCounterLevelMapping(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ResetCounterLevelMappingRequestType *ns2__ResetCounterLevelMapping, _ns2__ResetCounterLevelMappingResponse *ns2__ResetCounterLevelMappingResponse)
{	struct __ns2__ResetCounterLevelMapping soap_tmp___ns2__ResetCounterLevelMapping;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ResetCounterLevelMapping.ns2__ResetCounterLevelMapping = ns2__ResetCounterLevelMapping;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ResetCounterLevelMapping(soap, &soap_tmp___ns2__ResetCounterLevelMapping);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ResetCounterLevelMapping(soap, &soap_tmp___ns2__ResetCounterLevelMapping, "-ns2:ResetCounterLevelMapping", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ResetCounterLevelMapping(soap, &soap_tmp___ns2__ResetCounterLevelMapping, "-ns2:ResetCounterLevelMapping", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ResetCounterLevelMappingResponse)
		return soap_closesock(soap);
	ns2__ResetCounterLevelMappingResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ResetCounterLevelMappingResponse->soap_get(soap, "ns2:ResetCounterLevelMappingResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__EstimateDatabaseSize(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__EstimateDatabaseSizeRequestType *ns2__EstimateDatabaseSize, _ns2__EstimateDatabaseSizeResponse *ns2__EstimateDatabaseSizeResponse)
{	struct __ns2__EstimateDatabaseSize soap_tmp___ns2__EstimateDatabaseSize;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__EstimateDatabaseSize.ns2__EstimateDatabaseSize = ns2__EstimateDatabaseSize;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__EstimateDatabaseSize(soap, &soap_tmp___ns2__EstimateDatabaseSize);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__EstimateDatabaseSize(soap, &soap_tmp___ns2__EstimateDatabaseSize, "-ns2:EstimateDatabaseSize", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__EstimateDatabaseSize(soap, &soap_tmp___ns2__EstimateDatabaseSize, "-ns2:EstimateDatabaseSize", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__EstimateDatabaseSizeResponse)
		return soap_closesock(soap);
	ns2__EstimateDatabaseSizeResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__EstimateDatabaseSizeResponse->soap_get(soap, "ns2:EstimateDatabaseSizeResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UpdateConfig(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UpdateConfigRequestType *ns2__UpdateConfig, _ns2__UpdateConfigResponse *ns2__UpdateConfigResponse)
{	struct __ns2__UpdateConfig soap_tmp___ns2__UpdateConfig;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UpdateConfig.ns2__UpdateConfig = ns2__UpdateConfig;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UpdateConfig(soap, &soap_tmp___ns2__UpdateConfig);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UpdateConfig(soap, &soap_tmp___ns2__UpdateConfig, "-ns2:UpdateConfig", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UpdateConfig(soap, &soap_tmp___ns2__UpdateConfig, "-ns2:UpdateConfig", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UpdateConfigResponse)
		return soap_closesock(soap);
	ns2__UpdateConfigResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UpdateConfigResponse->soap_get(soap, "ns2:UpdateConfigResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__MoveIntoResourcePool(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__MoveIntoResourcePoolRequestType *ns2__MoveIntoResourcePool, _ns2__MoveIntoResourcePoolResponse *ns2__MoveIntoResourcePoolResponse)
{	struct __ns2__MoveIntoResourcePool soap_tmp___ns2__MoveIntoResourcePool;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__MoveIntoResourcePool.ns2__MoveIntoResourcePool = ns2__MoveIntoResourcePool;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__MoveIntoResourcePool(soap, &soap_tmp___ns2__MoveIntoResourcePool);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__MoveIntoResourcePool(soap, &soap_tmp___ns2__MoveIntoResourcePool, "-ns2:MoveIntoResourcePool", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__MoveIntoResourcePool(soap, &soap_tmp___ns2__MoveIntoResourcePool, "-ns2:MoveIntoResourcePool", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__MoveIntoResourcePoolResponse)
		return soap_closesock(soap);
	ns2__MoveIntoResourcePoolResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__MoveIntoResourcePoolResponse->soap_get(soap, "ns2:MoveIntoResourcePoolResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UpdateChildResourceConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UpdateChildResourceConfigurationRequestType *ns2__UpdateChildResourceConfiguration, _ns2__UpdateChildResourceConfigurationResponse *ns2__UpdateChildResourceConfigurationResponse)
{	struct __ns2__UpdateChildResourceConfiguration soap_tmp___ns2__UpdateChildResourceConfiguration;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UpdateChildResourceConfiguration.ns2__UpdateChildResourceConfiguration = ns2__UpdateChildResourceConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UpdateChildResourceConfiguration(soap, &soap_tmp___ns2__UpdateChildResourceConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UpdateChildResourceConfiguration(soap, &soap_tmp___ns2__UpdateChildResourceConfiguration, "-ns2:UpdateChildResourceConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UpdateChildResourceConfiguration(soap, &soap_tmp___ns2__UpdateChildResourceConfiguration, "-ns2:UpdateChildResourceConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UpdateChildResourceConfigurationResponse)
		return soap_closesock(soap);
	ns2__UpdateChildResourceConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UpdateChildResourceConfigurationResponse->soap_get(soap, "ns2:UpdateChildResourceConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__CreateResourcePool(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__CreateResourcePoolRequestType *ns2__CreateResourcePool, _ns2__CreateResourcePoolResponse *ns2__CreateResourcePoolResponse)
{	struct __ns2__CreateResourcePool soap_tmp___ns2__CreateResourcePool;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__CreateResourcePool.ns2__CreateResourcePool = ns2__CreateResourcePool;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__CreateResourcePool(soap, &soap_tmp___ns2__CreateResourcePool);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__CreateResourcePool(soap, &soap_tmp___ns2__CreateResourcePool, "-ns2:CreateResourcePool", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__CreateResourcePool(soap, &soap_tmp___ns2__CreateResourcePool, "-ns2:CreateResourcePool", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CreateResourcePoolResponse)
		return soap_closesock(soap);
	ns2__CreateResourcePoolResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CreateResourcePoolResponse->soap_get(soap, "ns2:CreateResourcePoolResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__DestroyChildren(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__DestroyChildrenRequestType *ns2__DestroyChildren, _ns2__DestroyChildrenResponse *ns2__DestroyChildrenResponse)
{	struct __ns2__DestroyChildren soap_tmp___ns2__DestroyChildren;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__DestroyChildren.ns2__DestroyChildren = ns2__DestroyChildren;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__DestroyChildren(soap, &soap_tmp___ns2__DestroyChildren);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__DestroyChildren(soap, &soap_tmp___ns2__DestroyChildren, "-ns2:DestroyChildren", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__DestroyChildren(soap, &soap_tmp___ns2__DestroyChildren, "-ns2:DestroyChildren", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__DestroyChildrenResponse)
		return soap_closesock(soap);
	ns2__DestroyChildrenResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__DestroyChildrenResponse->soap_get(soap, "ns2:DestroyChildrenResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__CreateVApp(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__CreateVAppRequestType *ns2__CreateVApp, _ns2__CreateVAppResponse *ns2__CreateVAppResponse)
{	struct __ns2__CreateVApp soap_tmp___ns2__CreateVApp;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__CreateVApp.ns2__CreateVApp = ns2__CreateVApp;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__CreateVApp(soap, &soap_tmp___ns2__CreateVApp);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__CreateVApp(soap, &soap_tmp___ns2__CreateVApp, "-ns2:CreateVApp", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__CreateVApp(soap, &soap_tmp___ns2__CreateVApp, "-ns2:CreateVApp", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CreateVAppResponse)
		return soap_closesock(soap);
	ns2__CreateVAppResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CreateVAppResponse->soap_get(soap, "ns2:CreateVAppResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__CreateChildVM_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__CreateChildVMRequestType *ns2__CreateChildVM_USCORETask, _ns2__CreateChildVM_USCORETaskResponse *ns2__CreateChildVM_USCORETaskResponse)
{	struct __ns2__CreateChildVM_USCORETask soap_tmp___ns2__CreateChildVM_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__CreateChildVM_USCORETask.ns2__CreateChildVM_USCORETask = ns2__CreateChildVM_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__CreateChildVM_USCORETask(soap, &soap_tmp___ns2__CreateChildVM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__CreateChildVM_USCORETask(soap, &soap_tmp___ns2__CreateChildVM_USCORETask, "-ns2:CreateChildVM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__CreateChildVM_USCORETask(soap, &soap_tmp___ns2__CreateChildVM_USCORETask, "-ns2:CreateChildVM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CreateChildVM_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__CreateChildVM_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CreateChildVM_USCORETaskResponse->soap_get(soap, "ns2:CreateChildVM_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RegisterChildVM_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RegisterChildVMRequestType *ns2__RegisterChildVM_USCORETask, _ns2__RegisterChildVM_USCORETaskResponse *ns2__RegisterChildVM_USCORETaskResponse)
{	struct __ns2__RegisterChildVM_USCORETask soap_tmp___ns2__RegisterChildVM_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RegisterChildVM_USCORETask.ns2__RegisterChildVM_USCORETask = ns2__RegisterChildVM_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RegisterChildVM_USCORETask(soap, &soap_tmp___ns2__RegisterChildVM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RegisterChildVM_USCORETask(soap, &soap_tmp___ns2__RegisterChildVM_USCORETask, "-ns2:RegisterChildVM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RegisterChildVM_USCORETask(soap, &soap_tmp___ns2__RegisterChildVM_USCORETask, "-ns2:RegisterChildVM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RegisterChildVM_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__RegisterChildVM_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RegisterChildVM_USCORETaskResponse->soap_get(soap, "ns2:RegisterChildVM_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ImportVApp(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ImportVAppRequestType *ns2__ImportVApp, _ns2__ImportVAppResponse *ns2__ImportVAppResponse)
{	struct __ns2__ImportVApp soap_tmp___ns2__ImportVApp;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ImportVApp.ns2__ImportVApp = ns2__ImportVApp;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ImportVApp(soap, &soap_tmp___ns2__ImportVApp);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ImportVApp(soap, &soap_tmp___ns2__ImportVApp, "-ns2:ImportVApp", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ImportVApp(soap, &soap_tmp___ns2__ImportVApp, "-ns2:ImportVApp", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ImportVAppResponse)
		return soap_closesock(soap);
	ns2__ImportVAppResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ImportVAppResponse->soap_get(soap, "ns2:ImportVAppResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryResourceConfigOption(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryResourceConfigOptionRequestType *ns2__QueryResourceConfigOption, _ns2__QueryResourceConfigOptionResponse *ns2__QueryResourceConfigOptionResponse)
{	struct __ns2__QueryResourceConfigOption soap_tmp___ns2__QueryResourceConfigOption;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryResourceConfigOption.ns2__QueryResourceConfigOption = ns2__QueryResourceConfigOption;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryResourceConfigOption(soap, &soap_tmp___ns2__QueryResourceConfigOption);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryResourceConfigOption(soap, &soap_tmp___ns2__QueryResourceConfigOption, "-ns2:QueryResourceConfigOption", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryResourceConfigOption(soap, &soap_tmp___ns2__QueryResourceConfigOption, "-ns2:QueryResourceConfigOption", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryResourceConfigOptionResponse)
		return soap_closesock(soap);
	ns2__QueryResourceConfigOptionResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryResourceConfigOptionResponse->soap_get(soap, "ns2:QueryResourceConfigOptionResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RefreshRuntime(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RefreshRuntimeRequestType *ns2__RefreshRuntime, _ns2__RefreshRuntimeResponse *ns2__RefreshRuntimeResponse)
{	struct __ns2__RefreshRuntime soap_tmp___ns2__RefreshRuntime;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RefreshRuntime.ns2__RefreshRuntime = ns2__RefreshRuntime;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RefreshRuntime(soap, &soap_tmp___ns2__RefreshRuntime);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RefreshRuntime(soap, &soap_tmp___ns2__RefreshRuntime, "-ns2:RefreshRuntime", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RefreshRuntime(soap, &soap_tmp___ns2__RefreshRuntime, "-ns2:RefreshRuntime", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RefreshRuntimeResponse)
		return soap_closesock(soap);
	ns2__RefreshRuntimeResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RefreshRuntimeResponse->soap_get(soap, "ns2:RefreshRuntimeResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__FindByUuid(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__FindByUuidRequestType *ns2__FindByUuid, _ns2__FindByUuidResponse *ns2__FindByUuidResponse)
{	struct __ns2__FindByUuid soap_tmp___ns2__FindByUuid;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__FindByUuid.ns2__FindByUuid = ns2__FindByUuid;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__FindByUuid(soap, &soap_tmp___ns2__FindByUuid);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__FindByUuid(soap, &soap_tmp___ns2__FindByUuid, "-ns2:FindByUuid", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__FindByUuid(soap, &soap_tmp___ns2__FindByUuid, "-ns2:FindByUuid", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__FindByUuidResponse)
		return soap_closesock(soap);
	ns2__FindByUuidResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__FindByUuidResponse->soap_get(soap, "ns2:FindByUuidResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__FindByDatastorePath(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__FindByDatastorePathRequestType *ns2__FindByDatastorePath, _ns2__FindByDatastorePathResponse *ns2__FindByDatastorePathResponse)
{	struct __ns2__FindByDatastorePath soap_tmp___ns2__FindByDatastorePath;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__FindByDatastorePath.ns2__FindByDatastorePath = ns2__FindByDatastorePath;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__FindByDatastorePath(soap, &soap_tmp___ns2__FindByDatastorePath);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__FindByDatastorePath(soap, &soap_tmp___ns2__FindByDatastorePath, "-ns2:FindByDatastorePath", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__FindByDatastorePath(soap, &soap_tmp___ns2__FindByDatastorePath, "-ns2:FindByDatastorePath", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__FindByDatastorePathResponse)
		return soap_closesock(soap);
	ns2__FindByDatastorePathResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__FindByDatastorePathResponse->soap_get(soap, "ns2:FindByDatastorePathResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__FindByDnsName(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__FindByDnsNameRequestType *ns2__FindByDnsName, _ns2__FindByDnsNameResponse *ns2__FindByDnsNameResponse)
{	struct __ns2__FindByDnsName soap_tmp___ns2__FindByDnsName;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__FindByDnsName.ns2__FindByDnsName = ns2__FindByDnsName;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__FindByDnsName(soap, &soap_tmp___ns2__FindByDnsName);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__FindByDnsName(soap, &soap_tmp___ns2__FindByDnsName, "-ns2:FindByDnsName", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__FindByDnsName(soap, &soap_tmp___ns2__FindByDnsName, "-ns2:FindByDnsName", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__FindByDnsNameResponse)
		return soap_closesock(soap);
	ns2__FindByDnsNameResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__FindByDnsNameResponse->soap_get(soap, "ns2:FindByDnsNameResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__FindByIp(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__FindByIpRequestType *ns2__FindByIp, _ns2__FindByIpResponse *ns2__FindByIpResponse)
{	struct __ns2__FindByIp soap_tmp___ns2__FindByIp;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__FindByIp.ns2__FindByIp = ns2__FindByIp;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__FindByIp(soap, &soap_tmp___ns2__FindByIp);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__FindByIp(soap, &soap_tmp___ns2__FindByIp, "-ns2:FindByIp", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__FindByIp(soap, &soap_tmp___ns2__FindByIp, "-ns2:FindByIp", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__FindByIpResponse)
		return soap_closesock(soap);
	ns2__FindByIpResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__FindByIpResponse->soap_get(soap, "ns2:FindByIpResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__FindByInventoryPath(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__FindByInventoryPathRequestType *ns2__FindByInventoryPath, _ns2__FindByInventoryPathResponse *ns2__FindByInventoryPathResponse)
{	struct __ns2__FindByInventoryPath soap_tmp___ns2__FindByInventoryPath;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__FindByInventoryPath.ns2__FindByInventoryPath = ns2__FindByInventoryPath;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__FindByInventoryPath(soap, &soap_tmp___ns2__FindByInventoryPath);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__FindByInventoryPath(soap, &soap_tmp___ns2__FindByInventoryPath, "-ns2:FindByInventoryPath", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__FindByInventoryPath(soap, &soap_tmp___ns2__FindByInventoryPath, "-ns2:FindByInventoryPath", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__FindByInventoryPathResponse)
		return soap_closesock(soap);
	ns2__FindByInventoryPathResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__FindByInventoryPathResponse->soap_get(soap, "ns2:FindByInventoryPathResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__FindChild(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__FindChildRequestType *ns2__FindChild, _ns2__FindChildResponse *ns2__FindChildResponse)
{	struct __ns2__FindChild soap_tmp___ns2__FindChild;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__FindChild.ns2__FindChild = ns2__FindChild;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__FindChild(soap, &soap_tmp___ns2__FindChild);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__FindChild(soap, &soap_tmp___ns2__FindChild, "-ns2:FindChild", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__FindChild(soap, &soap_tmp___ns2__FindChild, "-ns2:FindChild", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__FindChildResponse)
		return soap_closesock(soap);
	ns2__FindChildResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__FindChildResponse->soap_get(soap, "ns2:FindChildResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__FindAllByUuid(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__FindAllByUuidRequestType *ns2__FindAllByUuid, _ns2__FindAllByUuidResponse *ns2__FindAllByUuidResponse)
{	struct __ns2__FindAllByUuid soap_tmp___ns2__FindAllByUuid;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__FindAllByUuid.ns2__FindAllByUuid = ns2__FindAllByUuid;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__FindAllByUuid(soap, &soap_tmp___ns2__FindAllByUuid);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__FindAllByUuid(soap, &soap_tmp___ns2__FindAllByUuid, "-ns2:FindAllByUuid", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__FindAllByUuid(soap, &soap_tmp___ns2__FindAllByUuid, "-ns2:FindAllByUuid", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__FindAllByUuidResponse)
		return soap_closesock(soap);
	ns2__FindAllByUuidResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__FindAllByUuidResponse->soap_get(soap, "ns2:FindAllByUuidResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__FindAllByDnsName(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__FindAllByDnsNameRequestType *ns2__FindAllByDnsName, _ns2__FindAllByDnsNameResponse *ns2__FindAllByDnsNameResponse)
{	struct __ns2__FindAllByDnsName soap_tmp___ns2__FindAllByDnsName;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__FindAllByDnsName.ns2__FindAllByDnsName = ns2__FindAllByDnsName;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__FindAllByDnsName(soap, &soap_tmp___ns2__FindAllByDnsName);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__FindAllByDnsName(soap, &soap_tmp___ns2__FindAllByDnsName, "-ns2:FindAllByDnsName", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__FindAllByDnsName(soap, &soap_tmp___ns2__FindAllByDnsName, "-ns2:FindAllByDnsName", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__FindAllByDnsNameResponse)
		return soap_closesock(soap);
	ns2__FindAllByDnsNameResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__FindAllByDnsNameResponse->soap_get(soap, "ns2:FindAllByDnsNameResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__FindAllByIp(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__FindAllByIpRequestType *ns2__FindAllByIp, _ns2__FindAllByIpResponse *ns2__FindAllByIpResponse)
{	struct __ns2__FindAllByIp soap_tmp___ns2__FindAllByIp;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__FindAllByIp.ns2__FindAllByIp = ns2__FindAllByIp;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__FindAllByIp(soap, &soap_tmp___ns2__FindAllByIp);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__FindAllByIp(soap, &soap_tmp___ns2__FindAllByIp, "-ns2:FindAllByIp", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__FindAllByIp(soap, &soap_tmp___ns2__FindAllByIp, "-ns2:FindAllByIp", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__FindAllByIpResponse)
		return soap_closesock(soap);
	ns2__FindAllByIpResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__FindAllByIpResponse->soap_get(soap, "ns2:FindAllByIpResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__CurrentTime(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__CurrentTimeRequestType *ns2__CurrentTime, _ns2__CurrentTimeResponse *ns2__CurrentTimeResponse)
{	struct __ns2__CurrentTime soap_tmp___ns2__CurrentTime;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__CurrentTime.ns2__CurrentTime = ns2__CurrentTime;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__CurrentTime(soap, &soap_tmp___ns2__CurrentTime);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__CurrentTime(soap, &soap_tmp___ns2__CurrentTime, "-ns2:CurrentTime", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__CurrentTime(soap, &soap_tmp___ns2__CurrentTime, "-ns2:CurrentTime", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CurrentTimeResponse)
		return soap_closesock(soap);
	ns2__CurrentTimeResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CurrentTimeResponse->soap_get(soap, "ns2:CurrentTimeResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RetrieveServiceContent(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RetrieveServiceContentRequestType *ns2__RetrieveServiceContent, _ns2__RetrieveServiceContentResponse *ns2__RetrieveServiceContentResponse)
{	struct __ns2__RetrieveServiceContent soap_tmp___ns2__RetrieveServiceContent;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RetrieveServiceContent.ns2__RetrieveServiceContent = ns2__RetrieveServiceContent;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RetrieveServiceContent(soap, &soap_tmp___ns2__RetrieveServiceContent);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RetrieveServiceContent(soap, &soap_tmp___ns2__RetrieveServiceContent, "-ns2:RetrieveServiceContent", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RetrieveServiceContent(soap, &soap_tmp___ns2__RetrieveServiceContent, "-ns2:RetrieveServiceContent", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RetrieveServiceContentResponse)
		return soap_closesock(soap);
	ns2__RetrieveServiceContentResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RetrieveServiceContentResponse->soap_get(soap, "ns2:RetrieveServiceContentResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ValidateMigration(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ValidateMigrationRequestType *ns2__ValidateMigration, _ns2__ValidateMigrationResponse *ns2__ValidateMigrationResponse)
{	struct __ns2__ValidateMigration soap_tmp___ns2__ValidateMigration;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ValidateMigration.ns2__ValidateMigration = ns2__ValidateMigration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ValidateMigration(soap, &soap_tmp___ns2__ValidateMigration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ValidateMigration(soap, &soap_tmp___ns2__ValidateMigration, "-ns2:ValidateMigration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ValidateMigration(soap, &soap_tmp___ns2__ValidateMigration, "-ns2:ValidateMigration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ValidateMigrationResponse)
		return soap_closesock(soap);
	ns2__ValidateMigrationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ValidateMigrationResponse->soap_get(soap, "ns2:ValidateMigrationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryVMotionCompatibility(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryVMotionCompatibilityRequestType *ns2__QueryVMotionCompatibility, _ns2__QueryVMotionCompatibilityResponse *ns2__QueryVMotionCompatibilityResponse)
{	struct __ns2__QueryVMotionCompatibility soap_tmp___ns2__QueryVMotionCompatibility;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryVMotionCompatibility.ns2__QueryVMotionCompatibility = ns2__QueryVMotionCompatibility;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryVMotionCompatibility(soap, &soap_tmp___ns2__QueryVMotionCompatibility);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryVMotionCompatibility(soap, &soap_tmp___ns2__QueryVMotionCompatibility, "-ns2:QueryVMotionCompatibility", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryVMotionCompatibility(soap, &soap_tmp___ns2__QueryVMotionCompatibility, "-ns2:QueryVMotionCompatibility", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryVMotionCompatibilityResponse)
		return soap_closesock(soap);
	ns2__QueryVMotionCompatibilityResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryVMotionCompatibilityResponse->soap_get(soap, "ns2:QueryVMotionCompatibilityResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RetrieveProductComponents(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RetrieveProductComponentsRequestType *ns2__RetrieveProductComponents, _ns2__RetrieveProductComponentsResponse *ns2__RetrieveProductComponentsResponse)
{	struct __ns2__RetrieveProductComponents soap_tmp___ns2__RetrieveProductComponents;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RetrieveProductComponents.ns2__RetrieveProductComponents = ns2__RetrieveProductComponents;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RetrieveProductComponents(soap, &soap_tmp___ns2__RetrieveProductComponents);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RetrieveProductComponents(soap, &soap_tmp___ns2__RetrieveProductComponents, "-ns2:RetrieveProductComponents", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RetrieveProductComponents(soap, &soap_tmp___ns2__RetrieveProductComponents, "-ns2:RetrieveProductComponents", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RetrieveProductComponentsResponse)
		return soap_closesock(soap);
	ns2__RetrieveProductComponentsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RetrieveProductComponentsResponse->soap_get(soap, "ns2:RetrieveProductComponentsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryServiceList(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryServiceListRequestType *ns2__QueryServiceList, _ns2__QueryServiceListResponse *ns2__QueryServiceListResponse)
{	struct __ns2__QueryServiceList soap_tmp___ns2__QueryServiceList;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryServiceList.ns2__QueryServiceList = ns2__QueryServiceList;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryServiceList(soap, &soap_tmp___ns2__QueryServiceList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryServiceList(soap, &soap_tmp___ns2__QueryServiceList, "-ns2:QueryServiceList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryServiceList(soap, &soap_tmp___ns2__QueryServiceList, "-ns2:QueryServiceList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryServiceListResponse)
		return soap_closesock(soap);
	ns2__QueryServiceListResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryServiceListResponse->soap_get(soap, "ns2:QueryServiceListResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UpdateServiceMessage(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UpdateServiceMessageRequestType *ns2__UpdateServiceMessage, _ns2__UpdateServiceMessageResponse *ns2__UpdateServiceMessageResponse)
{	struct __ns2__UpdateServiceMessage soap_tmp___ns2__UpdateServiceMessage;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UpdateServiceMessage.ns2__UpdateServiceMessage = ns2__UpdateServiceMessage;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UpdateServiceMessage(soap, &soap_tmp___ns2__UpdateServiceMessage);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UpdateServiceMessage(soap, &soap_tmp___ns2__UpdateServiceMessage, "-ns2:UpdateServiceMessage", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UpdateServiceMessage(soap, &soap_tmp___ns2__UpdateServiceMessage, "-ns2:UpdateServiceMessage", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UpdateServiceMessageResponse)
		return soap_closesock(soap);
	ns2__UpdateServiceMessageResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UpdateServiceMessageResponse->soap_get(soap, "ns2:UpdateServiceMessageResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__LoginByToken(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__LoginByTokenRequestType *ns2__LoginByToken, _ns2__LoginByTokenResponse *ns2__LoginByTokenResponse)
{	struct __ns2__LoginByToken soap_tmp___ns2__LoginByToken;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__LoginByToken.ns2__LoginByToken = ns2__LoginByToken;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__LoginByToken(soap, &soap_tmp___ns2__LoginByToken);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__LoginByToken(soap, &soap_tmp___ns2__LoginByToken, "-ns2:LoginByToken", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__LoginByToken(soap, &soap_tmp___ns2__LoginByToken, "-ns2:LoginByToken", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__LoginByTokenResponse)
		return soap_closesock(soap);
	ns2__LoginByTokenResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__LoginByTokenResponse->soap_get(soap, "ns2:LoginByTokenResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__Login(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__LoginRequestType *ns2__Login, _ns2__LoginResponse *ns2__LoginResponse)
{	struct __ns2__Login soap_tmp___ns2__Login;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__Login.ns2__Login = ns2__Login;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__Login(soap, &soap_tmp___ns2__Login);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__Login(soap, &soap_tmp___ns2__Login, "-ns2:Login", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__Login(soap, &soap_tmp___ns2__Login, "-ns2:Login", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__LoginResponse)
		return soap_closesock(soap);
	ns2__LoginResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__LoginResponse->soap_get(soap, "ns2:LoginResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__LoginBySSPI(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__LoginBySSPIRequestType *ns2__LoginBySSPI, _ns2__LoginBySSPIResponse *ns2__LoginBySSPIResponse)
{	struct __ns2__LoginBySSPI soap_tmp___ns2__LoginBySSPI;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__LoginBySSPI.ns2__LoginBySSPI = ns2__LoginBySSPI;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__LoginBySSPI(soap, &soap_tmp___ns2__LoginBySSPI);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__LoginBySSPI(soap, &soap_tmp___ns2__LoginBySSPI, "-ns2:LoginBySSPI", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__LoginBySSPI(soap, &soap_tmp___ns2__LoginBySSPI, "-ns2:LoginBySSPI", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__LoginBySSPIResponse)
		return soap_closesock(soap);
	ns2__LoginBySSPIResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__LoginBySSPIResponse->soap_get(soap, "ns2:LoginBySSPIResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__Logout(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__LogoutRequestType *ns2__Logout, _ns2__LogoutResponse *ns2__LogoutResponse)
{	struct __ns2__Logout soap_tmp___ns2__Logout;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__Logout.ns2__Logout = ns2__Logout;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__Logout(soap, &soap_tmp___ns2__Logout);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__Logout(soap, &soap_tmp___ns2__Logout, "-ns2:Logout", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__Logout(soap, &soap_tmp___ns2__Logout, "-ns2:Logout", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__LogoutResponse)
		return soap_closesock(soap);
	ns2__LogoutResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__LogoutResponse->soap_get(soap, "ns2:LogoutResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__AcquireLocalTicket(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__AcquireLocalTicketRequestType *ns2__AcquireLocalTicket, _ns2__AcquireLocalTicketResponse *ns2__AcquireLocalTicketResponse)
{	struct __ns2__AcquireLocalTicket soap_tmp___ns2__AcquireLocalTicket;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__AcquireLocalTicket.ns2__AcquireLocalTicket = ns2__AcquireLocalTicket;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__AcquireLocalTicket(soap, &soap_tmp___ns2__AcquireLocalTicket);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__AcquireLocalTicket(soap, &soap_tmp___ns2__AcquireLocalTicket, "-ns2:AcquireLocalTicket", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__AcquireLocalTicket(soap, &soap_tmp___ns2__AcquireLocalTicket, "-ns2:AcquireLocalTicket", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__AcquireLocalTicketResponse)
		return soap_closesock(soap);
	ns2__AcquireLocalTicketResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__AcquireLocalTicketResponse->soap_get(soap, "ns2:AcquireLocalTicketResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__AcquireGenericServiceTicket(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__AcquireGenericServiceTicketRequestType *ns2__AcquireGenericServiceTicket, _ns2__AcquireGenericServiceTicketResponse *ns2__AcquireGenericServiceTicketResponse)
{	struct __ns2__AcquireGenericServiceTicket soap_tmp___ns2__AcquireGenericServiceTicket;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__AcquireGenericServiceTicket.ns2__AcquireGenericServiceTicket = ns2__AcquireGenericServiceTicket;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__AcquireGenericServiceTicket(soap, &soap_tmp___ns2__AcquireGenericServiceTicket);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__AcquireGenericServiceTicket(soap, &soap_tmp___ns2__AcquireGenericServiceTicket, "-ns2:AcquireGenericServiceTicket", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__AcquireGenericServiceTicket(soap, &soap_tmp___ns2__AcquireGenericServiceTicket, "-ns2:AcquireGenericServiceTicket", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__AcquireGenericServiceTicketResponse)
		return soap_closesock(soap);
	ns2__AcquireGenericServiceTicketResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__AcquireGenericServiceTicketResponse->soap_get(soap, "ns2:AcquireGenericServiceTicketResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__TerminateSession(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__TerminateSessionRequestType *ns2__TerminateSession, _ns2__TerminateSessionResponse *ns2__TerminateSessionResponse)
{	struct __ns2__TerminateSession soap_tmp___ns2__TerminateSession;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__TerminateSession.ns2__TerminateSession = ns2__TerminateSession;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__TerminateSession(soap, &soap_tmp___ns2__TerminateSession);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__TerminateSession(soap, &soap_tmp___ns2__TerminateSession, "-ns2:TerminateSession", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__TerminateSession(soap, &soap_tmp___ns2__TerminateSession, "-ns2:TerminateSession", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__TerminateSessionResponse)
		return soap_closesock(soap);
	ns2__TerminateSessionResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__TerminateSessionResponse->soap_get(soap, "ns2:TerminateSessionResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__SetLocale(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__SetLocaleRequestType *ns2__SetLocale, _ns2__SetLocaleResponse *ns2__SetLocaleResponse)
{	struct __ns2__SetLocale soap_tmp___ns2__SetLocale;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__SetLocale.ns2__SetLocale = ns2__SetLocale;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__SetLocale(soap, &soap_tmp___ns2__SetLocale);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__SetLocale(soap, &soap_tmp___ns2__SetLocale, "-ns2:SetLocale", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__SetLocale(soap, &soap_tmp___ns2__SetLocale, "-ns2:SetLocale", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__SetLocaleResponse)
		return soap_closesock(soap);
	ns2__SetLocaleResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__SetLocaleResponse->soap_get(soap, "ns2:SetLocaleResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__LoginExtensionBySubjectName(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__LoginExtensionBySubjectNameRequestType *ns2__LoginExtensionBySubjectName, _ns2__LoginExtensionBySubjectNameResponse *ns2__LoginExtensionBySubjectNameResponse)
{	struct __ns2__LoginExtensionBySubjectName soap_tmp___ns2__LoginExtensionBySubjectName;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__LoginExtensionBySubjectName.ns2__LoginExtensionBySubjectName = ns2__LoginExtensionBySubjectName;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__LoginExtensionBySubjectName(soap, &soap_tmp___ns2__LoginExtensionBySubjectName);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__LoginExtensionBySubjectName(soap, &soap_tmp___ns2__LoginExtensionBySubjectName, "-ns2:LoginExtensionBySubjectName", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__LoginExtensionBySubjectName(soap, &soap_tmp___ns2__LoginExtensionBySubjectName, "-ns2:LoginExtensionBySubjectName", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__LoginExtensionBySubjectNameResponse)
		return soap_closesock(soap);
	ns2__LoginExtensionBySubjectNameResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__LoginExtensionBySubjectNameResponse->soap_get(soap, "ns2:LoginExtensionBySubjectNameResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__LoginExtensionByCertificate(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__LoginExtensionByCertificateRequestType *ns2__LoginExtensionByCertificate, _ns2__LoginExtensionByCertificateResponse *ns2__LoginExtensionByCertificateResponse)
{	struct __ns2__LoginExtensionByCertificate soap_tmp___ns2__LoginExtensionByCertificate;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__LoginExtensionByCertificate.ns2__LoginExtensionByCertificate = ns2__LoginExtensionByCertificate;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__LoginExtensionByCertificate(soap, &soap_tmp___ns2__LoginExtensionByCertificate);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__LoginExtensionByCertificate(soap, &soap_tmp___ns2__LoginExtensionByCertificate, "-ns2:LoginExtensionByCertificate", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__LoginExtensionByCertificate(soap, &soap_tmp___ns2__LoginExtensionByCertificate, "-ns2:LoginExtensionByCertificate", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__LoginExtensionByCertificateResponse)
		return soap_closesock(soap);
	ns2__LoginExtensionByCertificateResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__LoginExtensionByCertificateResponse->soap_get(soap, "ns2:LoginExtensionByCertificateResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ImpersonateUser(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ImpersonateUserRequestType *ns2__ImpersonateUser, _ns2__ImpersonateUserResponse *ns2__ImpersonateUserResponse)
{	struct __ns2__ImpersonateUser soap_tmp___ns2__ImpersonateUser;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ImpersonateUser.ns2__ImpersonateUser = ns2__ImpersonateUser;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ImpersonateUser(soap, &soap_tmp___ns2__ImpersonateUser);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ImpersonateUser(soap, &soap_tmp___ns2__ImpersonateUser, "-ns2:ImpersonateUser", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ImpersonateUser(soap, &soap_tmp___ns2__ImpersonateUser, "-ns2:ImpersonateUser", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ImpersonateUserResponse)
		return soap_closesock(soap);
	ns2__ImpersonateUserResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ImpersonateUserResponse->soap_get(soap, "ns2:ImpersonateUserResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__SessionIsActive(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__SessionIsActiveRequestType *ns2__SessionIsActive, _ns2__SessionIsActiveResponse *ns2__SessionIsActiveResponse)
{	struct __ns2__SessionIsActive soap_tmp___ns2__SessionIsActive;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__SessionIsActive.ns2__SessionIsActive = ns2__SessionIsActive;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__SessionIsActive(soap, &soap_tmp___ns2__SessionIsActive);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__SessionIsActive(soap, &soap_tmp___ns2__SessionIsActive, "-ns2:SessionIsActive", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__SessionIsActive(soap, &soap_tmp___ns2__SessionIsActive, "-ns2:SessionIsActive", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__SessionIsActiveResponse)
		return soap_closesock(soap);
	ns2__SessionIsActiveResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__SessionIsActiveResponse->soap_get(soap, "ns2:SessionIsActiveResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__AcquireCloneTicket(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__AcquireCloneTicketRequestType *ns2__AcquireCloneTicket, _ns2__AcquireCloneTicketResponse *ns2__AcquireCloneTicketResponse)
{	struct __ns2__AcquireCloneTicket soap_tmp___ns2__AcquireCloneTicket;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__AcquireCloneTicket.ns2__AcquireCloneTicket = ns2__AcquireCloneTicket;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__AcquireCloneTicket(soap, &soap_tmp___ns2__AcquireCloneTicket);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__AcquireCloneTicket(soap, &soap_tmp___ns2__AcquireCloneTicket, "-ns2:AcquireCloneTicket", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__AcquireCloneTicket(soap, &soap_tmp___ns2__AcquireCloneTicket, "-ns2:AcquireCloneTicket", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__AcquireCloneTicketResponse)
		return soap_closesock(soap);
	ns2__AcquireCloneTicketResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__AcquireCloneTicketResponse->soap_get(soap, "ns2:AcquireCloneTicketResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__CloneSession(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__CloneSessionRequestType *ns2__CloneSession, _ns2__CloneSessionResponse *ns2__CloneSessionResponse)
{	struct __ns2__CloneSession soap_tmp___ns2__CloneSession;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__CloneSession.ns2__CloneSession = ns2__CloneSession;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__CloneSession(soap, &soap_tmp___ns2__CloneSession);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__CloneSession(soap, &soap_tmp___ns2__CloneSession, "-ns2:CloneSession", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__CloneSession(soap, &soap_tmp___ns2__CloneSession, "-ns2:CloneSession", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CloneSessionResponse)
		return soap_closesock(soap);
	ns2__CloneSessionResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CloneSessionResponse->soap_get(soap, "ns2:CloneSessionResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ExecuteSimpleCommand(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ExecuteSimpleCommandRequestType *ns2__ExecuteSimpleCommand, _ns2__ExecuteSimpleCommandResponse *ns2__ExecuteSimpleCommandResponse)
{	struct __ns2__ExecuteSimpleCommand soap_tmp___ns2__ExecuteSimpleCommand;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ExecuteSimpleCommand.ns2__ExecuteSimpleCommand = ns2__ExecuteSimpleCommand;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ExecuteSimpleCommand(soap, &soap_tmp___ns2__ExecuteSimpleCommand);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ExecuteSimpleCommand(soap, &soap_tmp___ns2__ExecuteSimpleCommand, "-ns2:ExecuteSimpleCommand", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ExecuteSimpleCommand(soap, &soap_tmp___ns2__ExecuteSimpleCommand, "-ns2:ExecuteSimpleCommand", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ExecuteSimpleCommandResponse)
		return soap_closesock(soap);
	ns2__ExecuteSimpleCommandResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ExecuteSimpleCommandResponse->soap_get(soap, "ns2:ExecuteSimpleCommandResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ConfigureDatastoreIORM_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ConfigureDatastoreIORMRequestType *ns2__ConfigureDatastoreIORM_USCORETask, _ns2__ConfigureDatastoreIORM_USCORETaskResponse *ns2__ConfigureDatastoreIORM_USCORETaskResponse)
{	struct __ns2__ConfigureDatastoreIORM_USCORETask soap_tmp___ns2__ConfigureDatastoreIORM_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ConfigureDatastoreIORM_USCORETask.ns2__ConfigureDatastoreIORM_USCORETask = ns2__ConfigureDatastoreIORM_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ConfigureDatastoreIORM_USCORETask(soap, &soap_tmp___ns2__ConfigureDatastoreIORM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ConfigureDatastoreIORM_USCORETask(soap, &soap_tmp___ns2__ConfigureDatastoreIORM_USCORETask, "-ns2:ConfigureDatastoreIORM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ConfigureDatastoreIORM_USCORETask(soap, &soap_tmp___ns2__ConfigureDatastoreIORM_USCORETask, "-ns2:ConfigureDatastoreIORM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ConfigureDatastoreIORM_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__ConfigureDatastoreIORM_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ConfigureDatastoreIORM_USCORETaskResponse->soap_get(soap, "ns2:ConfigureDatastoreIORM_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryIORMConfigOption(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryIORMConfigOptionRequestType *ns2__QueryIORMConfigOption, _ns2__QueryIORMConfigOptionResponse *ns2__QueryIORMConfigOptionResponse)
{	struct __ns2__QueryIORMConfigOption soap_tmp___ns2__QueryIORMConfigOption;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryIORMConfigOption.ns2__QueryIORMConfigOption = ns2__QueryIORMConfigOption;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryIORMConfigOption(soap, &soap_tmp___ns2__QueryIORMConfigOption);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryIORMConfigOption(soap, &soap_tmp___ns2__QueryIORMConfigOption, "-ns2:QueryIORMConfigOption", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryIORMConfigOption(soap, &soap_tmp___ns2__QueryIORMConfigOption, "-ns2:QueryIORMConfigOption", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryIORMConfigOptionResponse)
		return soap_closesock(soap);
	ns2__QueryIORMConfigOptionResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryIORMConfigOptionResponse->soap_get(soap, "ns2:QueryIORMConfigOptionResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryDatastorePerformanceSummary(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryDatastorePerformanceSummaryRequestType *ns2__QueryDatastorePerformanceSummary, _ns2__QueryDatastorePerformanceSummaryResponse *ns2__QueryDatastorePerformanceSummaryResponse)
{	struct __ns2__QueryDatastorePerformanceSummary soap_tmp___ns2__QueryDatastorePerformanceSummary;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryDatastorePerformanceSummary.ns2__QueryDatastorePerformanceSummary = ns2__QueryDatastorePerformanceSummary;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryDatastorePerformanceSummary(soap, &soap_tmp___ns2__QueryDatastorePerformanceSummary);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryDatastorePerformanceSummary(soap, &soap_tmp___ns2__QueryDatastorePerformanceSummary, "-ns2:QueryDatastorePerformanceSummary", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryDatastorePerformanceSummary(soap, &soap_tmp___ns2__QueryDatastorePerformanceSummary, "-ns2:QueryDatastorePerformanceSummary", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryDatastorePerformanceSummaryResponse)
		return soap_closesock(soap);
	ns2__QueryDatastorePerformanceSummaryResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryDatastorePerformanceSummaryResponse->soap_get(soap, "ns2:QueryDatastorePerformanceSummaryResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ApplyStorageDrsRecommendationToPod_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ApplyStorageDrsRecommendationToPodRequestType *ns2__ApplyStorageDrsRecommendationToPod_USCORETask, _ns2__ApplyStorageDrsRecommendationToPod_USCORETaskResponse *ns2__ApplyStorageDrsRecommendationToPod_USCORETaskResponse)
{	struct __ns2__ApplyStorageDrsRecommendationToPod_USCORETask soap_tmp___ns2__ApplyStorageDrsRecommendationToPod_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ApplyStorageDrsRecommendationToPod_USCORETask.ns2__ApplyStorageDrsRecommendationToPod_USCORETask = ns2__ApplyStorageDrsRecommendationToPod_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ApplyStorageDrsRecommendationToPod_USCORETask(soap, &soap_tmp___ns2__ApplyStorageDrsRecommendationToPod_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ApplyStorageDrsRecommendationToPod_USCORETask(soap, &soap_tmp___ns2__ApplyStorageDrsRecommendationToPod_USCORETask, "-ns2:ApplyStorageDrsRecommendationToPod_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ApplyStorageDrsRecommendationToPod_USCORETask(soap, &soap_tmp___ns2__ApplyStorageDrsRecommendationToPod_USCORETask, "-ns2:ApplyStorageDrsRecommendationToPod_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ApplyStorageDrsRecommendationToPod_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__ApplyStorageDrsRecommendationToPod_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ApplyStorageDrsRecommendationToPod_USCORETaskResponse->soap_get(soap, "ns2:ApplyStorageDrsRecommendationToPod_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ApplyStorageDrsRecommendation_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ApplyStorageDrsRecommendationRequestType *ns2__ApplyStorageDrsRecommendation_USCORETask, _ns2__ApplyStorageDrsRecommendation_USCORETaskResponse *ns2__ApplyStorageDrsRecommendation_USCORETaskResponse)
{	struct __ns2__ApplyStorageDrsRecommendation_USCORETask soap_tmp___ns2__ApplyStorageDrsRecommendation_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ApplyStorageDrsRecommendation_USCORETask.ns2__ApplyStorageDrsRecommendation_USCORETask = ns2__ApplyStorageDrsRecommendation_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ApplyStorageDrsRecommendation_USCORETask(soap, &soap_tmp___ns2__ApplyStorageDrsRecommendation_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ApplyStorageDrsRecommendation_USCORETask(soap, &soap_tmp___ns2__ApplyStorageDrsRecommendation_USCORETask, "-ns2:ApplyStorageDrsRecommendation_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ApplyStorageDrsRecommendation_USCORETask(soap, &soap_tmp___ns2__ApplyStorageDrsRecommendation_USCORETask, "-ns2:ApplyStorageDrsRecommendation_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ApplyStorageDrsRecommendation_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__ApplyStorageDrsRecommendation_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ApplyStorageDrsRecommendation_USCORETaskResponse->soap_get(soap, "ns2:ApplyStorageDrsRecommendation_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__CancelStorageDrsRecommendation(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__CancelStorageDrsRecommendationRequestType *ns2__CancelStorageDrsRecommendation, _ns2__CancelStorageDrsRecommendationResponse *ns2__CancelStorageDrsRecommendationResponse)
{	struct __ns2__CancelStorageDrsRecommendation soap_tmp___ns2__CancelStorageDrsRecommendation;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__CancelStorageDrsRecommendation.ns2__CancelStorageDrsRecommendation = ns2__CancelStorageDrsRecommendation;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__CancelStorageDrsRecommendation(soap, &soap_tmp___ns2__CancelStorageDrsRecommendation);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__CancelStorageDrsRecommendation(soap, &soap_tmp___ns2__CancelStorageDrsRecommendation, "-ns2:CancelStorageDrsRecommendation", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__CancelStorageDrsRecommendation(soap, &soap_tmp___ns2__CancelStorageDrsRecommendation, "-ns2:CancelStorageDrsRecommendation", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CancelStorageDrsRecommendationResponse)
		return soap_closesock(soap);
	ns2__CancelStorageDrsRecommendationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CancelStorageDrsRecommendationResponse->soap_get(soap, "ns2:CancelStorageDrsRecommendationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RefreshStorageDrsRecommendation(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RefreshStorageDrsRecommendationRequestType *ns2__RefreshStorageDrsRecommendation, _ns2__RefreshStorageDrsRecommendationResponse *ns2__RefreshStorageDrsRecommendationResponse)
{	struct __ns2__RefreshStorageDrsRecommendation soap_tmp___ns2__RefreshStorageDrsRecommendation;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RefreshStorageDrsRecommendation.ns2__RefreshStorageDrsRecommendation = ns2__RefreshStorageDrsRecommendation;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RefreshStorageDrsRecommendation(soap, &soap_tmp___ns2__RefreshStorageDrsRecommendation);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RefreshStorageDrsRecommendation(soap, &soap_tmp___ns2__RefreshStorageDrsRecommendation, "-ns2:RefreshStorageDrsRecommendation", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RefreshStorageDrsRecommendation(soap, &soap_tmp___ns2__RefreshStorageDrsRecommendation, "-ns2:RefreshStorageDrsRecommendation", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RefreshStorageDrsRecommendationResponse)
		return soap_closesock(soap);
	ns2__RefreshStorageDrsRecommendationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RefreshStorageDrsRecommendationResponse->soap_get(soap, "ns2:RefreshStorageDrsRecommendationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ConfigureStorageDrsForPod_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ConfigureStorageDrsForPodRequestType *ns2__ConfigureStorageDrsForPod_USCORETask, _ns2__ConfigureStorageDrsForPod_USCORETaskResponse *ns2__ConfigureStorageDrsForPod_USCORETaskResponse)
{	struct __ns2__ConfigureStorageDrsForPod_USCORETask soap_tmp___ns2__ConfigureStorageDrsForPod_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ConfigureStorageDrsForPod_USCORETask.ns2__ConfigureStorageDrsForPod_USCORETask = ns2__ConfigureStorageDrsForPod_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ConfigureStorageDrsForPod_USCORETask(soap, &soap_tmp___ns2__ConfigureStorageDrsForPod_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ConfigureStorageDrsForPod_USCORETask(soap, &soap_tmp___ns2__ConfigureStorageDrsForPod_USCORETask, "-ns2:ConfigureStorageDrsForPod_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ConfigureStorageDrsForPod_USCORETask(soap, &soap_tmp___ns2__ConfigureStorageDrsForPod_USCORETask, "-ns2:ConfigureStorageDrsForPod_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ConfigureStorageDrsForPod_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__ConfigureStorageDrsForPod_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ConfigureStorageDrsForPod_USCORETaskResponse->soap_get(soap, "ns2:ConfigureStorageDrsForPod_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RecommendDatastores(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RecommendDatastoresRequestType *ns2__RecommendDatastores, _ns2__RecommendDatastoresResponse *ns2__RecommendDatastoresResponse)
{	struct __ns2__RecommendDatastores soap_tmp___ns2__RecommendDatastores;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RecommendDatastores.ns2__RecommendDatastores = ns2__RecommendDatastores;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RecommendDatastores(soap, &soap_tmp___ns2__RecommendDatastores);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RecommendDatastores(soap, &soap_tmp___ns2__RecommendDatastores, "-ns2:RecommendDatastores", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RecommendDatastores(soap, &soap_tmp___ns2__RecommendDatastores, "-ns2:RecommendDatastores", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RecommendDatastoresResponse)
		return soap_closesock(soap);
	ns2__RecommendDatastoresResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RecommendDatastoresResponse->soap_get(soap, "ns2:RecommendDatastoresResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__CancelTask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__CancelTaskRequestType *ns2__CancelTask, _ns2__CancelTaskResponse *ns2__CancelTaskResponse)
{	struct __ns2__CancelTask soap_tmp___ns2__CancelTask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__CancelTask.ns2__CancelTask = ns2__CancelTask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__CancelTask(soap, &soap_tmp___ns2__CancelTask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__CancelTask(soap, &soap_tmp___ns2__CancelTask, "-ns2:CancelTask", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__CancelTask(soap, &soap_tmp___ns2__CancelTask, "-ns2:CancelTask", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CancelTaskResponse)
		return soap_closesock(soap);
	ns2__CancelTaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CancelTaskResponse->soap_get(soap, "ns2:CancelTaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UpdateProgress(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UpdateProgressRequestType *ns2__UpdateProgress, _ns2__UpdateProgressResponse *ns2__UpdateProgressResponse)
{	struct __ns2__UpdateProgress soap_tmp___ns2__UpdateProgress;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UpdateProgress.ns2__UpdateProgress = ns2__UpdateProgress;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UpdateProgress(soap, &soap_tmp___ns2__UpdateProgress);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UpdateProgress(soap, &soap_tmp___ns2__UpdateProgress, "-ns2:UpdateProgress", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UpdateProgress(soap, &soap_tmp___ns2__UpdateProgress, "-ns2:UpdateProgress", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UpdateProgressResponse)
		return soap_closesock(soap);
	ns2__UpdateProgressResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UpdateProgressResponse->soap_get(soap, "ns2:UpdateProgressResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__SetTaskState(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__SetTaskStateRequestType *ns2__SetTaskState, _ns2__SetTaskStateResponse *ns2__SetTaskStateResponse)
{	struct __ns2__SetTaskState soap_tmp___ns2__SetTaskState;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__SetTaskState.ns2__SetTaskState = ns2__SetTaskState;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__SetTaskState(soap, &soap_tmp___ns2__SetTaskState);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__SetTaskState(soap, &soap_tmp___ns2__SetTaskState, "-ns2:SetTaskState", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__SetTaskState(soap, &soap_tmp___ns2__SetTaskState, "-ns2:SetTaskState", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__SetTaskStateResponse)
		return soap_closesock(soap);
	ns2__SetTaskStateResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__SetTaskStateResponse->soap_get(soap, "ns2:SetTaskStateResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__SetTaskDescription(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__SetTaskDescriptionRequestType *ns2__SetTaskDescription, _ns2__SetTaskDescriptionResponse *ns2__SetTaskDescriptionResponse)
{	struct __ns2__SetTaskDescription soap_tmp___ns2__SetTaskDescription;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__SetTaskDescription.ns2__SetTaskDescription = ns2__SetTaskDescription;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__SetTaskDescription(soap, &soap_tmp___ns2__SetTaskDescription);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__SetTaskDescription(soap, &soap_tmp___ns2__SetTaskDescription, "-ns2:SetTaskDescription", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__SetTaskDescription(soap, &soap_tmp___ns2__SetTaskDescription, "-ns2:SetTaskDescription", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__SetTaskDescriptionResponse)
		return soap_closesock(soap);
	ns2__SetTaskDescriptionResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__SetTaskDescriptionResponse->soap_get(soap, "ns2:SetTaskDescriptionResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ReadNextTasks(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ReadNextTasksRequestType *ns2__ReadNextTasks, _ns2__ReadNextTasksResponse *ns2__ReadNextTasksResponse)
{	struct __ns2__ReadNextTasks soap_tmp___ns2__ReadNextTasks;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ReadNextTasks.ns2__ReadNextTasks = ns2__ReadNextTasks;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ReadNextTasks(soap, &soap_tmp___ns2__ReadNextTasks);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ReadNextTasks(soap, &soap_tmp___ns2__ReadNextTasks, "-ns2:ReadNextTasks", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ReadNextTasks(soap, &soap_tmp___ns2__ReadNextTasks, "-ns2:ReadNextTasks", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ReadNextTasksResponse)
		return soap_closesock(soap);
	ns2__ReadNextTasksResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ReadNextTasksResponse->soap_get(soap, "ns2:ReadNextTasksResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ReadPreviousTasks(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ReadPreviousTasksRequestType *ns2__ReadPreviousTasks, _ns2__ReadPreviousTasksResponse *ns2__ReadPreviousTasksResponse)
{	struct __ns2__ReadPreviousTasks soap_tmp___ns2__ReadPreviousTasks;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ReadPreviousTasks.ns2__ReadPreviousTasks = ns2__ReadPreviousTasks;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ReadPreviousTasks(soap, &soap_tmp___ns2__ReadPreviousTasks);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ReadPreviousTasks(soap, &soap_tmp___ns2__ReadPreviousTasks, "-ns2:ReadPreviousTasks", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ReadPreviousTasks(soap, &soap_tmp___ns2__ReadPreviousTasks, "-ns2:ReadPreviousTasks", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ReadPreviousTasksResponse)
		return soap_closesock(soap);
	ns2__ReadPreviousTasksResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ReadPreviousTasksResponse->soap_get(soap, "ns2:ReadPreviousTasksResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__CreateCollectorForTasks(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__CreateCollectorForTasksRequestType *ns2__CreateCollectorForTasks, _ns2__CreateCollectorForTasksResponse *ns2__CreateCollectorForTasksResponse)
{	struct __ns2__CreateCollectorForTasks soap_tmp___ns2__CreateCollectorForTasks;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__CreateCollectorForTasks.ns2__CreateCollectorForTasks = ns2__CreateCollectorForTasks;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__CreateCollectorForTasks(soap, &soap_tmp___ns2__CreateCollectorForTasks);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__CreateCollectorForTasks(soap, &soap_tmp___ns2__CreateCollectorForTasks, "-ns2:CreateCollectorForTasks", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__CreateCollectorForTasks(soap, &soap_tmp___ns2__CreateCollectorForTasks, "-ns2:CreateCollectorForTasks", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CreateCollectorForTasksResponse)
		return soap_closesock(soap);
	ns2__CreateCollectorForTasksResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CreateCollectorForTasksResponse->soap_get(soap, "ns2:CreateCollectorForTasksResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__CreateTask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__CreateTaskRequestType *ns2__CreateTask, _ns2__CreateTaskResponse *ns2__CreateTaskResponse)
{	struct __ns2__CreateTask soap_tmp___ns2__CreateTask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__CreateTask.ns2__CreateTask = ns2__CreateTask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__CreateTask(soap, &soap_tmp___ns2__CreateTask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__CreateTask(soap, &soap_tmp___ns2__CreateTask, "-ns2:CreateTask", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__CreateTask(soap, &soap_tmp___ns2__CreateTask, "-ns2:CreateTask", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CreateTaskResponse)
		return soap_closesock(soap);
	ns2__CreateTaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CreateTaskResponse->soap_get(soap, "ns2:CreateTaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RetrieveUserGroups(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RetrieveUserGroupsRequestType *ns2__RetrieveUserGroups, _ns2__RetrieveUserGroupsResponse *ns2__RetrieveUserGroupsResponse)
{	struct __ns2__RetrieveUserGroups soap_tmp___ns2__RetrieveUserGroups;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RetrieveUserGroups.ns2__RetrieveUserGroups = ns2__RetrieveUserGroups;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RetrieveUserGroups(soap, &soap_tmp___ns2__RetrieveUserGroups);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RetrieveUserGroups(soap, &soap_tmp___ns2__RetrieveUserGroups, "-ns2:RetrieveUserGroups", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RetrieveUserGroups(soap, &soap_tmp___ns2__RetrieveUserGroups, "-ns2:RetrieveUserGroups", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RetrieveUserGroupsResponse)
		return soap_closesock(soap);
	ns2__RetrieveUserGroupsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RetrieveUserGroupsResponse->soap_get(soap, "ns2:RetrieveUserGroupsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UpdateVAppConfig(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UpdateVAppConfigRequestType *ns2__UpdateVAppConfig, _ns2__UpdateVAppConfigResponse *ns2__UpdateVAppConfigResponse)
{	struct __ns2__UpdateVAppConfig soap_tmp___ns2__UpdateVAppConfig;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UpdateVAppConfig.ns2__UpdateVAppConfig = ns2__UpdateVAppConfig;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UpdateVAppConfig(soap, &soap_tmp___ns2__UpdateVAppConfig);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UpdateVAppConfig(soap, &soap_tmp___ns2__UpdateVAppConfig, "-ns2:UpdateVAppConfig", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UpdateVAppConfig(soap, &soap_tmp___ns2__UpdateVAppConfig, "-ns2:UpdateVAppConfig", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UpdateVAppConfigResponse)
		return soap_closesock(soap);
	ns2__UpdateVAppConfigResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UpdateVAppConfigResponse->soap_get(soap, "ns2:UpdateVAppConfigResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UpdateLinkedChildren(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UpdateLinkedChildrenRequestType *ns2__UpdateLinkedChildren, _ns2__UpdateLinkedChildrenResponse *ns2__UpdateLinkedChildrenResponse)
{	struct __ns2__UpdateLinkedChildren soap_tmp___ns2__UpdateLinkedChildren;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UpdateLinkedChildren.ns2__UpdateLinkedChildren = ns2__UpdateLinkedChildren;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UpdateLinkedChildren(soap, &soap_tmp___ns2__UpdateLinkedChildren);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UpdateLinkedChildren(soap, &soap_tmp___ns2__UpdateLinkedChildren, "-ns2:UpdateLinkedChildren", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UpdateLinkedChildren(soap, &soap_tmp___ns2__UpdateLinkedChildren, "-ns2:UpdateLinkedChildren", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UpdateLinkedChildrenResponse)
		return soap_closesock(soap);
	ns2__UpdateLinkedChildrenResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UpdateLinkedChildrenResponse->soap_get(soap, "ns2:UpdateLinkedChildrenResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__CloneVApp_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__CloneVAppRequestType *ns2__CloneVApp_USCORETask, _ns2__CloneVApp_USCORETaskResponse *ns2__CloneVApp_USCORETaskResponse)
{	struct __ns2__CloneVApp_USCORETask soap_tmp___ns2__CloneVApp_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__CloneVApp_USCORETask.ns2__CloneVApp_USCORETask = ns2__CloneVApp_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__CloneVApp_USCORETask(soap, &soap_tmp___ns2__CloneVApp_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__CloneVApp_USCORETask(soap, &soap_tmp___ns2__CloneVApp_USCORETask, "-ns2:CloneVApp_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__CloneVApp_USCORETask(soap, &soap_tmp___ns2__CloneVApp_USCORETask, "-ns2:CloneVApp_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CloneVApp_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__CloneVApp_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CloneVApp_USCORETaskResponse->soap_get(soap, "ns2:CloneVApp_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ExportVApp(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ExportVAppRequestType *ns2__ExportVApp, _ns2__ExportVAppResponse *ns2__ExportVAppResponse)
{	struct __ns2__ExportVApp soap_tmp___ns2__ExportVApp;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ExportVApp.ns2__ExportVApp = ns2__ExportVApp;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ExportVApp(soap, &soap_tmp___ns2__ExportVApp);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ExportVApp(soap, &soap_tmp___ns2__ExportVApp, "-ns2:ExportVApp", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ExportVApp(soap, &soap_tmp___ns2__ExportVApp, "-ns2:ExportVApp", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ExportVAppResponse)
		return soap_closesock(soap);
	ns2__ExportVAppResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ExportVAppResponse->soap_get(soap, "ns2:ExportVAppResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__PowerOnVApp_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__PowerOnVAppRequestType *ns2__PowerOnVApp_USCORETask, _ns2__PowerOnVApp_USCORETaskResponse *ns2__PowerOnVApp_USCORETaskResponse)
{	struct __ns2__PowerOnVApp_USCORETask soap_tmp___ns2__PowerOnVApp_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__PowerOnVApp_USCORETask.ns2__PowerOnVApp_USCORETask = ns2__PowerOnVApp_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__PowerOnVApp_USCORETask(soap, &soap_tmp___ns2__PowerOnVApp_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__PowerOnVApp_USCORETask(soap, &soap_tmp___ns2__PowerOnVApp_USCORETask, "-ns2:PowerOnVApp_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__PowerOnVApp_USCORETask(soap, &soap_tmp___ns2__PowerOnVApp_USCORETask, "-ns2:PowerOnVApp_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__PowerOnVApp_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__PowerOnVApp_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__PowerOnVApp_USCORETaskResponse->soap_get(soap, "ns2:PowerOnVApp_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__PowerOffVApp_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__PowerOffVAppRequestType *ns2__PowerOffVApp_USCORETask, _ns2__PowerOffVApp_USCORETaskResponse *ns2__PowerOffVApp_USCORETaskResponse)
{	struct __ns2__PowerOffVApp_USCORETask soap_tmp___ns2__PowerOffVApp_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__PowerOffVApp_USCORETask.ns2__PowerOffVApp_USCORETask = ns2__PowerOffVApp_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__PowerOffVApp_USCORETask(soap, &soap_tmp___ns2__PowerOffVApp_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__PowerOffVApp_USCORETask(soap, &soap_tmp___ns2__PowerOffVApp_USCORETask, "-ns2:PowerOffVApp_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__PowerOffVApp_USCORETask(soap, &soap_tmp___ns2__PowerOffVApp_USCORETask, "-ns2:PowerOffVApp_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__PowerOffVApp_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__PowerOffVApp_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__PowerOffVApp_USCORETaskResponse->soap_get(soap, "ns2:PowerOffVApp_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__SuspendVApp_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__SuspendVAppRequestType *ns2__SuspendVApp_USCORETask, _ns2__SuspendVApp_USCORETaskResponse *ns2__SuspendVApp_USCORETaskResponse)
{	struct __ns2__SuspendVApp_USCORETask soap_tmp___ns2__SuspendVApp_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__SuspendVApp_USCORETask.ns2__SuspendVApp_USCORETask = ns2__SuspendVApp_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__SuspendVApp_USCORETask(soap, &soap_tmp___ns2__SuspendVApp_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__SuspendVApp_USCORETask(soap, &soap_tmp___ns2__SuspendVApp_USCORETask, "-ns2:SuspendVApp_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__SuspendVApp_USCORETask(soap, &soap_tmp___ns2__SuspendVApp_USCORETask, "-ns2:SuspendVApp_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__SuspendVApp_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__SuspendVApp_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__SuspendVApp_USCORETaskResponse->soap_get(soap, "ns2:SuspendVApp_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__unregisterVApp_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__unregisterVAppRequestType *ns2__unregisterVApp_USCORETask, _ns2__unregisterVApp_USCORETaskResponse *ns2__unregisterVApp_USCORETaskResponse)
{	struct __ns2__unregisterVApp_USCORETask soap_tmp___ns2__unregisterVApp_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__unregisterVApp_USCORETask.ns2__unregisterVApp_USCORETask = ns2__unregisterVApp_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__unregisterVApp_USCORETask(soap, &soap_tmp___ns2__unregisterVApp_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__unregisterVApp_USCORETask(soap, &soap_tmp___ns2__unregisterVApp_USCORETask, "-ns2:unregisterVApp_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__unregisterVApp_USCORETask(soap, &soap_tmp___ns2__unregisterVApp_USCORETask, "-ns2:unregisterVApp_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__unregisterVApp_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__unregisterVApp_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__unregisterVApp_USCORETaskResponse->soap_get(soap, "ns2:unregisterVApp_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__CreateVirtualDisk_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__CreateVirtualDiskRequestType *ns2__CreateVirtualDisk_USCORETask, _ns2__CreateVirtualDisk_USCORETaskResponse *ns2__CreateVirtualDisk_USCORETaskResponse)
{	struct __ns2__CreateVirtualDisk_USCORETask soap_tmp___ns2__CreateVirtualDisk_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__CreateVirtualDisk_USCORETask.ns2__CreateVirtualDisk_USCORETask = ns2__CreateVirtualDisk_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__CreateVirtualDisk_USCORETask(soap, &soap_tmp___ns2__CreateVirtualDisk_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__CreateVirtualDisk_USCORETask(soap, &soap_tmp___ns2__CreateVirtualDisk_USCORETask, "-ns2:CreateVirtualDisk_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__CreateVirtualDisk_USCORETask(soap, &soap_tmp___ns2__CreateVirtualDisk_USCORETask, "-ns2:CreateVirtualDisk_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CreateVirtualDisk_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__CreateVirtualDisk_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CreateVirtualDisk_USCORETaskResponse->soap_get(soap, "ns2:CreateVirtualDisk_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__DeleteVirtualDisk_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__DeleteVirtualDiskRequestType *ns2__DeleteVirtualDisk_USCORETask, _ns2__DeleteVirtualDisk_USCORETaskResponse *ns2__DeleteVirtualDisk_USCORETaskResponse)
{	struct __ns2__DeleteVirtualDisk_USCORETask soap_tmp___ns2__DeleteVirtualDisk_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__DeleteVirtualDisk_USCORETask.ns2__DeleteVirtualDisk_USCORETask = ns2__DeleteVirtualDisk_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__DeleteVirtualDisk_USCORETask(soap, &soap_tmp___ns2__DeleteVirtualDisk_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__DeleteVirtualDisk_USCORETask(soap, &soap_tmp___ns2__DeleteVirtualDisk_USCORETask, "-ns2:DeleteVirtualDisk_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__DeleteVirtualDisk_USCORETask(soap, &soap_tmp___ns2__DeleteVirtualDisk_USCORETask, "-ns2:DeleteVirtualDisk_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__DeleteVirtualDisk_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__DeleteVirtualDisk_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__DeleteVirtualDisk_USCORETaskResponse->soap_get(soap, "ns2:DeleteVirtualDisk_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__MoveVirtualDisk_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__MoveVirtualDiskRequestType *ns2__MoveVirtualDisk_USCORETask, _ns2__MoveVirtualDisk_USCORETaskResponse *ns2__MoveVirtualDisk_USCORETaskResponse)
{	struct __ns2__MoveVirtualDisk_USCORETask soap_tmp___ns2__MoveVirtualDisk_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__MoveVirtualDisk_USCORETask.ns2__MoveVirtualDisk_USCORETask = ns2__MoveVirtualDisk_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__MoveVirtualDisk_USCORETask(soap, &soap_tmp___ns2__MoveVirtualDisk_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__MoveVirtualDisk_USCORETask(soap, &soap_tmp___ns2__MoveVirtualDisk_USCORETask, "-ns2:MoveVirtualDisk_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__MoveVirtualDisk_USCORETask(soap, &soap_tmp___ns2__MoveVirtualDisk_USCORETask, "-ns2:MoveVirtualDisk_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__MoveVirtualDisk_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__MoveVirtualDisk_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__MoveVirtualDisk_USCORETaskResponse->soap_get(soap, "ns2:MoveVirtualDisk_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__CopyVirtualDisk_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__CopyVirtualDiskRequestType *ns2__CopyVirtualDisk_USCORETask, _ns2__CopyVirtualDisk_USCORETaskResponse *ns2__CopyVirtualDisk_USCORETaskResponse)
{	struct __ns2__CopyVirtualDisk_USCORETask soap_tmp___ns2__CopyVirtualDisk_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__CopyVirtualDisk_USCORETask.ns2__CopyVirtualDisk_USCORETask = ns2__CopyVirtualDisk_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__CopyVirtualDisk_USCORETask(soap, &soap_tmp___ns2__CopyVirtualDisk_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__CopyVirtualDisk_USCORETask(soap, &soap_tmp___ns2__CopyVirtualDisk_USCORETask, "-ns2:CopyVirtualDisk_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__CopyVirtualDisk_USCORETask(soap, &soap_tmp___ns2__CopyVirtualDisk_USCORETask, "-ns2:CopyVirtualDisk_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CopyVirtualDisk_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__CopyVirtualDisk_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CopyVirtualDisk_USCORETaskResponse->soap_get(soap, "ns2:CopyVirtualDisk_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ExtendVirtualDisk_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ExtendVirtualDiskRequestType *ns2__ExtendVirtualDisk_USCORETask, _ns2__ExtendVirtualDisk_USCORETaskResponse *ns2__ExtendVirtualDisk_USCORETaskResponse)
{	struct __ns2__ExtendVirtualDisk_USCORETask soap_tmp___ns2__ExtendVirtualDisk_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ExtendVirtualDisk_USCORETask.ns2__ExtendVirtualDisk_USCORETask = ns2__ExtendVirtualDisk_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ExtendVirtualDisk_USCORETask(soap, &soap_tmp___ns2__ExtendVirtualDisk_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ExtendVirtualDisk_USCORETask(soap, &soap_tmp___ns2__ExtendVirtualDisk_USCORETask, "-ns2:ExtendVirtualDisk_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ExtendVirtualDisk_USCORETask(soap, &soap_tmp___ns2__ExtendVirtualDisk_USCORETask, "-ns2:ExtendVirtualDisk_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ExtendVirtualDisk_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__ExtendVirtualDisk_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ExtendVirtualDisk_USCORETaskResponse->soap_get(soap, "ns2:ExtendVirtualDisk_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryVirtualDiskFragmentation(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryVirtualDiskFragmentationRequestType *ns2__QueryVirtualDiskFragmentation, _ns2__QueryVirtualDiskFragmentationResponse *ns2__QueryVirtualDiskFragmentationResponse)
{	struct __ns2__QueryVirtualDiskFragmentation soap_tmp___ns2__QueryVirtualDiskFragmentation;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryVirtualDiskFragmentation.ns2__QueryVirtualDiskFragmentation = ns2__QueryVirtualDiskFragmentation;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryVirtualDiskFragmentation(soap, &soap_tmp___ns2__QueryVirtualDiskFragmentation);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryVirtualDiskFragmentation(soap, &soap_tmp___ns2__QueryVirtualDiskFragmentation, "-ns2:QueryVirtualDiskFragmentation", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryVirtualDiskFragmentation(soap, &soap_tmp___ns2__QueryVirtualDiskFragmentation, "-ns2:QueryVirtualDiskFragmentation", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryVirtualDiskFragmentationResponse)
		return soap_closesock(soap);
	ns2__QueryVirtualDiskFragmentationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryVirtualDiskFragmentationResponse->soap_get(soap, "ns2:QueryVirtualDiskFragmentationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__DefragmentVirtualDisk_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__DefragmentVirtualDiskRequestType *ns2__DefragmentVirtualDisk_USCORETask, _ns2__DefragmentVirtualDisk_USCORETaskResponse *ns2__DefragmentVirtualDisk_USCORETaskResponse)
{	struct __ns2__DefragmentVirtualDisk_USCORETask soap_tmp___ns2__DefragmentVirtualDisk_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__DefragmentVirtualDisk_USCORETask.ns2__DefragmentVirtualDisk_USCORETask = ns2__DefragmentVirtualDisk_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__DefragmentVirtualDisk_USCORETask(soap, &soap_tmp___ns2__DefragmentVirtualDisk_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__DefragmentVirtualDisk_USCORETask(soap, &soap_tmp___ns2__DefragmentVirtualDisk_USCORETask, "-ns2:DefragmentVirtualDisk_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__DefragmentVirtualDisk_USCORETask(soap, &soap_tmp___ns2__DefragmentVirtualDisk_USCORETask, "-ns2:DefragmentVirtualDisk_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__DefragmentVirtualDisk_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__DefragmentVirtualDisk_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__DefragmentVirtualDisk_USCORETaskResponse->soap_get(soap, "ns2:DefragmentVirtualDisk_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ShrinkVirtualDisk_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ShrinkVirtualDiskRequestType *ns2__ShrinkVirtualDisk_USCORETask, _ns2__ShrinkVirtualDisk_USCORETaskResponse *ns2__ShrinkVirtualDisk_USCORETaskResponse)
{	struct __ns2__ShrinkVirtualDisk_USCORETask soap_tmp___ns2__ShrinkVirtualDisk_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ShrinkVirtualDisk_USCORETask.ns2__ShrinkVirtualDisk_USCORETask = ns2__ShrinkVirtualDisk_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ShrinkVirtualDisk_USCORETask(soap, &soap_tmp___ns2__ShrinkVirtualDisk_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ShrinkVirtualDisk_USCORETask(soap, &soap_tmp___ns2__ShrinkVirtualDisk_USCORETask, "-ns2:ShrinkVirtualDisk_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ShrinkVirtualDisk_USCORETask(soap, &soap_tmp___ns2__ShrinkVirtualDisk_USCORETask, "-ns2:ShrinkVirtualDisk_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ShrinkVirtualDisk_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__ShrinkVirtualDisk_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ShrinkVirtualDisk_USCORETaskResponse->soap_get(soap, "ns2:ShrinkVirtualDisk_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__InflateVirtualDisk_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__InflateVirtualDiskRequestType *ns2__InflateVirtualDisk_USCORETask, _ns2__InflateVirtualDisk_USCORETaskResponse *ns2__InflateVirtualDisk_USCORETaskResponse)
{	struct __ns2__InflateVirtualDisk_USCORETask soap_tmp___ns2__InflateVirtualDisk_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__InflateVirtualDisk_USCORETask.ns2__InflateVirtualDisk_USCORETask = ns2__InflateVirtualDisk_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__InflateVirtualDisk_USCORETask(soap, &soap_tmp___ns2__InflateVirtualDisk_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__InflateVirtualDisk_USCORETask(soap, &soap_tmp___ns2__InflateVirtualDisk_USCORETask, "-ns2:InflateVirtualDisk_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__InflateVirtualDisk_USCORETask(soap, &soap_tmp___ns2__InflateVirtualDisk_USCORETask, "-ns2:InflateVirtualDisk_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__InflateVirtualDisk_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__InflateVirtualDisk_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__InflateVirtualDisk_USCORETaskResponse->soap_get(soap, "ns2:InflateVirtualDisk_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__EagerZeroVirtualDisk_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__EagerZeroVirtualDiskRequestType *ns2__EagerZeroVirtualDisk_USCORETask, _ns2__EagerZeroVirtualDisk_USCORETaskResponse *ns2__EagerZeroVirtualDisk_USCORETaskResponse)
{	struct __ns2__EagerZeroVirtualDisk_USCORETask soap_tmp___ns2__EagerZeroVirtualDisk_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__EagerZeroVirtualDisk_USCORETask.ns2__EagerZeroVirtualDisk_USCORETask = ns2__EagerZeroVirtualDisk_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__EagerZeroVirtualDisk_USCORETask(soap, &soap_tmp___ns2__EagerZeroVirtualDisk_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__EagerZeroVirtualDisk_USCORETask(soap, &soap_tmp___ns2__EagerZeroVirtualDisk_USCORETask, "-ns2:EagerZeroVirtualDisk_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__EagerZeroVirtualDisk_USCORETask(soap, &soap_tmp___ns2__EagerZeroVirtualDisk_USCORETask, "-ns2:EagerZeroVirtualDisk_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__EagerZeroVirtualDisk_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__EagerZeroVirtualDisk_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__EagerZeroVirtualDisk_USCORETaskResponse->soap_get(soap, "ns2:EagerZeroVirtualDisk_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ZeroFillVirtualDisk_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ZeroFillVirtualDiskRequestType *ns2__ZeroFillVirtualDisk_USCORETask, _ns2__ZeroFillVirtualDisk_USCORETaskResponse *ns2__ZeroFillVirtualDisk_USCORETaskResponse)
{	struct __ns2__ZeroFillVirtualDisk_USCORETask soap_tmp___ns2__ZeroFillVirtualDisk_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ZeroFillVirtualDisk_USCORETask.ns2__ZeroFillVirtualDisk_USCORETask = ns2__ZeroFillVirtualDisk_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ZeroFillVirtualDisk_USCORETask(soap, &soap_tmp___ns2__ZeroFillVirtualDisk_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ZeroFillVirtualDisk_USCORETask(soap, &soap_tmp___ns2__ZeroFillVirtualDisk_USCORETask, "-ns2:ZeroFillVirtualDisk_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ZeroFillVirtualDisk_USCORETask(soap, &soap_tmp___ns2__ZeroFillVirtualDisk_USCORETask, "-ns2:ZeroFillVirtualDisk_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ZeroFillVirtualDisk_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__ZeroFillVirtualDisk_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ZeroFillVirtualDisk_USCORETaskResponse->soap_get(soap, "ns2:ZeroFillVirtualDisk_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__SetVirtualDiskUuid(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__SetVirtualDiskUuidRequestType *ns2__SetVirtualDiskUuid, _ns2__SetVirtualDiskUuidResponse *ns2__SetVirtualDiskUuidResponse)
{	struct __ns2__SetVirtualDiskUuid soap_tmp___ns2__SetVirtualDiskUuid;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__SetVirtualDiskUuid.ns2__SetVirtualDiskUuid = ns2__SetVirtualDiskUuid;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__SetVirtualDiskUuid(soap, &soap_tmp___ns2__SetVirtualDiskUuid);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__SetVirtualDiskUuid(soap, &soap_tmp___ns2__SetVirtualDiskUuid, "-ns2:SetVirtualDiskUuid", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__SetVirtualDiskUuid(soap, &soap_tmp___ns2__SetVirtualDiskUuid, "-ns2:SetVirtualDiskUuid", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__SetVirtualDiskUuidResponse)
		return soap_closesock(soap);
	ns2__SetVirtualDiskUuidResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__SetVirtualDiskUuidResponse->soap_get(soap, "ns2:SetVirtualDiskUuidResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryVirtualDiskUuid(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryVirtualDiskUuidRequestType *ns2__QueryVirtualDiskUuid, _ns2__QueryVirtualDiskUuidResponse *ns2__QueryVirtualDiskUuidResponse)
{	struct __ns2__QueryVirtualDiskUuid soap_tmp___ns2__QueryVirtualDiskUuid;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryVirtualDiskUuid.ns2__QueryVirtualDiskUuid = ns2__QueryVirtualDiskUuid;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryVirtualDiskUuid(soap, &soap_tmp___ns2__QueryVirtualDiskUuid);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryVirtualDiskUuid(soap, &soap_tmp___ns2__QueryVirtualDiskUuid, "-ns2:QueryVirtualDiskUuid", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryVirtualDiskUuid(soap, &soap_tmp___ns2__QueryVirtualDiskUuid, "-ns2:QueryVirtualDiskUuid", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryVirtualDiskUuidResponse)
		return soap_closesock(soap);
	ns2__QueryVirtualDiskUuidResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryVirtualDiskUuidResponse->soap_get(soap, "ns2:QueryVirtualDiskUuidResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryVirtualDiskGeometry(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryVirtualDiskGeometryRequestType *ns2__QueryVirtualDiskGeometry, _ns2__QueryVirtualDiskGeometryResponse *ns2__QueryVirtualDiskGeometryResponse)
{	struct __ns2__QueryVirtualDiskGeometry soap_tmp___ns2__QueryVirtualDiskGeometry;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryVirtualDiskGeometry.ns2__QueryVirtualDiskGeometry = ns2__QueryVirtualDiskGeometry;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryVirtualDiskGeometry(soap, &soap_tmp___ns2__QueryVirtualDiskGeometry);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryVirtualDiskGeometry(soap, &soap_tmp___ns2__QueryVirtualDiskGeometry, "-ns2:QueryVirtualDiskGeometry", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryVirtualDiskGeometry(soap, &soap_tmp___ns2__QueryVirtualDiskGeometry, "-ns2:QueryVirtualDiskGeometry", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryVirtualDiskGeometryResponse)
		return soap_closesock(soap);
	ns2__QueryVirtualDiskGeometryResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryVirtualDiskGeometryResponse->soap_get(soap, "ns2:QueryVirtualDiskGeometryResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RefreshStorageInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RefreshStorageInfoRequestType *ns2__RefreshStorageInfo, _ns2__RefreshStorageInfoResponse *ns2__RefreshStorageInfoResponse)
{	struct __ns2__RefreshStorageInfo soap_tmp___ns2__RefreshStorageInfo;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RefreshStorageInfo.ns2__RefreshStorageInfo = ns2__RefreshStorageInfo;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RefreshStorageInfo(soap, &soap_tmp___ns2__RefreshStorageInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RefreshStorageInfo(soap, &soap_tmp___ns2__RefreshStorageInfo, "-ns2:RefreshStorageInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RefreshStorageInfo(soap, &soap_tmp___ns2__RefreshStorageInfo, "-ns2:RefreshStorageInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RefreshStorageInfoResponse)
		return soap_closesock(soap);
	ns2__RefreshStorageInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RefreshStorageInfoResponse->soap_get(soap, "ns2:RefreshStorageInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__CreateSnapshot_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__CreateSnapshotRequestType *ns2__CreateSnapshot_USCORETask, _ns2__CreateSnapshot_USCORETaskResponse *ns2__CreateSnapshot_USCORETaskResponse)
{	struct __ns2__CreateSnapshot_USCORETask soap_tmp___ns2__CreateSnapshot_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__CreateSnapshot_USCORETask.ns2__CreateSnapshot_USCORETask = ns2__CreateSnapshot_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__CreateSnapshot_USCORETask(soap, &soap_tmp___ns2__CreateSnapshot_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__CreateSnapshot_USCORETask(soap, &soap_tmp___ns2__CreateSnapshot_USCORETask, "-ns2:CreateSnapshot_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__CreateSnapshot_USCORETask(soap, &soap_tmp___ns2__CreateSnapshot_USCORETask, "-ns2:CreateSnapshot_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CreateSnapshot_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__CreateSnapshot_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CreateSnapshot_USCORETaskResponse->soap_get(soap, "ns2:CreateSnapshot_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RevertToCurrentSnapshot_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RevertToCurrentSnapshotRequestType *ns2__RevertToCurrentSnapshot_USCORETask, _ns2__RevertToCurrentSnapshot_USCORETaskResponse *ns2__RevertToCurrentSnapshot_USCORETaskResponse)
{	struct __ns2__RevertToCurrentSnapshot_USCORETask soap_tmp___ns2__RevertToCurrentSnapshot_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RevertToCurrentSnapshot_USCORETask.ns2__RevertToCurrentSnapshot_USCORETask = ns2__RevertToCurrentSnapshot_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RevertToCurrentSnapshot_USCORETask(soap, &soap_tmp___ns2__RevertToCurrentSnapshot_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RevertToCurrentSnapshot_USCORETask(soap, &soap_tmp___ns2__RevertToCurrentSnapshot_USCORETask, "-ns2:RevertToCurrentSnapshot_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RevertToCurrentSnapshot_USCORETask(soap, &soap_tmp___ns2__RevertToCurrentSnapshot_USCORETask, "-ns2:RevertToCurrentSnapshot_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RevertToCurrentSnapshot_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__RevertToCurrentSnapshot_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RevertToCurrentSnapshot_USCORETaskResponse->soap_get(soap, "ns2:RevertToCurrentSnapshot_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RemoveAllSnapshots_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RemoveAllSnapshotsRequestType *ns2__RemoveAllSnapshots_USCORETask, _ns2__RemoveAllSnapshots_USCORETaskResponse *ns2__RemoveAllSnapshots_USCORETaskResponse)
{	struct __ns2__RemoveAllSnapshots_USCORETask soap_tmp___ns2__RemoveAllSnapshots_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RemoveAllSnapshots_USCORETask.ns2__RemoveAllSnapshots_USCORETask = ns2__RemoveAllSnapshots_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RemoveAllSnapshots_USCORETask(soap, &soap_tmp___ns2__RemoveAllSnapshots_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RemoveAllSnapshots_USCORETask(soap, &soap_tmp___ns2__RemoveAllSnapshots_USCORETask, "-ns2:RemoveAllSnapshots_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RemoveAllSnapshots_USCORETask(soap, &soap_tmp___ns2__RemoveAllSnapshots_USCORETask, "-ns2:RemoveAllSnapshots_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RemoveAllSnapshots_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__RemoveAllSnapshots_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RemoveAllSnapshots_USCORETaskResponse->soap_get(soap, "ns2:RemoveAllSnapshots_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ConsolidateVMDisks_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ConsolidateVMDisksRequestType *ns2__ConsolidateVMDisks_USCORETask, _ns2__ConsolidateVMDisks_USCORETaskResponse *ns2__ConsolidateVMDisks_USCORETaskResponse)
{	struct __ns2__ConsolidateVMDisks_USCORETask soap_tmp___ns2__ConsolidateVMDisks_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ConsolidateVMDisks_USCORETask.ns2__ConsolidateVMDisks_USCORETask = ns2__ConsolidateVMDisks_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ConsolidateVMDisks_USCORETask(soap, &soap_tmp___ns2__ConsolidateVMDisks_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ConsolidateVMDisks_USCORETask(soap, &soap_tmp___ns2__ConsolidateVMDisks_USCORETask, "-ns2:ConsolidateVMDisks_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ConsolidateVMDisks_USCORETask(soap, &soap_tmp___ns2__ConsolidateVMDisks_USCORETask, "-ns2:ConsolidateVMDisks_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ConsolidateVMDisks_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__ConsolidateVMDisks_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ConsolidateVMDisks_USCORETaskResponse->soap_get(soap, "ns2:ConsolidateVMDisks_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__EstimateStorageForConsolidateSnapshots_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__EstimateStorageForConsolidateSnapshotsRequestType *ns2__EstimateStorageForConsolidateSnapshots_USCORETask, _ns2__EstimateStorageForConsolidateSnapshots_USCORETaskResponse *ns2__EstimateStorageForConsolidateSnapshots_USCORETaskResponse)
{	struct __ns2__EstimateStorageForConsolidateSnapshots_USCORETask soap_tmp___ns2__EstimateStorageForConsolidateSnapshots_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__EstimateStorageForConsolidateSnapshots_USCORETask.ns2__EstimateStorageForConsolidateSnapshots_USCORETask = ns2__EstimateStorageForConsolidateSnapshots_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__EstimateStorageForConsolidateSnapshots_USCORETask(soap, &soap_tmp___ns2__EstimateStorageForConsolidateSnapshots_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__EstimateStorageForConsolidateSnapshots_USCORETask(soap, &soap_tmp___ns2__EstimateStorageForConsolidateSnapshots_USCORETask, "-ns2:EstimateStorageForConsolidateSnapshots_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__EstimateStorageForConsolidateSnapshots_USCORETask(soap, &soap_tmp___ns2__EstimateStorageForConsolidateSnapshots_USCORETask, "-ns2:EstimateStorageForConsolidateSnapshots_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__EstimateStorageForConsolidateSnapshots_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__EstimateStorageForConsolidateSnapshots_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__EstimateStorageForConsolidateSnapshots_USCORETaskResponse->soap_get(soap, "ns2:EstimateStorageForConsolidateSnapshots_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ReconfigVM_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ReconfigVMRequestType *ns2__ReconfigVM_USCORETask, _ns2__ReconfigVM_USCORETaskResponse *ns2__ReconfigVM_USCORETaskResponse)
{	struct __ns2__ReconfigVM_USCORETask soap_tmp___ns2__ReconfigVM_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ReconfigVM_USCORETask.ns2__ReconfigVM_USCORETask = ns2__ReconfigVM_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ReconfigVM_USCORETask(soap, &soap_tmp___ns2__ReconfigVM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ReconfigVM_USCORETask(soap, &soap_tmp___ns2__ReconfigVM_USCORETask, "-ns2:ReconfigVM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ReconfigVM_USCORETask(soap, &soap_tmp___ns2__ReconfigVM_USCORETask, "-ns2:ReconfigVM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ReconfigVM_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__ReconfigVM_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ReconfigVM_USCORETaskResponse->soap_get(soap, "ns2:ReconfigVM_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UpgradeVM_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UpgradeVMRequestType *ns2__UpgradeVM_USCORETask, _ns2__UpgradeVM_USCORETaskResponse *ns2__UpgradeVM_USCORETaskResponse)
{	struct __ns2__UpgradeVM_USCORETask soap_tmp___ns2__UpgradeVM_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UpgradeVM_USCORETask.ns2__UpgradeVM_USCORETask = ns2__UpgradeVM_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UpgradeVM_USCORETask(soap, &soap_tmp___ns2__UpgradeVM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UpgradeVM_USCORETask(soap, &soap_tmp___ns2__UpgradeVM_USCORETask, "-ns2:UpgradeVM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UpgradeVM_USCORETask(soap, &soap_tmp___ns2__UpgradeVM_USCORETask, "-ns2:UpgradeVM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UpgradeVM_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__UpgradeVM_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UpgradeVM_USCORETaskResponse->soap_get(soap, "ns2:UpgradeVM_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ExtractOvfEnvironment(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ExtractOvfEnvironmentRequestType *ns2__ExtractOvfEnvironment, _ns2__ExtractOvfEnvironmentResponse *ns2__ExtractOvfEnvironmentResponse)
{	struct __ns2__ExtractOvfEnvironment soap_tmp___ns2__ExtractOvfEnvironment;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ExtractOvfEnvironment.ns2__ExtractOvfEnvironment = ns2__ExtractOvfEnvironment;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ExtractOvfEnvironment(soap, &soap_tmp___ns2__ExtractOvfEnvironment);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ExtractOvfEnvironment(soap, &soap_tmp___ns2__ExtractOvfEnvironment, "-ns2:ExtractOvfEnvironment", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ExtractOvfEnvironment(soap, &soap_tmp___ns2__ExtractOvfEnvironment, "-ns2:ExtractOvfEnvironment", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ExtractOvfEnvironmentResponse)
		return soap_closesock(soap);
	ns2__ExtractOvfEnvironmentResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ExtractOvfEnvironmentResponse->soap_get(soap, "ns2:ExtractOvfEnvironmentResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__PowerOnVM_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__PowerOnVMRequestType *ns2__PowerOnVM_USCORETask, _ns2__PowerOnVM_USCORETaskResponse *ns2__PowerOnVM_USCORETaskResponse)
{	struct __ns2__PowerOnVM_USCORETask soap_tmp___ns2__PowerOnVM_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__PowerOnVM_USCORETask.ns2__PowerOnVM_USCORETask = ns2__PowerOnVM_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__PowerOnVM_USCORETask(soap, &soap_tmp___ns2__PowerOnVM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__PowerOnVM_USCORETask(soap, &soap_tmp___ns2__PowerOnVM_USCORETask, "-ns2:PowerOnVM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__PowerOnVM_USCORETask(soap, &soap_tmp___ns2__PowerOnVM_USCORETask, "-ns2:PowerOnVM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__PowerOnVM_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__PowerOnVM_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__PowerOnVM_USCORETaskResponse->soap_get(soap, "ns2:PowerOnVM_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__PowerOffVM_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__PowerOffVMRequestType *ns2__PowerOffVM_USCORETask, _ns2__PowerOffVM_USCORETaskResponse *ns2__PowerOffVM_USCORETaskResponse)
{	struct __ns2__PowerOffVM_USCORETask soap_tmp___ns2__PowerOffVM_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__PowerOffVM_USCORETask.ns2__PowerOffVM_USCORETask = ns2__PowerOffVM_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__PowerOffVM_USCORETask(soap, &soap_tmp___ns2__PowerOffVM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__PowerOffVM_USCORETask(soap, &soap_tmp___ns2__PowerOffVM_USCORETask, "-ns2:PowerOffVM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__PowerOffVM_USCORETask(soap, &soap_tmp___ns2__PowerOffVM_USCORETask, "-ns2:PowerOffVM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__PowerOffVM_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__PowerOffVM_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__PowerOffVM_USCORETaskResponse->soap_get(soap, "ns2:PowerOffVM_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__SuspendVM_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__SuspendVMRequestType *ns2__SuspendVM_USCORETask, _ns2__SuspendVM_USCORETaskResponse *ns2__SuspendVM_USCORETaskResponse)
{	struct __ns2__SuspendVM_USCORETask soap_tmp___ns2__SuspendVM_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__SuspendVM_USCORETask.ns2__SuspendVM_USCORETask = ns2__SuspendVM_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__SuspendVM_USCORETask(soap, &soap_tmp___ns2__SuspendVM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__SuspendVM_USCORETask(soap, &soap_tmp___ns2__SuspendVM_USCORETask, "-ns2:SuspendVM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__SuspendVM_USCORETask(soap, &soap_tmp___ns2__SuspendVM_USCORETask, "-ns2:SuspendVM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__SuspendVM_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__SuspendVM_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__SuspendVM_USCORETaskResponse->soap_get(soap, "ns2:SuspendVM_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ResetVM_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ResetVMRequestType *ns2__ResetVM_USCORETask, _ns2__ResetVM_USCORETaskResponse *ns2__ResetVM_USCORETaskResponse)
{	struct __ns2__ResetVM_USCORETask soap_tmp___ns2__ResetVM_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ResetVM_USCORETask.ns2__ResetVM_USCORETask = ns2__ResetVM_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ResetVM_USCORETask(soap, &soap_tmp___ns2__ResetVM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ResetVM_USCORETask(soap, &soap_tmp___ns2__ResetVM_USCORETask, "-ns2:ResetVM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ResetVM_USCORETask(soap, &soap_tmp___ns2__ResetVM_USCORETask, "-ns2:ResetVM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ResetVM_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__ResetVM_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ResetVM_USCORETaskResponse->soap_get(soap, "ns2:ResetVM_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ShutdownGuest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ShutdownGuestRequestType *ns2__ShutdownGuest, _ns2__ShutdownGuestResponse *ns2__ShutdownGuestResponse)
{	struct __ns2__ShutdownGuest soap_tmp___ns2__ShutdownGuest;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ShutdownGuest.ns2__ShutdownGuest = ns2__ShutdownGuest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ShutdownGuest(soap, &soap_tmp___ns2__ShutdownGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ShutdownGuest(soap, &soap_tmp___ns2__ShutdownGuest, "-ns2:ShutdownGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ShutdownGuest(soap, &soap_tmp___ns2__ShutdownGuest, "-ns2:ShutdownGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ShutdownGuestResponse)
		return soap_closesock(soap);
	ns2__ShutdownGuestResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ShutdownGuestResponse->soap_get(soap, "ns2:ShutdownGuestResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RebootGuest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RebootGuestRequestType *ns2__RebootGuest, _ns2__RebootGuestResponse *ns2__RebootGuestResponse)
{	struct __ns2__RebootGuest soap_tmp___ns2__RebootGuest;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RebootGuest.ns2__RebootGuest = ns2__RebootGuest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RebootGuest(soap, &soap_tmp___ns2__RebootGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RebootGuest(soap, &soap_tmp___ns2__RebootGuest, "-ns2:RebootGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RebootGuest(soap, &soap_tmp___ns2__RebootGuest, "-ns2:RebootGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RebootGuestResponse)
		return soap_closesock(soap);
	ns2__RebootGuestResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RebootGuestResponse->soap_get(soap, "ns2:RebootGuestResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__StandbyGuest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__StandbyGuestRequestType *ns2__StandbyGuest, _ns2__StandbyGuestResponse *ns2__StandbyGuestResponse)
{	struct __ns2__StandbyGuest soap_tmp___ns2__StandbyGuest;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__StandbyGuest.ns2__StandbyGuest = ns2__StandbyGuest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__StandbyGuest(soap, &soap_tmp___ns2__StandbyGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__StandbyGuest(soap, &soap_tmp___ns2__StandbyGuest, "-ns2:StandbyGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__StandbyGuest(soap, &soap_tmp___ns2__StandbyGuest, "-ns2:StandbyGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__StandbyGuestResponse)
		return soap_closesock(soap);
	ns2__StandbyGuestResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__StandbyGuestResponse->soap_get(soap, "ns2:StandbyGuestResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__AnswerVM(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__AnswerVMRequestType *ns2__AnswerVM, _ns2__AnswerVMResponse *ns2__AnswerVMResponse)
{	struct __ns2__AnswerVM soap_tmp___ns2__AnswerVM;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__AnswerVM.ns2__AnswerVM = ns2__AnswerVM;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__AnswerVM(soap, &soap_tmp___ns2__AnswerVM);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__AnswerVM(soap, &soap_tmp___ns2__AnswerVM, "-ns2:AnswerVM", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__AnswerVM(soap, &soap_tmp___ns2__AnswerVM, "-ns2:AnswerVM", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__AnswerVMResponse)
		return soap_closesock(soap);
	ns2__AnswerVMResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__AnswerVMResponse->soap_get(soap, "ns2:AnswerVMResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__CustomizeVM_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__CustomizeVMRequestType *ns2__CustomizeVM_USCORETask, _ns2__CustomizeVM_USCORETaskResponse *ns2__CustomizeVM_USCORETaskResponse)
{	struct __ns2__CustomizeVM_USCORETask soap_tmp___ns2__CustomizeVM_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__CustomizeVM_USCORETask.ns2__CustomizeVM_USCORETask = ns2__CustomizeVM_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__CustomizeVM_USCORETask(soap, &soap_tmp___ns2__CustomizeVM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__CustomizeVM_USCORETask(soap, &soap_tmp___ns2__CustomizeVM_USCORETask, "-ns2:CustomizeVM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__CustomizeVM_USCORETask(soap, &soap_tmp___ns2__CustomizeVM_USCORETask, "-ns2:CustomizeVM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CustomizeVM_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__CustomizeVM_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CustomizeVM_USCORETaskResponse->soap_get(soap, "ns2:CustomizeVM_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__CheckCustomizationSpec(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__CheckCustomizationSpecRequestType *ns2__CheckCustomizationSpec, _ns2__CheckCustomizationSpecResponse *ns2__CheckCustomizationSpecResponse)
{	struct __ns2__CheckCustomizationSpec soap_tmp___ns2__CheckCustomizationSpec;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__CheckCustomizationSpec.ns2__CheckCustomizationSpec = ns2__CheckCustomizationSpec;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__CheckCustomizationSpec(soap, &soap_tmp___ns2__CheckCustomizationSpec);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__CheckCustomizationSpec(soap, &soap_tmp___ns2__CheckCustomizationSpec, "-ns2:CheckCustomizationSpec", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__CheckCustomizationSpec(soap, &soap_tmp___ns2__CheckCustomizationSpec, "-ns2:CheckCustomizationSpec", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CheckCustomizationSpecResponse)
		return soap_closesock(soap);
	ns2__CheckCustomizationSpecResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CheckCustomizationSpecResponse->soap_get(soap, "ns2:CheckCustomizationSpecResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__MigrateVM_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__MigrateVMRequestType *ns2__MigrateVM_USCORETask, _ns2__MigrateVM_USCORETaskResponse *ns2__MigrateVM_USCORETaskResponse)
{	struct __ns2__MigrateVM_USCORETask soap_tmp___ns2__MigrateVM_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__MigrateVM_USCORETask.ns2__MigrateVM_USCORETask = ns2__MigrateVM_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__MigrateVM_USCORETask(soap, &soap_tmp___ns2__MigrateVM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__MigrateVM_USCORETask(soap, &soap_tmp___ns2__MigrateVM_USCORETask, "-ns2:MigrateVM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__MigrateVM_USCORETask(soap, &soap_tmp___ns2__MigrateVM_USCORETask, "-ns2:MigrateVM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__MigrateVM_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__MigrateVM_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__MigrateVM_USCORETaskResponse->soap_get(soap, "ns2:MigrateVM_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RelocateVM_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RelocateVMRequestType *ns2__RelocateVM_USCORETask, _ns2__RelocateVM_USCORETaskResponse *ns2__RelocateVM_USCORETaskResponse)
{	struct __ns2__RelocateVM_USCORETask soap_tmp___ns2__RelocateVM_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RelocateVM_USCORETask.ns2__RelocateVM_USCORETask = ns2__RelocateVM_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RelocateVM_USCORETask(soap, &soap_tmp___ns2__RelocateVM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RelocateVM_USCORETask(soap, &soap_tmp___ns2__RelocateVM_USCORETask, "-ns2:RelocateVM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RelocateVM_USCORETask(soap, &soap_tmp___ns2__RelocateVM_USCORETask, "-ns2:RelocateVM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RelocateVM_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__RelocateVM_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RelocateVM_USCORETaskResponse->soap_get(soap, "ns2:RelocateVM_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__CloneVM_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__CloneVMRequestType *ns2__CloneVM_USCORETask, _ns2__CloneVM_USCORETaskResponse *ns2__CloneVM_USCORETaskResponse)
{	struct __ns2__CloneVM_USCORETask soap_tmp___ns2__CloneVM_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__CloneVM_USCORETask.ns2__CloneVM_USCORETask = ns2__CloneVM_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__CloneVM_USCORETask(soap, &soap_tmp___ns2__CloneVM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__CloneVM_USCORETask(soap, &soap_tmp___ns2__CloneVM_USCORETask, "-ns2:CloneVM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__CloneVM_USCORETask(soap, &soap_tmp___ns2__CloneVM_USCORETask, "-ns2:CloneVM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CloneVM_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__CloneVM_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CloneVM_USCORETaskResponse->soap_get(soap, "ns2:CloneVM_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ExportVm(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ExportVmRequestType *ns2__ExportVm, _ns2__ExportVmResponse *ns2__ExportVmResponse)
{	struct __ns2__ExportVm soap_tmp___ns2__ExportVm;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ExportVm.ns2__ExportVm = ns2__ExportVm;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ExportVm(soap, &soap_tmp___ns2__ExportVm);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ExportVm(soap, &soap_tmp___ns2__ExportVm, "-ns2:ExportVm", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ExportVm(soap, &soap_tmp___ns2__ExportVm, "-ns2:ExportVm", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ExportVmResponse)
		return soap_closesock(soap);
	ns2__ExportVmResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ExportVmResponse->soap_get(soap, "ns2:ExportVmResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__MarkAsTemplate(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__MarkAsTemplateRequestType *ns2__MarkAsTemplate, _ns2__MarkAsTemplateResponse *ns2__MarkAsTemplateResponse)
{	struct __ns2__MarkAsTemplate soap_tmp___ns2__MarkAsTemplate;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__MarkAsTemplate.ns2__MarkAsTemplate = ns2__MarkAsTemplate;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__MarkAsTemplate(soap, &soap_tmp___ns2__MarkAsTemplate);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__MarkAsTemplate(soap, &soap_tmp___ns2__MarkAsTemplate, "-ns2:MarkAsTemplate", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__MarkAsTemplate(soap, &soap_tmp___ns2__MarkAsTemplate, "-ns2:MarkAsTemplate", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__MarkAsTemplateResponse)
		return soap_closesock(soap);
	ns2__MarkAsTemplateResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__MarkAsTemplateResponse->soap_get(soap, "ns2:MarkAsTemplateResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__MarkAsVirtualMachine(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__MarkAsVirtualMachineRequestType *ns2__MarkAsVirtualMachine, _ns2__MarkAsVirtualMachineResponse *ns2__MarkAsVirtualMachineResponse)
{	struct __ns2__MarkAsVirtualMachine soap_tmp___ns2__MarkAsVirtualMachine;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__MarkAsVirtualMachine.ns2__MarkAsVirtualMachine = ns2__MarkAsVirtualMachine;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__MarkAsVirtualMachine(soap, &soap_tmp___ns2__MarkAsVirtualMachine);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__MarkAsVirtualMachine(soap, &soap_tmp___ns2__MarkAsVirtualMachine, "-ns2:MarkAsVirtualMachine", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__MarkAsVirtualMachine(soap, &soap_tmp___ns2__MarkAsVirtualMachine, "-ns2:MarkAsVirtualMachine", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__MarkAsVirtualMachineResponse)
		return soap_closesock(soap);
	ns2__MarkAsVirtualMachineResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__MarkAsVirtualMachineResponse->soap_get(soap, "ns2:MarkAsVirtualMachineResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UnregisterVM(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UnregisterVMRequestType *ns2__UnregisterVM, _ns2__UnregisterVMResponse *ns2__UnregisterVMResponse)
{	struct __ns2__UnregisterVM soap_tmp___ns2__UnregisterVM;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UnregisterVM.ns2__UnregisterVM = ns2__UnregisterVM;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UnregisterVM(soap, &soap_tmp___ns2__UnregisterVM);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UnregisterVM(soap, &soap_tmp___ns2__UnregisterVM, "-ns2:UnregisterVM", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UnregisterVM(soap, &soap_tmp___ns2__UnregisterVM, "-ns2:UnregisterVM", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UnregisterVMResponse)
		return soap_closesock(soap);
	ns2__UnregisterVMResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UnregisterVMResponse->soap_get(soap, "ns2:UnregisterVMResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ResetGuestInformation(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ResetGuestInformationRequestType *ns2__ResetGuestInformation, _ns2__ResetGuestInformationResponse *ns2__ResetGuestInformationResponse)
{	struct __ns2__ResetGuestInformation soap_tmp___ns2__ResetGuestInformation;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ResetGuestInformation.ns2__ResetGuestInformation = ns2__ResetGuestInformation;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ResetGuestInformation(soap, &soap_tmp___ns2__ResetGuestInformation);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ResetGuestInformation(soap, &soap_tmp___ns2__ResetGuestInformation, "-ns2:ResetGuestInformation", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ResetGuestInformation(soap, &soap_tmp___ns2__ResetGuestInformation, "-ns2:ResetGuestInformation", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ResetGuestInformationResponse)
		return soap_closesock(soap);
	ns2__ResetGuestInformationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ResetGuestInformationResponse->soap_get(soap, "ns2:ResetGuestInformationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__MountToolsInstaller(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__MountToolsInstallerRequestType *ns2__MountToolsInstaller, _ns2__MountToolsInstallerResponse *ns2__MountToolsInstallerResponse)
{	struct __ns2__MountToolsInstaller soap_tmp___ns2__MountToolsInstaller;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__MountToolsInstaller.ns2__MountToolsInstaller = ns2__MountToolsInstaller;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__MountToolsInstaller(soap, &soap_tmp___ns2__MountToolsInstaller);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__MountToolsInstaller(soap, &soap_tmp___ns2__MountToolsInstaller, "-ns2:MountToolsInstaller", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__MountToolsInstaller(soap, &soap_tmp___ns2__MountToolsInstaller, "-ns2:MountToolsInstaller", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__MountToolsInstallerResponse)
		return soap_closesock(soap);
	ns2__MountToolsInstallerResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__MountToolsInstallerResponse->soap_get(soap, "ns2:MountToolsInstallerResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UnmountToolsInstaller(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UnmountToolsInstallerRequestType *ns2__UnmountToolsInstaller, _ns2__UnmountToolsInstallerResponse *ns2__UnmountToolsInstallerResponse)
{	struct __ns2__UnmountToolsInstaller soap_tmp___ns2__UnmountToolsInstaller;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UnmountToolsInstaller.ns2__UnmountToolsInstaller = ns2__UnmountToolsInstaller;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UnmountToolsInstaller(soap, &soap_tmp___ns2__UnmountToolsInstaller);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UnmountToolsInstaller(soap, &soap_tmp___ns2__UnmountToolsInstaller, "-ns2:UnmountToolsInstaller", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UnmountToolsInstaller(soap, &soap_tmp___ns2__UnmountToolsInstaller, "-ns2:UnmountToolsInstaller", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UnmountToolsInstallerResponse)
		return soap_closesock(soap);
	ns2__UnmountToolsInstallerResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UnmountToolsInstallerResponse->soap_get(soap, "ns2:UnmountToolsInstallerResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UpgradeTools_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UpgradeToolsRequestType *ns2__UpgradeTools_USCORETask, _ns2__UpgradeTools_USCORETaskResponse *ns2__UpgradeTools_USCORETaskResponse)
{	struct __ns2__UpgradeTools_USCORETask soap_tmp___ns2__UpgradeTools_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UpgradeTools_USCORETask.ns2__UpgradeTools_USCORETask = ns2__UpgradeTools_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UpgradeTools_USCORETask(soap, &soap_tmp___ns2__UpgradeTools_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UpgradeTools_USCORETask(soap, &soap_tmp___ns2__UpgradeTools_USCORETask, "-ns2:UpgradeTools_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UpgradeTools_USCORETask(soap, &soap_tmp___ns2__UpgradeTools_USCORETask, "-ns2:UpgradeTools_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UpgradeTools_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__UpgradeTools_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UpgradeTools_USCORETaskResponse->soap_get(soap, "ns2:UpgradeTools_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__AcquireMksTicket(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__AcquireMksTicketRequestType *ns2__AcquireMksTicket, _ns2__AcquireMksTicketResponse *ns2__AcquireMksTicketResponse)
{	struct __ns2__AcquireMksTicket soap_tmp___ns2__AcquireMksTicket;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__AcquireMksTicket.ns2__AcquireMksTicket = ns2__AcquireMksTicket;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__AcquireMksTicket(soap, &soap_tmp___ns2__AcquireMksTicket);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__AcquireMksTicket(soap, &soap_tmp___ns2__AcquireMksTicket, "-ns2:AcquireMksTicket", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__AcquireMksTicket(soap, &soap_tmp___ns2__AcquireMksTicket, "-ns2:AcquireMksTicket", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__AcquireMksTicketResponse)
		return soap_closesock(soap);
	ns2__AcquireMksTicketResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__AcquireMksTicketResponse->soap_get(soap, "ns2:AcquireMksTicketResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__AcquireTicket(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__AcquireTicketRequestType *ns2__AcquireTicket, _ns2__AcquireTicketResponse *ns2__AcquireTicketResponse)
{	struct __ns2__AcquireTicket soap_tmp___ns2__AcquireTicket;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__AcquireTicket.ns2__AcquireTicket = ns2__AcquireTicket;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__AcquireTicket(soap, &soap_tmp___ns2__AcquireTicket);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__AcquireTicket(soap, &soap_tmp___ns2__AcquireTicket, "-ns2:AcquireTicket", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__AcquireTicket(soap, &soap_tmp___ns2__AcquireTicket, "-ns2:AcquireTicket", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__AcquireTicketResponse)
		return soap_closesock(soap);
	ns2__AcquireTicketResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__AcquireTicketResponse->soap_get(soap, "ns2:AcquireTicketResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__SetScreenResolution(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__SetScreenResolutionRequestType *ns2__SetScreenResolution, _ns2__SetScreenResolutionResponse *ns2__SetScreenResolutionResponse)
{	struct __ns2__SetScreenResolution soap_tmp___ns2__SetScreenResolution;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__SetScreenResolution.ns2__SetScreenResolution = ns2__SetScreenResolution;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__SetScreenResolution(soap, &soap_tmp___ns2__SetScreenResolution);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__SetScreenResolution(soap, &soap_tmp___ns2__SetScreenResolution, "-ns2:SetScreenResolution", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__SetScreenResolution(soap, &soap_tmp___ns2__SetScreenResolution, "-ns2:SetScreenResolution", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__SetScreenResolutionResponse)
		return soap_closesock(soap);
	ns2__SetScreenResolutionResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__SetScreenResolutionResponse->soap_get(soap, "ns2:SetScreenResolutionResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__DefragmentAllDisks(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__DefragmentAllDisksRequestType *ns2__DefragmentAllDisks, _ns2__DefragmentAllDisksResponse *ns2__DefragmentAllDisksResponse)
{	struct __ns2__DefragmentAllDisks soap_tmp___ns2__DefragmentAllDisks;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__DefragmentAllDisks.ns2__DefragmentAllDisks = ns2__DefragmentAllDisks;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__DefragmentAllDisks(soap, &soap_tmp___ns2__DefragmentAllDisks);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__DefragmentAllDisks(soap, &soap_tmp___ns2__DefragmentAllDisks, "-ns2:DefragmentAllDisks", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__DefragmentAllDisks(soap, &soap_tmp___ns2__DefragmentAllDisks, "-ns2:DefragmentAllDisks", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__DefragmentAllDisksResponse)
		return soap_closesock(soap);
	ns2__DefragmentAllDisksResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__DefragmentAllDisksResponse->soap_get(soap, "ns2:DefragmentAllDisksResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__CreateSecondaryVM_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__CreateSecondaryVMRequestType *ns2__CreateSecondaryVM_USCORETask, _ns2__CreateSecondaryVM_USCORETaskResponse *ns2__CreateSecondaryVM_USCORETaskResponse)
{	struct __ns2__CreateSecondaryVM_USCORETask soap_tmp___ns2__CreateSecondaryVM_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__CreateSecondaryVM_USCORETask.ns2__CreateSecondaryVM_USCORETask = ns2__CreateSecondaryVM_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__CreateSecondaryVM_USCORETask(soap, &soap_tmp___ns2__CreateSecondaryVM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__CreateSecondaryVM_USCORETask(soap, &soap_tmp___ns2__CreateSecondaryVM_USCORETask, "-ns2:CreateSecondaryVM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__CreateSecondaryVM_USCORETask(soap, &soap_tmp___ns2__CreateSecondaryVM_USCORETask, "-ns2:CreateSecondaryVM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CreateSecondaryVM_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__CreateSecondaryVM_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CreateSecondaryVM_USCORETaskResponse->soap_get(soap, "ns2:CreateSecondaryVM_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__TurnOffFaultToleranceForVM_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__TurnOffFaultToleranceForVMRequestType *ns2__TurnOffFaultToleranceForVM_USCORETask, _ns2__TurnOffFaultToleranceForVM_USCORETaskResponse *ns2__TurnOffFaultToleranceForVM_USCORETaskResponse)
{	struct __ns2__TurnOffFaultToleranceForVM_USCORETask soap_tmp___ns2__TurnOffFaultToleranceForVM_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__TurnOffFaultToleranceForVM_USCORETask.ns2__TurnOffFaultToleranceForVM_USCORETask = ns2__TurnOffFaultToleranceForVM_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__TurnOffFaultToleranceForVM_USCORETask(soap, &soap_tmp___ns2__TurnOffFaultToleranceForVM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__TurnOffFaultToleranceForVM_USCORETask(soap, &soap_tmp___ns2__TurnOffFaultToleranceForVM_USCORETask, "-ns2:TurnOffFaultToleranceForVM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__TurnOffFaultToleranceForVM_USCORETask(soap, &soap_tmp___ns2__TurnOffFaultToleranceForVM_USCORETask, "-ns2:TurnOffFaultToleranceForVM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__TurnOffFaultToleranceForVM_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__TurnOffFaultToleranceForVM_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__TurnOffFaultToleranceForVM_USCORETaskResponse->soap_get(soap, "ns2:TurnOffFaultToleranceForVM_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__MakePrimaryVM_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__MakePrimaryVMRequestType *ns2__MakePrimaryVM_USCORETask, _ns2__MakePrimaryVM_USCORETaskResponse *ns2__MakePrimaryVM_USCORETaskResponse)
{	struct __ns2__MakePrimaryVM_USCORETask soap_tmp___ns2__MakePrimaryVM_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__MakePrimaryVM_USCORETask.ns2__MakePrimaryVM_USCORETask = ns2__MakePrimaryVM_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__MakePrimaryVM_USCORETask(soap, &soap_tmp___ns2__MakePrimaryVM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__MakePrimaryVM_USCORETask(soap, &soap_tmp___ns2__MakePrimaryVM_USCORETask, "-ns2:MakePrimaryVM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__MakePrimaryVM_USCORETask(soap, &soap_tmp___ns2__MakePrimaryVM_USCORETask, "-ns2:MakePrimaryVM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__MakePrimaryVM_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__MakePrimaryVM_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__MakePrimaryVM_USCORETaskResponse->soap_get(soap, "ns2:MakePrimaryVM_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__TerminateFaultTolerantVM_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__TerminateFaultTolerantVMRequestType *ns2__TerminateFaultTolerantVM_USCORETask, _ns2__TerminateFaultTolerantVM_USCORETaskResponse *ns2__TerminateFaultTolerantVM_USCORETaskResponse)
{	struct __ns2__TerminateFaultTolerantVM_USCORETask soap_tmp___ns2__TerminateFaultTolerantVM_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__TerminateFaultTolerantVM_USCORETask.ns2__TerminateFaultTolerantVM_USCORETask = ns2__TerminateFaultTolerantVM_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__TerminateFaultTolerantVM_USCORETask(soap, &soap_tmp___ns2__TerminateFaultTolerantVM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__TerminateFaultTolerantVM_USCORETask(soap, &soap_tmp___ns2__TerminateFaultTolerantVM_USCORETask, "-ns2:TerminateFaultTolerantVM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__TerminateFaultTolerantVM_USCORETask(soap, &soap_tmp___ns2__TerminateFaultTolerantVM_USCORETask, "-ns2:TerminateFaultTolerantVM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__TerminateFaultTolerantVM_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__TerminateFaultTolerantVM_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__TerminateFaultTolerantVM_USCORETaskResponse->soap_get(soap, "ns2:TerminateFaultTolerantVM_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__DisableSecondaryVM_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__DisableSecondaryVMRequestType *ns2__DisableSecondaryVM_USCORETask, _ns2__DisableSecondaryVM_USCORETaskResponse *ns2__DisableSecondaryVM_USCORETaskResponse)
{	struct __ns2__DisableSecondaryVM_USCORETask soap_tmp___ns2__DisableSecondaryVM_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__DisableSecondaryVM_USCORETask.ns2__DisableSecondaryVM_USCORETask = ns2__DisableSecondaryVM_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__DisableSecondaryVM_USCORETask(soap, &soap_tmp___ns2__DisableSecondaryVM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__DisableSecondaryVM_USCORETask(soap, &soap_tmp___ns2__DisableSecondaryVM_USCORETask, "-ns2:DisableSecondaryVM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__DisableSecondaryVM_USCORETask(soap, &soap_tmp___ns2__DisableSecondaryVM_USCORETask, "-ns2:DisableSecondaryVM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__DisableSecondaryVM_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__DisableSecondaryVM_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__DisableSecondaryVM_USCORETaskResponse->soap_get(soap, "ns2:DisableSecondaryVM_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__EnableSecondaryVM_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__EnableSecondaryVMRequestType *ns2__EnableSecondaryVM_USCORETask, _ns2__EnableSecondaryVM_USCORETaskResponse *ns2__EnableSecondaryVM_USCORETaskResponse)
{	struct __ns2__EnableSecondaryVM_USCORETask soap_tmp___ns2__EnableSecondaryVM_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__EnableSecondaryVM_USCORETask.ns2__EnableSecondaryVM_USCORETask = ns2__EnableSecondaryVM_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__EnableSecondaryVM_USCORETask(soap, &soap_tmp___ns2__EnableSecondaryVM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__EnableSecondaryVM_USCORETask(soap, &soap_tmp___ns2__EnableSecondaryVM_USCORETask, "-ns2:EnableSecondaryVM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__EnableSecondaryVM_USCORETask(soap, &soap_tmp___ns2__EnableSecondaryVM_USCORETask, "-ns2:EnableSecondaryVM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__EnableSecondaryVM_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__EnableSecondaryVM_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__EnableSecondaryVM_USCORETaskResponse->soap_get(soap, "ns2:EnableSecondaryVM_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__SetDisplayTopology(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__SetDisplayTopologyRequestType *ns2__SetDisplayTopology, _ns2__SetDisplayTopologyResponse *ns2__SetDisplayTopologyResponse)
{	struct __ns2__SetDisplayTopology soap_tmp___ns2__SetDisplayTopology;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__SetDisplayTopology.ns2__SetDisplayTopology = ns2__SetDisplayTopology;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__SetDisplayTopology(soap, &soap_tmp___ns2__SetDisplayTopology);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__SetDisplayTopology(soap, &soap_tmp___ns2__SetDisplayTopology, "-ns2:SetDisplayTopology", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__SetDisplayTopology(soap, &soap_tmp___ns2__SetDisplayTopology, "-ns2:SetDisplayTopology", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__SetDisplayTopologyResponse)
		return soap_closesock(soap);
	ns2__SetDisplayTopologyResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__SetDisplayTopologyResponse->soap_get(soap, "ns2:SetDisplayTopologyResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__StartRecording_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__StartRecordingRequestType *ns2__StartRecording_USCORETask, _ns2__StartRecording_USCORETaskResponse *ns2__StartRecording_USCORETaskResponse)
{	struct __ns2__StartRecording_USCORETask soap_tmp___ns2__StartRecording_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__StartRecording_USCORETask.ns2__StartRecording_USCORETask = ns2__StartRecording_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__StartRecording_USCORETask(soap, &soap_tmp___ns2__StartRecording_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__StartRecording_USCORETask(soap, &soap_tmp___ns2__StartRecording_USCORETask, "-ns2:StartRecording_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__StartRecording_USCORETask(soap, &soap_tmp___ns2__StartRecording_USCORETask, "-ns2:StartRecording_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__StartRecording_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__StartRecording_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__StartRecording_USCORETaskResponse->soap_get(soap, "ns2:StartRecording_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__StopRecording_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__StopRecordingRequestType *ns2__StopRecording_USCORETask, _ns2__StopRecording_USCORETaskResponse *ns2__StopRecording_USCORETaskResponse)
{	struct __ns2__StopRecording_USCORETask soap_tmp___ns2__StopRecording_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__StopRecording_USCORETask.ns2__StopRecording_USCORETask = ns2__StopRecording_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__StopRecording_USCORETask(soap, &soap_tmp___ns2__StopRecording_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__StopRecording_USCORETask(soap, &soap_tmp___ns2__StopRecording_USCORETask, "-ns2:StopRecording_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__StopRecording_USCORETask(soap, &soap_tmp___ns2__StopRecording_USCORETask, "-ns2:StopRecording_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__StopRecording_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__StopRecording_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__StopRecording_USCORETaskResponse->soap_get(soap, "ns2:StopRecording_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__StartReplaying_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__StartReplayingRequestType *ns2__StartReplaying_USCORETask, _ns2__StartReplaying_USCORETaskResponse *ns2__StartReplaying_USCORETaskResponse)
{	struct __ns2__StartReplaying_USCORETask soap_tmp___ns2__StartReplaying_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__StartReplaying_USCORETask.ns2__StartReplaying_USCORETask = ns2__StartReplaying_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__StartReplaying_USCORETask(soap, &soap_tmp___ns2__StartReplaying_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__StartReplaying_USCORETask(soap, &soap_tmp___ns2__StartReplaying_USCORETask, "-ns2:StartReplaying_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__StartReplaying_USCORETask(soap, &soap_tmp___ns2__StartReplaying_USCORETask, "-ns2:StartReplaying_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__StartReplaying_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__StartReplaying_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__StartReplaying_USCORETaskResponse->soap_get(soap, "ns2:StartReplaying_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__StopReplaying_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__StopReplayingRequestType *ns2__StopReplaying_USCORETask, _ns2__StopReplaying_USCORETaskResponse *ns2__StopReplaying_USCORETaskResponse)
{	struct __ns2__StopReplaying_USCORETask soap_tmp___ns2__StopReplaying_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__StopReplaying_USCORETask.ns2__StopReplaying_USCORETask = ns2__StopReplaying_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__StopReplaying_USCORETask(soap, &soap_tmp___ns2__StopReplaying_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__StopReplaying_USCORETask(soap, &soap_tmp___ns2__StopReplaying_USCORETask, "-ns2:StopReplaying_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__StopReplaying_USCORETask(soap, &soap_tmp___ns2__StopReplaying_USCORETask, "-ns2:StopReplaying_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__StopReplaying_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__StopReplaying_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__StopReplaying_USCORETaskResponse->soap_get(soap, "ns2:StopReplaying_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__PromoteDisks_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__PromoteDisksRequestType *ns2__PromoteDisks_USCORETask, _ns2__PromoteDisks_USCORETaskResponse *ns2__PromoteDisks_USCORETaskResponse)
{	struct __ns2__PromoteDisks_USCORETask soap_tmp___ns2__PromoteDisks_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__PromoteDisks_USCORETask.ns2__PromoteDisks_USCORETask = ns2__PromoteDisks_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__PromoteDisks_USCORETask(soap, &soap_tmp___ns2__PromoteDisks_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__PromoteDisks_USCORETask(soap, &soap_tmp___ns2__PromoteDisks_USCORETask, "-ns2:PromoteDisks_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__PromoteDisks_USCORETask(soap, &soap_tmp___ns2__PromoteDisks_USCORETask, "-ns2:PromoteDisks_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__PromoteDisks_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__PromoteDisks_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__PromoteDisks_USCORETaskResponse->soap_get(soap, "ns2:PromoteDisks_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__CreateScreenshot_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__CreateScreenshotRequestType *ns2__CreateScreenshot_USCORETask, _ns2__CreateScreenshot_USCORETaskResponse *ns2__CreateScreenshot_USCORETaskResponse)
{	struct __ns2__CreateScreenshot_USCORETask soap_tmp___ns2__CreateScreenshot_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__CreateScreenshot_USCORETask.ns2__CreateScreenshot_USCORETask = ns2__CreateScreenshot_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__CreateScreenshot_USCORETask(soap, &soap_tmp___ns2__CreateScreenshot_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__CreateScreenshot_USCORETask(soap, &soap_tmp___ns2__CreateScreenshot_USCORETask, "-ns2:CreateScreenshot_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__CreateScreenshot_USCORETask(soap, &soap_tmp___ns2__CreateScreenshot_USCORETask, "-ns2:CreateScreenshot_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CreateScreenshot_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__CreateScreenshot_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CreateScreenshot_USCORETaskResponse->soap_get(soap, "ns2:CreateScreenshot_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryChangedDiskAreas(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryChangedDiskAreasRequestType *ns2__QueryChangedDiskAreas, _ns2__QueryChangedDiskAreasResponse *ns2__QueryChangedDiskAreasResponse)
{	struct __ns2__QueryChangedDiskAreas soap_tmp___ns2__QueryChangedDiskAreas;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryChangedDiskAreas.ns2__QueryChangedDiskAreas = ns2__QueryChangedDiskAreas;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryChangedDiskAreas(soap, &soap_tmp___ns2__QueryChangedDiskAreas);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryChangedDiskAreas(soap, &soap_tmp___ns2__QueryChangedDiskAreas, "-ns2:QueryChangedDiskAreas", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryChangedDiskAreas(soap, &soap_tmp___ns2__QueryChangedDiskAreas, "-ns2:QueryChangedDiskAreas", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryChangedDiskAreasResponse)
		return soap_closesock(soap);
	ns2__QueryChangedDiskAreasResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryChangedDiskAreasResponse->soap_get(soap, "ns2:QueryChangedDiskAreasResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryUnownedFiles(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryUnownedFilesRequestType *ns2__QueryUnownedFiles, _ns2__QueryUnownedFilesResponse *ns2__QueryUnownedFilesResponse)
{	struct __ns2__QueryUnownedFiles soap_tmp___ns2__QueryUnownedFiles;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryUnownedFiles.ns2__QueryUnownedFiles = ns2__QueryUnownedFiles;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryUnownedFiles(soap, &soap_tmp___ns2__QueryUnownedFiles);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryUnownedFiles(soap, &soap_tmp___ns2__QueryUnownedFiles, "-ns2:QueryUnownedFiles", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryUnownedFiles(soap, &soap_tmp___ns2__QueryUnownedFiles, "-ns2:QueryUnownedFiles", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryUnownedFilesResponse)
		return soap_closesock(soap);
	ns2__QueryUnownedFilesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryUnownedFilesResponse->soap_get(soap, "ns2:QueryUnownedFilesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__reloadVirtualMachineFromPath_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__reloadVirtualMachineFromPathRequestType *ns2__reloadVirtualMachineFromPath_USCORETask, _ns2__reloadVirtualMachineFromPath_USCORETaskResponse *ns2__reloadVirtualMachineFromPath_USCORETaskResponse)
{	struct __ns2__reloadVirtualMachineFromPath_USCORETask soap_tmp___ns2__reloadVirtualMachineFromPath_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__reloadVirtualMachineFromPath_USCORETask.ns2__reloadVirtualMachineFromPath_USCORETask = ns2__reloadVirtualMachineFromPath_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__reloadVirtualMachineFromPath_USCORETask(soap, &soap_tmp___ns2__reloadVirtualMachineFromPath_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__reloadVirtualMachineFromPath_USCORETask(soap, &soap_tmp___ns2__reloadVirtualMachineFromPath_USCORETask, "-ns2:reloadVirtualMachineFromPath_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__reloadVirtualMachineFromPath_USCORETask(soap, &soap_tmp___ns2__reloadVirtualMachineFromPath_USCORETask, "-ns2:reloadVirtualMachineFromPath_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__reloadVirtualMachineFromPath_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__reloadVirtualMachineFromPath_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__reloadVirtualMachineFromPath_USCORETaskResponse->soap_get(soap, "ns2:reloadVirtualMachineFromPath_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryFaultToleranceCompatibility(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryFaultToleranceCompatibilityRequestType *ns2__QueryFaultToleranceCompatibility, _ns2__QueryFaultToleranceCompatibilityResponse *ns2__QueryFaultToleranceCompatibilityResponse)
{	struct __ns2__QueryFaultToleranceCompatibility soap_tmp___ns2__QueryFaultToleranceCompatibility;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryFaultToleranceCompatibility.ns2__QueryFaultToleranceCompatibility = ns2__QueryFaultToleranceCompatibility;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryFaultToleranceCompatibility(soap, &soap_tmp___ns2__QueryFaultToleranceCompatibility);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryFaultToleranceCompatibility(soap, &soap_tmp___ns2__QueryFaultToleranceCompatibility, "-ns2:QueryFaultToleranceCompatibility", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryFaultToleranceCompatibility(soap, &soap_tmp___ns2__QueryFaultToleranceCompatibility, "-ns2:QueryFaultToleranceCompatibility", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryFaultToleranceCompatibilityResponse)
		return soap_closesock(soap);
	ns2__QueryFaultToleranceCompatibilityResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryFaultToleranceCompatibilityResponse->soap_get(soap, "ns2:QueryFaultToleranceCompatibilityResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__TerminateVM(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__TerminateVMRequestType *ns2__TerminateVM, _ns2__TerminateVMResponse *ns2__TerminateVMResponse)
{	struct __ns2__TerminateVM soap_tmp___ns2__TerminateVM;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__TerminateVM.ns2__TerminateVM = ns2__TerminateVM;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__TerminateVM(soap, &soap_tmp___ns2__TerminateVM);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__TerminateVM(soap, &soap_tmp___ns2__TerminateVM, "-ns2:TerminateVM", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__TerminateVM(soap, &soap_tmp___ns2__TerminateVM, "-ns2:TerminateVM", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__TerminateVMResponse)
		return soap_closesock(soap);
	ns2__TerminateVMResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__TerminateVMResponse->soap_get(soap, "ns2:TerminateVMResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RemoveAlarm(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RemoveAlarmRequestType *ns2__RemoveAlarm, _ns2__RemoveAlarmResponse *ns2__RemoveAlarmResponse)
{	struct __ns2__RemoveAlarm soap_tmp___ns2__RemoveAlarm;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RemoveAlarm.ns2__RemoveAlarm = ns2__RemoveAlarm;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RemoveAlarm(soap, &soap_tmp___ns2__RemoveAlarm);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RemoveAlarm(soap, &soap_tmp___ns2__RemoveAlarm, "-ns2:RemoveAlarm", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RemoveAlarm(soap, &soap_tmp___ns2__RemoveAlarm, "-ns2:RemoveAlarm", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RemoveAlarmResponse)
		return soap_closesock(soap);
	ns2__RemoveAlarmResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RemoveAlarmResponse->soap_get(soap, "ns2:RemoveAlarmResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ReconfigureAlarm(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ReconfigureAlarmRequestType *ns2__ReconfigureAlarm, _ns2__ReconfigureAlarmResponse *ns2__ReconfigureAlarmResponse)
{	struct __ns2__ReconfigureAlarm soap_tmp___ns2__ReconfigureAlarm;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ReconfigureAlarm.ns2__ReconfigureAlarm = ns2__ReconfigureAlarm;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ReconfigureAlarm(soap, &soap_tmp___ns2__ReconfigureAlarm);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ReconfigureAlarm(soap, &soap_tmp___ns2__ReconfigureAlarm, "-ns2:ReconfigureAlarm", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ReconfigureAlarm(soap, &soap_tmp___ns2__ReconfigureAlarm, "-ns2:ReconfigureAlarm", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ReconfigureAlarmResponse)
		return soap_closesock(soap);
	ns2__ReconfigureAlarmResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ReconfigureAlarmResponse->soap_get(soap, "ns2:ReconfigureAlarmResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__CreateAlarm(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__CreateAlarmRequestType *ns2__CreateAlarm, _ns2__CreateAlarmResponse *ns2__CreateAlarmResponse)
{	struct __ns2__CreateAlarm soap_tmp___ns2__CreateAlarm;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__CreateAlarm.ns2__CreateAlarm = ns2__CreateAlarm;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__CreateAlarm(soap, &soap_tmp___ns2__CreateAlarm);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__CreateAlarm(soap, &soap_tmp___ns2__CreateAlarm, "-ns2:CreateAlarm", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__CreateAlarm(soap, &soap_tmp___ns2__CreateAlarm, "-ns2:CreateAlarm", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CreateAlarmResponse)
		return soap_closesock(soap);
	ns2__CreateAlarmResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CreateAlarmResponse->soap_get(soap, "ns2:CreateAlarmResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__GetAlarm(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__GetAlarmRequestType *ns2__GetAlarm, _ns2__GetAlarmResponse *ns2__GetAlarmResponse)
{	struct __ns2__GetAlarm soap_tmp___ns2__GetAlarm;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__GetAlarm.ns2__GetAlarm = ns2__GetAlarm;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__GetAlarm(soap, &soap_tmp___ns2__GetAlarm);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__GetAlarm(soap, &soap_tmp___ns2__GetAlarm, "-ns2:GetAlarm", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__GetAlarm(soap, &soap_tmp___ns2__GetAlarm, "-ns2:GetAlarm", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__GetAlarmResponse)
		return soap_closesock(soap);
	ns2__GetAlarmResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__GetAlarmResponse->soap_get(soap, "ns2:GetAlarmResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__AreAlarmActionsEnabled(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__AreAlarmActionsEnabledRequestType *ns2__AreAlarmActionsEnabled, _ns2__AreAlarmActionsEnabledResponse *ns2__AreAlarmActionsEnabledResponse)
{	struct __ns2__AreAlarmActionsEnabled soap_tmp___ns2__AreAlarmActionsEnabled;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__AreAlarmActionsEnabled.ns2__AreAlarmActionsEnabled = ns2__AreAlarmActionsEnabled;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__AreAlarmActionsEnabled(soap, &soap_tmp___ns2__AreAlarmActionsEnabled);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__AreAlarmActionsEnabled(soap, &soap_tmp___ns2__AreAlarmActionsEnabled, "-ns2:AreAlarmActionsEnabled", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__AreAlarmActionsEnabled(soap, &soap_tmp___ns2__AreAlarmActionsEnabled, "-ns2:AreAlarmActionsEnabled", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__AreAlarmActionsEnabledResponse)
		return soap_closesock(soap);
	ns2__AreAlarmActionsEnabledResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__AreAlarmActionsEnabledResponse->soap_get(soap, "ns2:AreAlarmActionsEnabledResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__EnableAlarmActions(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__EnableAlarmActionsRequestType *ns2__EnableAlarmActions, _ns2__EnableAlarmActionsResponse *ns2__EnableAlarmActionsResponse)
{	struct __ns2__EnableAlarmActions soap_tmp___ns2__EnableAlarmActions;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__EnableAlarmActions.ns2__EnableAlarmActions = ns2__EnableAlarmActions;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__EnableAlarmActions(soap, &soap_tmp___ns2__EnableAlarmActions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__EnableAlarmActions(soap, &soap_tmp___ns2__EnableAlarmActions, "-ns2:EnableAlarmActions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__EnableAlarmActions(soap, &soap_tmp___ns2__EnableAlarmActions, "-ns2:EnableAlarmActions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__EnableAlarmActionsResponse)
		return soap_closesock(soap);
	ns2__EnableAlarmActionsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__EnableAlarmActionsResponse->soap_get(soap, "ns2:EnableAlarmActionsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__GetAlarmState(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__GetAlarmStateRequestType *ns2__GetAlarmState, _ns2__GetAlarmStateResponse *ns2__GetAlarmStateResponse)
{	struct __ns2__GetAlarmState soap_tmp___ns2__GetAlarmState;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__GetAlarmState.ns2__GetAlarmState = ns2__GetAlarmState;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__GetAlarmState(soap, &soap_tmp___ns2__GetAlarmState);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__GetAlarmState(soap, &soap_tmp___ns2__GetAlarmState, "-ns2:GetAlarmState", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__GetAlarmState(soap, &soap_tmp___ns2__GetAlarmState, "-ns2:GetAlarmState", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__GetAlarmStateResponse)
		return soap_closesock(soap);
	ns2__GetAlarmStateResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__GetAlarmStateResponse->soap_get(soap, "ns2:GetAlarmStateResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__AcknowledgeAlarm(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__AcknowledgeAlarmRequestType *ns2__AcknowledgeAlarm, _ns2__AcknowledgeAlarmResponse *ns2__AcknowledgeAlarmResponse)
{	struct __ns2__AcknowledgeAlarm soap_tmp___ns2__AcknowledgeAlarm;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__AcknowledgeAlarm.ns2__AcknowledgeAlarm = ns2__AcknowledgeAlarm;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__AcknowledgeAlarm(soap, &soap_tmp___ns2__AcknowledgeAlarm);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__AcknowledgeAlarm(soap, &soap_tmp___ns2__AcknowledgeAlarm, "-ns2:AcknowledgeAlarm", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__AcknowledgeAlarm(soap, &soap_tmp___ns2__AcknowledgeAlarm, "-ns2:AcknowledgeAlarm", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__AcknowledgeAlarmResponse)
		return soap_closesock(soap);
	ns2__AcknowledgeAlarmResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__AcknowledgeAlarmResponse->soap_get(soap, "ns2:AcknowledgeAlarmResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ReconfigureDVPortgroup_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ReconfigureDVPortgroupRequestType *ns2__ReconfigureDVPortgroup_USCORETask, _ns2__ReconfigureDVPortgroup_USCORETaskResponse *ns2__ReconfigureDVPortgroup_USCORETaskResponse)
{	struct __ns2__ReconfigureDVPortgroup_USCORETask soap_tmp___ns2__ReconfigureDVPortgroup_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ReconfigureDVPortgroup_USCORETask.ns2__ReconfigureDVPortgroup_USCORETask = ns2__ReconfigureDVPortgroup_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ReconfigureDVPortgroup_USCORETask(soap, &soap_tmp___ns2__ReconfigureDVPortgroup_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ReconfigureDVPortgroup_USCORETask(soap, &soap_tmp___ns2__ReconfigureDVPortgroup_USCORETask, "-ns2:ReconfigureDVPortgroup_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ReconfigureDVPortgroup_USCORETask(soap, &soap_tmp___ns2__ReconfigureDVPortgroup_USCORETask, "-ns2:ReconfigureDVPortgroup_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ReconfigureDVPortgroup_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__ReconfigureDVPortgroup_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ReconfigureDVPortgroup_USCORETaskResponse->soap_get(soap, "ns2:ReconfigureDVPortgroup_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__DVPortgroupRollback_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__DVPortgroupRollbackRequestType *ns2__DVPortgroupRollback_USCORETask, _ns2__DVPortgroupRollback_USCORETaskResponse *ns2__DVPortgroupRollback_USCORETaskResponse)
{	struct __ns2__DVPortgroupRollback_USCORETask soap_tmp___ns2__DVPortgroupRollback_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__DVPortgroupRollback_USCORETask.ns2__DVPortgroupRollback_USCORETask = ns2__DVPortgroupRollback_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__DVPortgroupRollback_USCORETask(soap, &soap_tmp___ns2__DVPortgroupRollback_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__DVPortgroupRollback_USCORETask(soap, &soap_tmp___ns2__DVPortgroupRollback_USCORETask, "-ns2:DVPortgroupRollback_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__DVPortgroupRollback_USCORETask(soap, &soap_tmp___ns2__DVPortgroupRollback_USCORETask, "-ns2:DVPortgroupRollback_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__DVPortgroupRollback_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__DVPortgroupRollback_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__DVPortgroupRollback_USCORETaskResponse->soap_get(soap, "ns2:DVPortgroupRollback_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryAvailableDvsSpec(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryAvailableDvsSpecRequestType *ns2__QueryAvailableDvsSpec, _ns2__QueryAvailableDvsSpecResponse *ns2__QueryAvailableDvsSpecResponse)
{	struct __ns2__QueryAvailableDvsSpec soap_tmp___ns2__QueryAvailableDvsSpec;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryAvailableDvsSpec.ns2__QueryAvailableDvsSpec = ns2__QueryAvailableDvsSpec;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryAvailableDvsSpec(soap, &soap_tmp___ns2__QueryAvailableDvsSpec);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryAvailableDvsSpec(soap, &soap_tmp___ns2__QueryAvailableDvsSpec, "-ns2:QueryAvailableDvsSpec", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryAvailableDvsSpec(soap, &soap_tmp___ns2__QueryAvailableDvsSpec, "-ns2:QueryAvailableDvsSpec", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryAvailableDvsSpecResponse)
		return soap_closesock(soap);
	ns2__QueryAvailableDvsSpecResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryAvailableDvsSpecResponse->soap_get(soap, "ns2:QueryAvailableDvsSpecResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryCompatibleHostForNewDvs(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryCompatibleHostForNewDvsRequestType *ns2__QueryCompatibleHostForNewDvs, _ns2__QueryCompatibleHostForNewDvsResponse *ns2__QueryCompatibleHostForNewDvsResponse)
{	struct __ns2__QueryCompatibleHostForNewDvs soap_tmp___ns2__QueryCompatibleHostForNewDvs;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryCompatibleHostForNewDvs.ns2__QueryCompatibleHostForNewDvs = ns2__QueryCompatibleHostForNewDvs;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryCompatibleHostForNewDvs(soap, &soap_tmp___ns2__QueryCompatibleHostForNewDvs);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryCompatibleHostForNewDvs(soap, &soap_tmp___ns2__QueryCompatibleHostForNewDvs, "-ns2:QueryCompatibleHostForNewDvs", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryCompatibleHostForNewDvs(soap, &soap_tmp___ns2__QueryCompatibleHostForNewDvs, "-ns2:QueryCompatibleHostForNewDvs", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryCompatibleHostForNewDvsResponse)
		return soap_closesock(soap);
	ns2__QueryCompatibleHostForNewDvsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryCompatibleHostForNewDvsResponse->soap_get(soap, "ns2:QueryCompatibleHostForNewDvsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryCompatibleHostForExistingDvs(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryCompatibleHostForExistingDvsRequestType *ns2__QueryCompatibleHostForExistingDvs, _ns2__QueryCompatibleHostForExistingDvsResponse *ns2__QueryCompatibleHostForExistingDvsResponse)
{	struct __ns2__QueryCompatibleHostForExistingDvs soap_tmp___ns2__QueryCompatibleHostForExistingDvs;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryCompatibleHostForExistingDvs.ns2__QueryCompatibleHostForExistingDvs = ns2__QueryCompatibleHostForExistingDvs;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryCompatibleHostForExistingDvs(soap, &soap_tmp___ns2__QueryCompatibleHostForExistingDvs);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryCompatibleHostForExistingDvs(soap, &soap_tmp___ns2__QueryCompatibleHostForExistingDvs, "-ns2:QueryCompatibleHostForExistingDvs", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryCompatibleHostForExistingDvs(soap, &soap_tmp___ns2__QueryCompatibleHostForExistingDvs, "-ns2:QueryCompatibleHostForExistingDvs", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryCompatibleHostForExistingDvsResponse)
		return soap_closesock(soap);
	ns2__QueryCompatibleHostForExistingDvsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryCompatibleHostForExistingDvsResponse->soap_get(soap, "ns2:QueryCompatibleHostForExistingDvsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryDvsCompatibleHostSpec(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryDvsCompatibleHostSpecRequestType *ns2__QueryDvsCompatibleHostSpec, _ns2__QueryDvsCompatibleHostSpecResponse *ns2__QueryDvsCompatibleHostSpecResponse)
{	struct __ns2__QueryDvsCompatibleHostSpec soap_tmp___ns2__QueryDvsCompatibleHostSpec;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryDvsCompatibleHostSpec.ns2__QueryDvsCompatibleHostSpec = ns2__QueryDvsCompatibleHostSpec;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryDvsCompatibleHostSpec(soap, &soap_tmp___ns2__QueryDvsCompatibleHostSpec);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryDvsCompatibleHostSpec(soap, &soap_tmp___ns2__QueryDvsCompatibleHostSpec, "-ns2:QueryDvsCompatibleHostSpec", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryDvsCompatibleHostSpec(soap, &soap_tmp___ns2__QueryDvsCompatibleHostSpec, "-ns2:QueryDvsCompatibleHostSpec", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryDvsCompatibleHostSpecResponse)
		return soap_closesock(soap);
	ns2__QueryDvsCompatibleHostSpecResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryDvsCompatibleHostSpecResponse->soap_get(soap, "ns2:QueryDvsCompatibleHostSpecResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryDvsFeatureCapability(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryDvsFeatureCapabilityRequestType *ns2__QueryDvsFeatureCapability, _ns2__QueryDvsFeatureCapabilityResponse *ns2__QueryDvsFeatureCapabilityResponse)
{	struct __ns2__QueryDvsFeatureCapability soap_tmp___ns2__QueryDvsFeatureCapability;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryDvsFeatureCapability.ns2__QueryDvsFeatureCapability = ns2__QueryDvsFeatureCapability;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryDvsFeatureCapability(soap, &soap_tmp___ns2__QueryDvsFeatureCapability);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryDvsFeatureCapability(soap, &soap_tmp___ns2__QueryDvsFeatureCapability, "-ns2:QueryDvsFeatureCapability", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryDvsFeatureCapability(soap, &soap_tmp___ns2__QueryDvsFeatureCapability, "-ns2:QueryDvsFeatureCapability", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryDvsFeatureCapabilityResponse)
		return soap_closesock(soap);
	ns2__QueryDvsFeatureCapabilityResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryDvsFeatureCapabilityResponse->soap_get(soap, "ns2:QueryDvsFeatureCapabilityResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryDvsByUuid(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryDvsByUuidRequestType *ns2__QueryDvsByUuid, _ns2__QueryDvsByUuidResponse *ns2__QueryDvsByUuidResponse)
{	struct __ns2__QueryDvsByUuid soap_tmp___ns2__QueryDvsByUuid;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryDvsByUuid.ns2__QueryDvsByUuid = ns2__QueryDvsByUuid;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryDvsByUuid(soap, &soap_tmp___ns2__QueryDvsByUuid);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryDvsByUuid(soap, &soap_tmp___ns2__QueryDvsByUuid, "-ns2:QueryDvsByUuid", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryDvsByUuid(soap, &soap_tmp___ns2__QueryDvsByUuid, "-ns2:QueryDvsByUuid", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryDvsByUuidResponse)
		return soap_closesock(soap);
	ns2__QueryDvsByUuidResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryDvsByUuidResponse->soap_get(soap, "ns2:QueryDvsByUuidResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryDvsConfigTarget(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryDvsConfigTargetRequestType *ns2__QueryDvsConfigTarget, _ns2__QueryDvsConfigTargetResponse *ns2__QueryDvsConfigTargetResponse)
{	struct __ns2__QueryDvsConfigTarget soap_tmp___ns2__QueryDvsConfigTarget;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryDvsConfigTarget.ns2__QueryDvsConfigTarget = ns2__QueryDvsConfigTarget;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryDvsConfigTarget(soap, &soap_tmp___ns2__QueryDvsConfigTarget);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryDvsConfigTarget(soap, &soap_tmp___ns2__QueryDvsConfigTarget, "-ns2:QueryDvsConfigTarget", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryDvsConfigTarget(soap, &soap_tmp___ns2__QueryDvsConfigTarget, "-ns2:QueryDvsConfigTarget", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryDvsConfigTargetResponse)
		return soap_closesock(soap);
	ns2__QueryDvsConfigTargetResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryDvsConfigTargetResponse->soap_get(soap, "ns2:QueryDvsConfigTargetResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryDvsCheckCompatibility(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryDvsCheckCompatibilityRequestType *ns2__QueryDvsCheckCompatibility, _ns2__QueryDvsCheckCompatibilityResponse *ns2__QueryDvsCheckCompatibilityResponse)
{	struct __ns2__QueryDvsCheckCompatibility soap_tmp___ns2__QueryDvsCheckCompatibility;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryDvsCheckCompatibility.ns2__QueryDvsCheckCompatibility = ns2__QueryDvsCheckCompatibility;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryDvsCheckCompatibility(soap, &soap_tmp___ns2__QueryDvsCheckCompatibility);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryDvsCheckCompatibility(soap, &soap_tmp___ns2__QueryDvsCheckCompatibility, "-ns2:QueryDvsCheckCompatibility", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryDvsCheckCompatibility(soap, &soap_tmp___ns2__QueryDvsCheckCompatibility, "-ns2:QueryDvsCheckCompatibility", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryDvsCheckCompatibilityResponse)
		return soap_closesock(soap);
	ns2__QueryDvsCheckCompatibilityResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryDvsCheckCompatibilityResponse->soap_get(soap, "ns2:QueryDvsCheckCompatibilityResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RectifyDvsOnHost_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RectifyDvsOnHostRequestType *ns2__RectifyDvsOnHost_USCORETask, _ns2__RectifyDvsOnHost_USCORETaskResponse *ns2__RectifyDvsOnHost_USCORETaskResponse)
{	struct __ns2__RectifyDvsOnHost_USCORETask soap_tmp___ns2__RectifyDvsOnHost_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RectifyDvsOnHost_USCORETask.ns2__RectifyDvsOnHost_USCORETask = ns2__RectifyDvsOnHost_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RectifyDvsOnHost_USCORETask(soap, &soap_tmp___ns2__RectifyDvsOnHost_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RectifyDvsOnHost_USCORETask(soap, &soap_tmp___ns2__RectifyDvsOnHost_USCORETask, "-ns2:RectifyDvsOnHost_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RectifyDvsOnHost_USCORETask(soap, &soap_tmp___ns2__RectifyDvsOnHost_USCORETask, "-ns2:RectifyDvsOnHost_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RectifyDvsOnHost_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__RectifyDvsOnHost_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RectifyDvsOnHost_USCORETaskResponse->soap_get(soap, "ns2:RectifyDvsOnHost_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__DVSManagerExportEntity_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__DVSManagerExportEntityRequestType *ns2__DVSManagerExportEntity_USCORETask, _ns2__DVSManagerExportEntity_USCORETaskResponse *ns2__DVSManagerExportEntity_USCORETaskResponse)
{	struct __ns2__DVSManagerExportEntity_USCORETask soap_tmp___ns2__DVSManagerExportEntity_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__DVSManagerExportEntity_USCORETask.ns2__DVSManagerExportEntity_USCORETask = ns2__DVSManagerExportEntity_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__DVSManagerExportEntity_USCORETask(soap, &soap_tmp___ns2__DVSManagerExportEntity_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__DVSManagerExportEntity_USCORETask(soap, &soap_tmp___ns2__DVSManagerExportEntity_USCORETask, "-ns2:DVSManagerExportEntity_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__DVSManagerExportEntity_USCORETask(soap, &soap_tmp___ns2__DVSManagerExportEntity_USCORETask, "-ns2:DVSManagerExportEntity_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__DVSManagerExportEntity_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__DVSManagerExportEntity_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__DVSManagerExportEntity_USCORETaskResponse->soap_get(soap, "ns2:DVSManagerExportEntity_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__DVSManagerImportEntity_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__DVSManagerImportEntityRequestType *ns2__DVSManagerImportEntity_USCORETask, _ns2__DVSManagerImportEntity_USCORETaskResponse *ns2__DVSManagerImportEntity_USCORETaskResponse)
{	struct __ns2__DVSManagerImportEntity_USCORETask soap_tmp___ns2__DVSManagerImportEntity_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__DVSManagerImportEntity_USCORETask.ns2__DVSManagerImportEntity_USCORETask = ns2__DVSManagerImportEntity_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__DVSManagerImportEntity_USCORETask(soap, &soap_tmp___ns2__DVSManagerImportEntity_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__DVSManagerImportEntity_USCORETask(soap, &soap_tmp___ns2__DVSManagerImportEntity_USCORETask, "-ns2:DVSManagerImportEntity_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__DVSManagerImportEntity_USCORETask(soap, &soap_tmp___ns2__DVSManagerImportEntity_USCORETask, "-ns2:DVSManagerImportEntity_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__DVSManagerImportEntity_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__DVSManagerImportEntity_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__DVSManagerImportEntity_USCORETaskResponse->soap_get(soap, "ns2:DVSManagerImportEntity_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__DVSManagerLookupDvPortGroup(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__DVSManagerLookupDvPortGroupRequestType *ns2__DVSManagerLookupDvPortGroup, _ns2__DVSManagerLookupDvPortGroupResponse *ns2__DVSManagerLookupDvPortGroupResponse)
{	struct __ns2__DVSManagerLookupDvPortGroup soap_tmp___ns2__DVSManagerLookupDvPortGroup;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__DVSManagerLookupDvPortGroup.ns2__DVSManagerLookupDvPortGroup = ns2__DVSManagerLookupDvPortGroup;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__DVSManagerLookupDvPortGroup(soap, &soap_tmp___ns2__DVSManagerLookupDvPortGroup);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__DVSManagerLookupDvPortGroup(soap, &soap_tmp___ns2__DVSManagerLookupDvPortGroup, "-ns2:DVSManagerLookupDvPortGroup", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__DVSManagerLookupDvPortGroup(soap, &soap_tmp___ns2__DVSManagerLookupDvPortGroup, "-ns2:DVSManagerLookupDvPortGroup", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__DVSManagerLookupDvPortGroupResponse)
		return soap_closesock(soap);
	ns2__DVSManagerLookupDvPortGroupResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__DVSManagerLookupDvPortGroupResponse->soap_get(soap, "ns2:DVSManagerLookupDvPortGroupResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UpdateDVSLacpGroupConfig_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UpdateDVSLacpGroupConfigRequestType *ns2__UpdateDVSLacpGroupConfig_USCORETask, _ns2__UpdateDVSLacpGroupConfig_USCORETaskResponse *ns2__UpdateDVSLacpGroupConfig_USCORETaskResponse)
{	struct __ns2__UpdateDVSLacpGroupConfig_USCORETask soap_tmp___ns2__UpdateDVSLacpGroupConfig_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UpdateDVSLacpGroupConfig_USCORETask.ns2__UpdateDVSLacpGroupConfig_USCORETask = ns2__UpdateDVSLacpGroupConfig_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UpdateDVSLacpGroupConfig_USCORETask(soap, &soap_tmp___ns2__UpdateDVSLacpGroupConfig_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UpdateDVSLacpGroupConfig_USCORETask(soap, &soap_tmp___ns2__UpdateDVSLacpGroupConfig_USCORETask, "-ns2:UpdateDVSLacpGroupConfig_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UpdateDVSLacpGroupConfig_USCORETask(soap, &soap_tmp___ns2__UpdateDVSLacpGroupConfig_USCORETask, "-ns2:UpdateDVSLacpGroupConfig_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UpdateDVSLacpGroupConfig_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__UpdateDVSLacpGroupConfig_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UpdateDVSLacpGroupConfig_USCORETaskResponse->soap_get(soap, "ns2:UpdateDVSLacpGroupConfig_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ReadNextEvents(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ReadNextEventsRequestType *ns2__ReadNextEvents, _ns2__ReadNextEventsResponse *ns2__ReadNextEventsResponse)
{	struct __ns2__ReadNextEvents soap_tmp___ns2__ReadNextEvents;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ReadNextEvents.ns2__ReadNextEvents = ns2__ReadNextEvents;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ReadNextEvents(soap, &soap_tmp___ns2__ReadNextEvents);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ReadNextEvents(soap, &soap_tmp___ns2__ReadNextEvents, "-ns2:ReadNextEvents", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ReadNextEvents(soap, &soap_tmp___ns2__ReadNextEvents, "-ns2:ReadNextEvents", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ReadNextEventsResponse)
		return soap_closesock(soap);
	ns2__ReadNextEventsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ReadNextEventsResponse->soap_get(soap, "ns2:ReadNextEventsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ReadPreviousEvents(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ReadPreviousEventsRequestType *ns2__ReadPreviousEvents, _ns2__ReadPreviousEventsResponse *ns2__ReadPreviousEventsResponse)
{	struct __ns2__ReadPreviousEvents soap_tmp___ns2__ReadPreviousEvents;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ReadPreviousEvents.ns2__ReadPreviousEvents = ns2__ReadPreviousEvents;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ReadPreviousEvents(soap, &soap_tmp___ns2__ReadPreviousEvents);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ReadPreviousEvents(soap, &soap_tmp___ns2__ReadPreviousEvents, "-ns2:ReadPreviousEvents", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ReadPreviousEvents(soap, &soap_tmp___ns2__ReadPreviousEvents, "-ns2:ReadPreviousEvents", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ReadPreviousEventsResponse)
		return soap_closesock(soap);
	ns2__ReadPreviousEventsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ReadPreviousEventsResponse->soap_get(soap, "ns2:ReadPreviousEventsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RetrieveArgumentDescription(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RetrieveArgumentDescriptionRequestType *ns2__RetrieveArgumentDescription, _ns2__RetrieveArgumentDescriptionResponse *ns2__RetrieveArgumentDescriptionResponse)
{	struct __ns2__RetrieveArgumentDescription soap_tmp___ns2__RetrieveArgumentDescription;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RetrieveArgumentDescription.ns2__RetrieveArgumentDescription = ns2__RetrieveArgumentDescription;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RetrieveArgumentDescription(soap, &soap_tmp___ns2__RetrieveArgumentDescription);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RetrieveArgumentDescription(soap, &soap_tmp___ns2__RetrieveArgumentDescription, "-ns2:RetrieveArgumentDescription", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RetrieveArgumentDescription(soap, &soap_tmp___ns2__RetrieveArgumentDescription, "-ns2:RetrieveArgumentDescription", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RetrieveArgumentDescriptionResponse)
		return soap_closesock(soap);
	ns2__RetrieveArgumentDescriptionResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RetrieveArgumentDescriptionResponse->soap_get(soap, "ns2:RetrieveArgumentDescriptionResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__CreateCollectorForEvents(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__CreateCollectorForEventsRequestType *ns2__CreateCollectorForEvents, _ns2__CreateCollectorForEventsResponse *ns2__CreateCollectorForEventsResponse)
{	struct __ns2__CreateCollectorForEvents soap_tmp___ns2__CreateCollectorForEvents;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__CreateCollectorForEvents.ns2__CreateCollectorForEvents = ns2__CreateCollectorForEvents;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__CreateCollectorForEvents(soap, &soap_tmp___ns2__CreateCollectorForEvents);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__CreateCollectorForEvents(soap, &soap_tmp___ns2__CreateCollectorForEvents, "-ns2:CreateCollectorForEvents", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__CreateCollectorForEvents(soap, &soap_tmp___ns2__CreateCollectorForEvents, "-ns2:CreateCollectorForEvents", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CreateCollectorForEventsResponse)
		return soap_closesock(soap);
	ns2__CreateCollectorForEventsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CreateCollectorForEventsResponse->soap_get(soap, "ns2:CreateCollectorForEventsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__LogUserEvent(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__LogUserEventRequestType *ns2__LogUserEvent, _ns2__LogUserEventResponse *ns2__LogUserEventResponse)
{	struct __ns2__LogUserEvent soap_tmp___ns2__LogUserEvent;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__LogUserEvent.ns2__LogUserEvent = ns2__LogUserEvent;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__LogUserEvent(soap, &soap_tmp___ns2__LogUserEvent);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__LogUserEvent(soap, &soap_tmp___ns2__LogUserEvent, "-ns2:LogUserEvent", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__LogUserEvent(soap, &soap_tmp___ns2__LogUserEvent, "-ns2:LogUserEvent", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__LogUserEventResponse)
		return soap_closesock(soap);
	ns2__LogUserEventResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__LogUserEventResponse->soap_get(soap, "ns2:LogUserEventResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryEvents(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryEventsRequestType *ns2__QueryEvents, _ns2__QueryEventsResponse *ns2__QueryEventsResponse)
{	struct __ns2__QueryEvents soap_tmp___ns2__QueryEvents;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryEvents.ns2__QueryEvents = ns2__QueryEvents;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryEvents(soap, &soap_tmp___ns2__QueryEvents);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryEvents(soap, &soap_tmp___ns2__QueryEvents, "-ns2:QueryEvents", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryEvents(soap, &soap_tmp___ns2__QueryEvents, "-ns2:QueryEvents", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryEventsResponse)
		return soap_closesock(soap);
	ns2__QueryEventsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryEventsResponse->soap_get(soap, "ns2:QueryEventsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__PostEvent(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__PostEventRequestType *ns2__PostEvent, _ns2__PostEventResponse *ns2__PostEventResponse)
{	struct __ns2__PostEvent soap_tmp___ns2__PostEvent;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__PostEvent.ns2__PostEvent = ns2__PostEvent;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__PostEvent(soap, &soap_tmp___ns2__PostEvent);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__PostEvent(soap, &soap_tmp___ns2__PostEvent, "-ns2:PostEvent", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__PostEvent(soap, &soap_tmp___ns2__PostEvent, "-ns2:PostEvent", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__PostEventResponse)
		return soap_closesock(soap);
	ns2__PostEventResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__PostEventResponse->soap_get(soap, "ns2:PostEventResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__JoinDomain_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__JoinDomainRequestType *ns2__JoinDomain_USCORETask, _ns2__JoinDomain_USCORETaskResponse *ns2__JoinDomain_USCORETaskResponse)
{	struct __ns2__JoinDomain_USCORETask soap_tmp___ns2__JoinDomain_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__JoinDomain_USCORETask.ns2__JoinDomain_USCORETask = ns2__JoinDomain_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__JoinDomain_USCORETask(soap, &soap_tmp___ns2__JoinDomain_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__JoinDomain_USCORETask(soap, &soap_tmp___ns2__JoinDomain_USCORETask, "-ns2:JoinDomain_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__JoinDomain_USCORETask(soap, &soap_tmp___ns2__JoinDomain_USCORETask, "-ns2:JoinDomain_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__JoinDomain_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__JoinDomain_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__JoinDomain_USCORETaskResponse->soap_get(soap, "ns2:JoinDomain_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__JoinDomainWithCAM_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__JoinDomainWithCAMRequestType *ns2__JoinDomainWithCAM_USCORETask, _ns2__JoinDomainWithCAM_USCORETaskResponse *ns2__JoinDomainWithCAM_USCORETaskResponse)
{	struct __ns2__JoinDomainWithCAM_USCORETask soap_tmp___ns2__JoinDomainWithCAM_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__JoinDomainWithCAM_USCORETask.ns2__JoinDomainWithCAM_USCORETask = ns2__JoinDomainWithCAM_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__JoinDomainWithCAM_USCORETask(soap, &soap_tmp___ns2__JoinDomainWithCAM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__JoinDomainWithCAM_USCORETask(soap, &soap_tmp___ns2__JoinDomainWithCAM_USCORETask, "-ns2:JoinDomainWithCAM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__JoinDomainWithCAM_USCORETask(soap, &soap_tmp___ns2__JoinDomainWithCAM_USCORETask, "-ns2:JoinDomainWithCAM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__JoinDomainWithCAM_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__JoinDomainWithCAM_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__JoinDomainWithCAM_USCORETaskResponse->soap_get(soap, "ns2:JoinDomainWithCAM_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ImportCertificateForCAM_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ImportCertificateForCAMRequestType *ns2__ImportCertificateForCAM_USCORETask, _ns2__ImportCertificateForCAM_USCORETaskResponse *ns2__ImportCertificateForCAM_USCORETaskResponse)
{	struct __ns2__ImportCertificateForCAM_USCORETask soap_tmp___ns2__ImportCertificateForCAM_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ImportCertificateForCAM_USCORETask.ns2__ImportCertificateForCAM_USCORETask = ns2__ImportCertificateForCAM_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ImportCertificateForCAM_USCORETask(soap, &soap_tmp___ns2__ImportCertificateForCAM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ImportCertificateForCAM_USCORETask(soap, &soap_tmp___ns2__ImportCertificateForCAM_USCORETask, "-ns2:ImportCertificateForCAM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ImportCertificateForCAM_USCORETask(soap, &soap_tmp___ns2__ImportCertificateForCAM_USCORETask, "-ns2:ImportCertificateForCAM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ImportCertificateForCAM_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__ImportCertificateForCAM_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ImportCertificateForCAM_USCORETaskResponse->soap_get(soap, "ns2:ImportCertificateForCAM_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__LeaveCurrentDomain_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__LeaveCurrentDomainRequestType *ns2__LeaveCurrentDomain_USCORETask, _ns2__LeaveCurrentDomain_USCORETaskResponse *ns2__LeaveCurrentDomain_USCORETaskResponse)
{	struct __ns2__LeaveCurrentDomain_USCORETask soap_tmp___ns2__LeaveCurrentDomain_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__LeaveCurrentDomain_USCORETask.ns2__LeaveCurrentDomain_USCORETask = ns2__LeaveCurrentDomain_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__LeaveCurrentDomain_USCORETask(soap, &soap_tmp___ns2__LeaveCurrentDomain_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__LeaveCurrentDomain_USCORETask(soap, &soap_tmp___ns2__LeaveCurrentDomain_USCORETask, "-ns2:LeaveCurrentDomain_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__LeaveCurrentDomain_USCORETask(soap, &soap_tmp___ns2__LeaveCurrentDomain_USCORETask, "-ns2:LeaveCurrentDomain_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__LeaveCurrentDomain_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__LeaveCurrentDomain_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__LeaveCurrentDomain_USCORETaskResponse->soap_get(soap, "ns2:LeaveCurrentDomain_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ReconfigureAutostart(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ReconfigureAutostartRequestType *ns2__ReconfigureAutostart, _ns2__ReconfigureAutostartResponse *ns2__ReconfigureAutostartResponse)
{	struct __ns2__ReconfigureAutostart soap_tmp___ns2__ReconfigureAutostart;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ReconfigureAutostart.ns2__ReconfigureAutostart = ns2__ReconfigureAutostart;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ReconfigureAutostart(soap, &soap_tmp___ns2__ReconfigureAutostart);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ReconfigureAutostart(soap, &soap_tmp___ns2__ReconfigureAutostart, "-ns2:ReconfigureAutostart", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ReconfigureAutostart(soap, &soap_tmp___ns2__ReconfigureAutostart, "-ns2:ReconfigureAutostart", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ReconfigureAutostartResponse)
		return soap_closesock(soap);
	ns2__ReconfigureAutostartResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ReconfigureAutostartResponse->soap_get(soap, "ns2:ReconfigureAutostartResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__AutoStartPowerOn(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__AutoStartPowerOnRequestType *ns2__AutoStartPowerOn, _ns2__AutoStartPowerOnResponse *ns2__AutoStartPowerOnResponse)
{	struct __ns2__AutoStartPowerOn soap_tmp___ns2__AutoStartPowerOn;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__AutoStartPowerOn.ns2__AutoStartPowerOn = ns2__AutoStartPowerOn;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__AutoStartPowerOn(soap, &soap_tmp___ns2__AutoStartPowerOn);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__AutoStartPowerOn(soap, &soap_tmp___ns2__AutoStartPowerOn, "-ns2:AutoStartPowerOn", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__AutoStartPowerOn(soap, &soap_tmp___ns2__AutoStartPowerOn, "-ns2:AutoStartPowerOn", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__AutoStartPowerOnResponse)
		return soap_closesock(soap);
	ns2__AutoStartPowerOnResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__AutoStartPowerOnResponse->soap_get(soap, "ns2:AutoStartPowerOnResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__AutoStartPowerOff(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__AutoStartPowerOffRequestType *ns2__AutoStartPowerOff, _ns2__AutoStartPowerOffResponse *ns2__AutoStartPowerOffResponse)
{	struct __ns2__AutoStartPowerOff soap_tmp___ns2__AutoStartPowerOff;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__AutoStartPowerOff.ns2__AutoStartPowerOff = ns2__AutoStartPowerOff;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__AutoStartPowerOff(soap, &soap_tmp___ns2__AutoStartPowerOff);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__AutoStartPowerOff(soap, &soap_tmp___ns2__AutoStartPowerOff, "-ns2:AutoStartPowerOff", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__AutoStartPowerOff(soap, &soap_tmp___ns2__AutoStartPowerOff, "-ns2:AutoStartPowerOff", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__AutoStartPowerOffResponse)
		return soap_closesock(soap);
	ns2__AutoStartPowerOffResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__AutoStartPowerOffResponse->soap_get(soap, "ns2:AutoStartPowerOffResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryBootDevices(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryBootDevicesRequestType *ns2__QueryBootDevices, _ns2__QueryBootDevicesResponse *ns2__QueryBootDevicesResponse)
{	struct __ns2__QueryBootDevices soap_tmp___ns2__QueryBootDevices;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryBootDevices.ns2__QueryBootDevices = ns2__QueryBootDevices;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryBootDevices(soap, &soap_tmp___ns2__QueryBootDevices);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryBootDevices(soap, &soap_tmp___ns2__QueryBootDevices, "-ns2:QueryBootDevices", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryBootDevices(soap, &soap_tmp___ns2__QueryBootDevices, "-ns2:QueryBootDevices", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryBootDevicesResponse)
		return soap_closesock(soap);
	ns2__QueryBootDevicesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryBootDevicesResponse->soap_get(soap, "ns2:QueryBootDevicesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UpdateBootDevice(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UpdateBootDeviceRequestType *ns2__UpdateBootDevice, _ns2__UpdateBootDeviceResponse *ns2__UpdateBootDeviceResponse)
{	struct __ns2__UpdateBootDevice soap_tmp___ns2__UpdateBootDevice;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UpdateBootDevice.ns2__UpdateBootDevice = ns2__UpdateBootDevice;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UpdateBootDevice(soap, &soap_tmp___ns2__UpdateBootDevice);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UpdateBootDevice(soap, &soap_tmp___ns2__UpdateBootDevice, "-ns2:UpdateBootDevice", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UpdateBootDevice(soap, &soap_tmp___ns2__UpdateBootDevice, "-ns2:UpdateBootDevice", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UpdateBootDeviceResponse)
		return soap_closesock(soap);
	ns2__UpdateBootDeviceResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UpdateBootDeviceResponse->soap_get(soap, "ns2:UpdateBootDeviceResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ConfigureHostCache_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ConfigureHostCacheRequestType *ns2__ConfigureHostCache_USCORETask, _ns2__ConfigureHostCache_USCORETaskResponse *ns2__ConfigureHostCache_USCORETaskResponse)
{	struct __ns2__ConfigureHostCache_USCORETask soap_tmp___ns2__ConfigureHostCache_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ConfigureHostCache_USCORETask.ns2__ConfigureHostCache_USCORETask = ns2__ConfigureHostCache_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ConfigureHostCache_USCORETask(soap, &soap_tmp___ns2__ConfigureHostCache_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ConfigureHostCache_USCORETask(soap, &soap_tmp___ns2__ConfigureHostCache_USCORETask, "-ns2:ConfigureHostCache_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ConfigureHostCache_USCORETask(soap, &soap_tmp___ns2__ConfigureHostCache_USCORETask, "-ns2:ConfigureHostCache_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ConfigureHostCache_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__ConfigureHostCache_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ConfigureHostCache_USCORETaskResponse->soap_get(soap, "ns2:ConfigureHostCache_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__EnableHyperThreading(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__EnableHyperThreadingRequestType *ns2__EnableHyperThreading, _ns2__EnableHyperThreadingResponse *ns2__EnableHyperThreadingResponse)
{	struct __ns2__EnableHyperThreading soap_tmp___ns2__EnableHyperThreading;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__EnableHyperThreading.ns2__EnableHyperThreading = ns2__EnableHyperThreading;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__EnableHyperThreading(soap, &soap_tmp___ns2__EnableHyperThreading);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__EnableHyperThreading(soap, &soap_tmp___ns2__EnableHyperThreading, "-ns2:EnableHyperThreading", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__EnableHyperThreading(soap, &soap_tmp___ns2__EnableHyperThreading, "-ns2:EnableHyperThreading", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__EnableHyperThreadingResponse)
		return soap_closesock(soap);
	ns2__EnableHyperThreadingResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__EnableHyperThreadingResponse->soap_get(soap, "ns2:EnableHyperThreadingResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__DisableHyperThreading(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__DisableHyperThreadingRequestType *ns2__DisableHyperThreading, _ns2__DisableHyperThreadingResponse *ns2__DisableHyperThreadingResponse)
{	struct __ns2__DisableHyperThreading soap_tmp___ns2__DisableHyperThreading;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__DisableHyperThreading.ns2__DisableHyperThreading = ns2__DisableHyperThreading;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__DisableHyperThreading(soap, &soap_tmp___ns2__DisableHyperThreading);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__DisableHyperThreading(soap, &soap_tmp___ns2__DisableHyperThreading, "-ns2:DisableHyperThreading", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__DisableHyperThreading(soap, &soap_tmp___ns2__DisableHyperThreading, "-ns2:DisableHyperThreading", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__DisableHyperThreadingResponse)
		return soap_closesock(soap);
	ns2__DisableHyperThreadingResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__DisableHyperThreadingResponse->soap_get(soap, "ns2:DisableHyperThreadingResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__SearchDatastore_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__SearchDatastoreRequestType *ns2__SearchDatastore_USCORETask, _ns2__SearchDatastore_USCORETaskResponse *ns2__SearchDatastore_USCORETaskResponse)
{	struct __ns2__SearchDatastore_USCORETask soap_tmp___ns2__SearchDatastore_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__SearchDatastore_USCORETask.ns2__SearchDatastore_USCORETask = ns2__SearchDatastore_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__SearchDatastore_USCORETask(soap, &soap_tmp___ns2__SearchDatastore_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__SearchDatastore_USCORETask(soap, &soap_tmp___ns2__SearchDatastore_USCORETask, "-ns2:SearchDatastore_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__SearchDatastore_USCORETask(soap, &soap_tmp___ns2__SearchDatastore_USCORETask, "-ns2:SearchDatastore_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__SearchDatastore_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__SearchDatastore_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__SearchDatastore_USCORETaskResponse->soap_get(soap, "ns2:SearchDatastore_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__SearchDatastoreSubFolders_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__SearchDatastoreSubFoldersRequestType *ns2__SearchDatastoreSubFolders_USCORETask, _ns2__SearchDatastoreSubFolders_USCORETaskResponse *ns2__SearchDatastoreSubFolders_USCORETaskResponse)
{	struct __ns2__SearchDatastoreSubFolders_USCORETask soap_tmp___ns2__SearchDatastoreSubFolders_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__SearchDatastoreSubFolders_USCORETask.ns2__SearchDatastoreSubFolders_USCORETask = ns2__SearchDatastoreSubFolders_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__SearchDatastoreSubFolders_USCORETask(soap, &soap_tmp___ns2__SearchDatastoreSubFolders_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__SearchDatastoreSubFolders_USCORETask(soap, &soap_tmp___ns2__SearchDatastoreSubFolders_USCORETask, "-ns2:SearchDatastoreSubFolders_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__SearchDatastoreSubFolders_USCORETask(soap, &soap_tmp___ns2__SearchDatastoreSubFolders_USCORETask, "-ns2:SearchDatastoreSubFolders_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__SearchDatastoreSubFolders_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__SearchDatastoreSubFolders_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__SearchDatastoreSubFolders_USCORETaskResponse->soap_get(soap, "ns2:SearchDatastoreSubFolders_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__DeleteFile(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__DeleteFileRequestType *ns2__DeleteFile, _ns2__DeleteFileResponse *ns2__DeleteFileResponse)
{	struct __ns2__DeleteFile soap_tmp___ns2__DeleteFile;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__DeleteFile.ns2__DeleteFile = ns2__DeleteFile;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__DeleteFile(soap, &soap_tmp___ns2__DeleteFile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__DeleteFile(soap, &soap_tmp___ns2__DeleteFile, "-ns2:DeleteFile", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__DeleteFile(soap, &soap_tmp___ns2__DeleteFile, "-ns2:DeleteFile", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__DeleteFileResponse)
		return soap_closesock(soap);
	ns2__DeleteFileResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__DeleteFileResponse->soap_get(soap, "ns2:DeleteFileResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UpdateLocalSwapDatastore(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UpdateLocalSwapDatastoreRequestType *ns2__UpdateLocalSwapDatastore, _ns2__UpdateLocalSwapDatastoreResponse *ns2__UpdateLocalSwapDatastoreResponse)
{	struct __ns2__UpdateLocalSwapDatastore soap_tmp___ns2__UpdateLocalSwapDatastore;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UpdateLocalSwapDatastore.ns2__UpdateLocalSwapDatastore = ns2__UpdateLocalSwapDatastore;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UpdateLocalSwapDatastore(soap, &soap_tmp___ns2__UpdateLocalSwapDatastore);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UpdateLocalSwapDatastore(soap, &soap_tmp___ns2__UpdateLocalSwapDatastore, "-ns2:UpdateLocalSwapDatastore", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UpdateLocalSwapDatastore(soap, &soap_tmp___ns2__UpdateLocalSwapDatastore, "-ns2:UpdateLocalSwapDatastore", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UpdateLocalSwapDatastoreResponse)
		return soap_closesock(soap);
	ns2__UpdateLocalSwapDatastoreResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UpdateLocalSwapDatastoreResponse->soap_get(soap, "ns2:UpdateLocalSwapDatastoreResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryAvailableDisksForVmfs(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryAvailableDisksForVmfsRequestType *ns2__QueryAvailableDisksForVmfs, _ns2__QueryAvailableDisksForVmfsResponse *ns2__QueryAvailableDisksForVmfsResponse)
{	struct __ns2__QueryAvailableDisksForVmfs soap_tmp___ns2__QueryAvailableDisksForVmfs;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryAvailableDisksForVmfs.ns2__QueryAvailableDisksForVmfs = ns2__QueryAvailableDisksForVmfs;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryAvailableDisksForVmfs(soap, &soap_tmp___ns2__QueryAvailableDisksForVmfs);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryAvailableDisksForVmfs(soap, &soap_tmp___ns2__QueryAvailableDisksForVmfs, "-ns2:QueryAvailableDisksForVmfs", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryAvailableDisksForVmfs(soap, &soap_tmp___ns2__QueryAvailableDisksForVmfs, "-ns2:QueryAvailableDisksForVmfs", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryAvailableDisksForVmfsResponse)
		return soap_closesock(soap);
	ns2__QueryAvailableDisksForVmfsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryAvailableDisksForVmfsResponse->soap_get(soap, "ns2:QueryAvailableDisksForVmfsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryVmfsDatastoreCreateOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryVmfsDatastoreCreateOptionsRequestType *ns2__QueryVmfsDatastoreCreateOptions, _ns2__QueryVmfsDatastoreCreateOptionsResponse *ns2__QueryVmfsDatastoreCreateOptionsResponse)
{	struct __ns2__QueryVmfsDatastoreCreateOptions soap_tmp___ns2__QueryVmfsDatastoreCreateOptions;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryVmfsDatastoreCreateOptions.ns2__QueryVmfsDatastoreCreateOptions = ns2__QueryVmfsDatastoreCreateOptions;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryVmfsDatastoreCreateOptions(soap, &soap_tmp___ns2__QueryVmfsDatastoreCreateOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryVmfsDatastoreCreateOptions(soap, &soap_tmp___ns2__QueryVmfsDatastoreCreateOptions, "-ns2:QueryVmfsDatastoreCreateOptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryVmfsDatastoreCreateOptions(soap, &soap_tmp___ns2__QueryVmfsDatastoreCreateOptions, "-ns2:QueryVmfsDatastoreCreateOptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryVmfsDatastoreCreateOptionsResponse)
		return soap_closesock(soap);
	ns2__QueryVmfsDatastoreCreateOptionsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryVmfsDatastoreCreateOptionsResponse->soap_get(soap, "ns2:QueryVmfsDatastoreCreateOptionsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__CreateVmfsDatastore(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__CreateVmfsDatastoreRequestType *ns2__CreateVmfsDatastore, _ns2__CreateVmfsDatastoreResponse *ns2__CreateVmfsDatastoreResponse)
{	struct __ns2__CreateVmfsDatastore soap_tmp___ns2__CreateVmfsDatastore;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__CreateVmfsDatastore.ns2__CreateVmfsDatastore = ns2__CreateVmfsDatastore;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__CreateVmfsDatastore(soap, &soap_tmp___ns2__CreateVmfsDatastore);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__CreateVmfsDatastore(soap, &soap_tmp___ns2__CreateVmfsDatastore, "-ns2:CreateVmfsDatastore", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__CreateVmfsDatastore(soap, &soap_tmp___ns2__CreateVmfsDatastore, "-ns2:CreateVmfsDatastore", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CreateVmfsDatastoreResponse)
		return soap_closesock(soap);
	ns2__CreateVmfsDatastoreResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CreateVmfsDatastoreResponse->soap_get(soap, "ns2:CreateVmfsDatastoreResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryVmfsDatastoreExtendOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryVmfsDatastoreExtendOptionsRequestType *ns2__QueryVmfsDatastoreExtendOptions, _ns2__QueryVmfsDatastoreExtendOptionsResponse *ns2__QueryVmfsDatastoreExtendOptionsResponse)
{	struct __ns2__QueryVmfsDatastoreExtendOptions soap_tmp___ns2__QueryVmfsDatastoreExtendOptions;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryVmfsDatastoreExtendOptions.ns2__QueryVmfsDatastoreExtendOptions = ns2__QueryVmfsDatastoreExtendOptions;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryVmfsDatastoreExtendOptions(soap, &soap_tmp___ns2__QueryVmfsDatastoreExtendOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryVmfsDatastoreExtendOptions(soap, &soap_tmp___ns2__QueryVmfsDatastoreExtendOptions, "-ns2:QueryVmfsDatastoreExtendOptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryVmfsDatastoreExtendOptions(soap, &soap_tmp___ns2__QueryVmfsDatastoreExtendOptions, "-ns2:QueryVmfsDatastoreExtendOptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryVmfsDatastoreExtendOptionsResponse)
		return soap_closesock(soap);
	ns2__QueryVmfsDatastoreExtendOptionsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryVmfsDatastoreExtendOptionsResponse->soap_get(soap, "ns2:QueryVmfsDatastoreExtendOptionsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryVmfsDatastoreExpandOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryVmfsDatastoreExpandOptionsRequestType *ns2__QueryVmfsDatastoreExpandOptions, _ns2__QueryVmfsDatastoreExpandOptionsResponse *ns2__QueryVmfsDatastoreExpandOptionsResponse)
{	struct __ns2__QueryVmfsDatastoreExpandOptions soap_tmp___ns2__QueryVmfsDatastoreExpandOptions;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryVmfsDatastoreExpandOptions.ns2__QueryVmfsDatastoreExpandOptions = ns2__QueryVmfsDatastoreExpandOptions;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryVmfsDatastoreExpandOptions(soap, &soap_tmp___ns2__QueryVmfsDatastoreExpandOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryVmfsDatastoreExpandOptions(soap, &soap_tmp___ns2__QueryVmfsDatastoreExpandOptions, "-ns2:QueryVmfsDatastoreExpandOptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryVmfsDatastoreExpandOptions(soap, &soap_tmp___ns2__QueryVmfsDatastoreExpandOptions, "-ns2:QueryVmfsDatastoreExpandOptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryVmfsDatastoreExpandOptionsResponse)
		return soap_closesock(soap);
	ns2__QueryVmfsDatastoreExpandOptionsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryVmfsDatastoreExpandOptionsResponse->soap_get(soap, "ns2:QueryVmfsDatastoreExpandOptionsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ExtendVmfsDatastore(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ExtendVmfsDatastoreRequestType *ns2__ExtendVmfsDatastore, _ns2__ExtendVmfsDatastoreResponse *ns2__ExtendVmfsDatastoreResponse)
{	struct __ns2__ExtendVmfsDatastore soap_tmp___ns2__ExtendVmfsDatastore;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ExtendVmfsDatastore.ns2__ExtendVmfsDatastore = ns2__ExtendVmfsDatastore;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ExtendVmfsDatastore(soap, &soap_tmp___ns2__ExtendVmfsDatastore);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ExtendVmfsDatastore(soap, &soap_tmp___ns2__ExtendVmfsDatastore, "-ns2:ExtendVmfsDatastore", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ExtendVmfsDatastore(soap, &soap_tmp___ns2__ExtendVmfsDatastore, "-ns2:ExtendVmfsDatastore", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ExtendVmfsDatastoreResponse)
		return soap_closesock(soap);
	ns2__ExtendVmfsDatastoreResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ExtendVmfsDatastoreResponse->soap_get(soap, "ns2:ExtendVmfsDatastoreResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ExpandVmfsDatastore(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ExpandVmfsDatastoreRequestType *ns2__ExpandVmfsDatastore, _ns2__ExpandVmfsDatastoreResponse *ns2__ExpandVmfsDatastoreResponse)
{	struct __ns2__ExpandVmfsDatastore soap_tmp___ns2__ExpandVmfsDatastore;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ExpandVmfsDatastore.ns2__ExpandVmfsDatastore = ns2__ExpandVmfsDatastore;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ExpandVmfsDatastore(soap, &soap_tmp___ns2__ExpandVmfsDatastore);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ExpandVmfsDatastore(soap, &soap_tmp___ns2__ExpandVmfsDatastore, "-ns2:ExpandVmfsDatastore", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ExpandVmfsDatastore(soap, &soap_tmp___ns2__ExpandVmfsDatastore, "-ns2:ExpandVmfsDatastore", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ExpandVmfsDatastoreResponse)
		return soap_closesock(soap);
	ns2__ExpandVmfsDatastoreResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ExpandVmfsDatastoreResponse->soap_get(soap, "ns2:ExpandVmfsDatastoreResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__CreateNasDatastore(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__CreateNasDatastoreRequestType *ns2__CreateNasDatastore, _ns2__CreateNasDatastoreResponse *ns2__CreateNasDatastoreResponse)
{	struct __ns2__CreateNasDatastore soap_tmp___ns2__CreateNasDatastore;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__CreateNasDatastore.ns2__CreateNasDatastore = ns2__CreateNasDatastore;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__CreateNasDatastore(soap, &soap_tmp___ns2__CreateNasDatastore);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__CreateNasDatastore(soap, &soap_tmp___ns2__CreateNasDatastore, "-ns2:CreateNasDatastore", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__CreateNasDatastore(soap, &soap_tmp___ns2__CreateNasDatastore, "-ns2:CreateNasDatastore", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CreateNasDatastoreResponse)
		return soap_closesock(soap);
	ns2__CreateNasDatastoreResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CreateNasDatastoreResponse->soap_get(soap, "ns2:CreateNasDatastoreResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__CreateLocalDatastore(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__CreateLocalDatastoreRequestType *ns2__CreateLocalDatastore, _ns2__CreateLocalDatastoreResponse *ns2__CreateLocalDatastoreResponse)
{	struct __ns2__CreateLocalDatastore soap_tmp___ns2__CreateLocalDatastore;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__CreateLocalDatastore.ns2__CreateLocalDatastore = ns2__CreateLocalDatastore;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__CreateLocalDatastore(soap, &soap_tmp___ns2__CreateLocalDatastore);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__CreateLocalDatastore(soap, &soap_tmp___ns2__CreateLocalDatastore, "-ns2:CreateLocalDatastore", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__CreateLocalDatastore(soap, &soap_tmp___ns2__CreateLocalDatastore, "-ns2:CreateLocalDatastore", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CreateLocalDatastoreResponse)
		return soap_closesock(soap);
	ns2__CreateLocalDatastoreResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CreateLocalDatastoreResponse->soap_get(soap, "ns2:CreateLocalDatastoreResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RemoveDatastore(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RemoveDatastoreRequestType *ns2__RemoveDatastore, _ns2__RemoveDatastoreResponse *ns2__RemoveDatastoreResponse)
{	struct __ns2__RemoveDatastore soap_tmp___ns2__RemoveDatastore;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RemoveDatastore.ns2__RemoveDatastore = ns2__RemoveDatastore;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RemoveDatastore(soap, &soap_tmp___ns2__RemoveDatastore);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RemoveDatastore(soap, &soap_tmp___ns2__RemoveDatastore, "-ns2:RemoveDatastore", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RemoveDatastore(soap, &soap_tmp___ns2__RemoveDatastore, "-ns2:RemoveDatastore", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RemoveDatastoreResponse)
		return soap_closesock(soap);
	ns2__RemoveDatastoreResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RemoveDatastoreResponse->soap_get(soap, "ns2:RemoveDatastoreResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ConfigureDatastorePrincipal(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ConfigureDatastorePrincipalRequestType *ns2__ConfigureDatastorePrincipal, _ns2__ConfigureDatastorePrincipalResponse *ns2__ConfigureDatastorePrincipalResponse)
{	struct __ns2__ConfigureDatastorePrincipal soap_tmp___ns2__ConfigureDatastorePrincipal;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ConfigureDatastorePrincipal.ns2__ConfigureDatastorePrincipal = ns2__ConfigureDatastorePrincipal;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ConfigureDatastorePrincipal(soap, &soap_tmp___ns2__ConfigureDatastorePrincipal);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ConfigureDatastorePrincipal(soap, &soap_tmp___ns2__ConfigureDatastorePrincipal, "-ns2:ConfigureDatastorePrincipal", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ConfigureDatastorePrincipal(soap, &soap_tmp___ns2__ConfigureDatastorePrincipal, "-ns2:ConfigureDatastorePrincipal", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ConfigureDatastorePrincipalResponse)
		return soap_closesock(soap);
	ns2__ConfigureDatastorePrincipalResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ConfigureDatastorePrincipalResponse->soap_get(soap, "ns2:ConfigureDatastorePrincipalResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryUnresolvedVmfsVolumes(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryUnresolvedVmfsVolumesRequestType *ns2__QueryUnresolvedVmfsVolumes, _ns2__QueryUnresolvedVmfsVolumesResponse *ns2__QueryUnresolvedVmfsVolumesResponse)
{	struct __ns2__QueryUnresolvedVmfsVolumes soap_tmp___ns2__QueryUnresolvedVmfsVolumes;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryUnresolvedVmfsVolumes.ns2__QueryUnresolvedVmfsVolumes = ns2__QueryUnresolvedVmfsVolumes;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryUnresolvedVmfsVolumes(soap, &soap_tmp___ns2__QueryUnresolvedVmfsVolumes);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryUnresolvedVmfsVolumes(soap, &soap_tmp___ns2__QueryUnresolvedVmfsVolumes, "-ns2:QueryUnresolvedVmfsVolumes", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryUnresolvedVmfsVolumes(soap, &soap_tmp___ns2__QueryUnresolvedVmfsVolumes, "-ns2:QueryUnresolvedVmfsVolumes", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryUnresolvedVmfsVolumesResponse)
		return soap_closesock(soap);
	ns2__QueryUnresolvedVmfsVolumesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryUnresolvedVmfsVolumesResponse->soap_get(soap, "ns2:QueryUnresolvedVmfsVolumesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ResignatureUnresolvedVmfsVolume_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ResignatureUnresolvedVmfsVolumeRequestType *ns2__ResignatureUnresolvedVmfsVolume_USCORETask, _ns2__ResignatureUnresolvedVmfsVolume_USCORETaskResponse *ns2__ResignatureUnresolvedVmfsVolume_USCORETaskResponse)
{	struct __ns2__ResignatureUnresolvedVmfsVolume_USCORETask soap_tmp___ns2__ResignatureUnresolvedVmfsVolume_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ResignatureUnresolvedVmfsVolume_USCORETask.ns2__ResignatureUnresolvedVmfsVolume_USCORETask = ns2__ResignatureUnresolvedVmfsVolume_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ResignatureUnresolvedVmfsVolume_USCORETask(soap, &soap_tmp___ns2__ResignatureUnresolvedVmfsVolume_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ResignatureUnresolvedVmfsVolume_USCORETask(soap, &soap_tmp___ns2__ResignatureUnresolvedVmfsVolume_USCORETask, "-ns2:ResignatureUnresolvedVmfsVolume_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ResignatureUnresolvedVmfsVolume_USCORETask(soap, &soap_tmp___ns2__ResignatureUnresolvedVmfsVolume_USCORETask, "-ns2:ResignatureUnresolvedVmfsVolume_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ResignatureUnresolvedVmfsVolume_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__ResignatureUnresolvedVmfsVolume_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ResignatureUnresolvedVmfsVolume_USCORETaskResponse->soap_get(soap, "ns2:ResignatureUnresolvedVmfsVolume_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UpdateDateTimeConfig(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UpdateDateTimeConfigRequestType *ns2__UpdateDateTimeConfig, _ns2__UpdateDateTimeConfigResponse *ns2__UpdateDateTimeConfigResponse)
{	struct __ns2__UpdateDateTimeConfig soap_tmp___ns2__UpdateDateTimeConfig;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UpdateDateTimeConfig.ns2__UpdateDateTimeConfig = ns2__UpdateDateTimeConfig;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UpdateDateTimeConfig(soap, &soap_tmp___ns2__UpdateDateTimeConfig);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UpdateDateTimeConfig(soap, &soap_tmp___ns2__UpdateDateTimeConfig, "-ns2:UpdateDateTimeConfig", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UpdateDateTimeConfig(soap, &soap_tmp___ns2__UpdateDateTimeConfig, "-ns2:UpdateDateTimeConfig", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UpdateDateTimeConfigResponse)
		return soap_closesock(soap);
	ns2__UpdateDateTimeConfigResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UpdateDateTimeConfigResponse->soap_get(soap, "ns2:UpdateDateTimeConfigResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryAvailableTimeZones(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryAvailableTimeZonesRequestType *ns2__QueryAvailableTimeZones, _ns2__QueryAvailableTimeZonesResponse *ns2__QueryAvailableTimeZonesResponse)
{	struct __ns2__QueryAvailableTimeZones soap_tmp___ns2__QueryAvailableTimeZones;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryAvailableTimeZones.ns2__QueryAvailableTimeZones = ns2__QueryAvailableTimeZones;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryAvailableTimeZones(soap, &soap_tmp___ns2__QueryAvailableTimeZones);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryAvailableTimeZones(soap, &soap_tmp___ns2__QueryAvailableTimeZones, "-ns2:QueryAvailableTimeZones", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryAvailableTimeZones(soap, &soap_tmp___ns2__QueryAvailableTimeZones, "-ns2:QueryAvailableTimeZones", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryAvailableTimeZonesResponse)
		return soap_closesock(soap);
	ns2__QueryAvailableTimeZonesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryAvailableTimeZonesResponse->soap_get(soap, "ns2:QueryAvailableTimeZonesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryDateTime(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryDateTimeRequestType *ns2__QueryDateTime, _ns2__QueryDateTimeResponse *ns2__QueryDateTimeResponse)
{	struct __ns2__QueryDateTime soap_tmp___ns2__QueryDateTime;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryDateTime.ns2__QueryDateTime = ns2__QueryDateTime;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryDateTime(soap, &soap_tmp___ns2__QueryDateTime);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryDateTime(soap, &soap_tmp___ns2__QueryDateTime, "-ns2:QueryDateTime", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryDateTime(soap, &soap_tmp___ns2__QueryDateTime, "-ns2:QueryDateTime", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryDateTimeResponse)
		return soap_closesock(soap);
	ns2__QueryDateTimeResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryDateTimeResponse->soap_get(soap, "ns2:QueryDateTimeResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UpdateDateTime(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UpdateDateTimeRequestType *ns2__UpdateDateTime, _ns2__UpdateDateTimeResponse *ns2__UpdateDateTimeResponse)
{	struct __ns2__UpdateDateTime soap_tmp___ns2__UpdateDateTime;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UpdateDateTime.ns2__UpdateDateTime = ns2__UpdateDateTime;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UpdateDateTime(soap, &soap_tmp___ns2__UpdateDateTime);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UpdateDateTime(soap, &soap_tmp___ns2__UpdateDateTime, "-ns2:UpdateDateTime", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UpdateDateTime(soap, &soap_tmp___ns2__UpdateDateTime, "-ns2:UpdateDateTime", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UpdateDateTimeResponse)
		return soap_closesock(soap);
	ns2__UpdateDateTimeResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UpdateDateTimeResponse->soap_get(soap, "ns2:UpdateDateTimeResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RefreshDateTimeSystem(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RefreshDateTimeSystemRequestType *ns2__RefreshDateTimeSystem, _ns2__RefreshDateTimeSystemResponse *ns2__RefreshDateTimeSystemResponse)
{	struct __ns2__RefreshDateTimeSystem soap_tmp___ns2__RefreshDateTimeSystem;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RefreshDateTimeSystem.ns2__RefreshDateTimeSystem = ns2__RefreshDateTimeSystem;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RefreshDateTimeSystem(soap, &soap_tmp___ns2__RefreshDateTimeSystem);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RefreshDateTimeSystem(soap, &soap_tmp___ns2__RefreshDateTimeSystem, "-ns2:RefreshDateTimeSystem", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RefreshDateTimeSystem(soap, &soap_tmp___ns2__RefreshDateTimeSystem, "-ns2:RefreshDateTimeSystem", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RefreshDateTimeSystemResponse)
		return soap_closesock(soap);
	ns2__RefreshDateTimeSystemResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RefreshDateTimeSystemResponse->soap_get(soap, "ns2:RefreshDateTimeSystemResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryAvailablePartition(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryAvailablePartitionRequestType *ns2__QueryAvailablePartition, _ns2__QueryAvailablePartitionResponse *ns2__QueryAvailablePartitionResponse)
{	struct __ns2__QueryAvailablePartition soap_tmp___ns2__QueryAvailablePartition;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryAvailablePartition.ns2__QueryAvailablePartition = ns2__QueryAvailablePartition;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryAvailablePartition(soap, &soap_tmp___ns2__QueryAvailablePartition);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryAvailablePartition(soap, &soap_tmp___ns2__QueryAvailablePartition, "-ns2:QueryAvailablePartition", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryAvailablePartition(soap, &soap_tmp___ns2__QueryAvailablePartition, "-ns2:QueryAvailablePartition", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryAvailablePartitionResponse)
		return soap_closesock(soap);
	ns2__QueryAvailablePartitionResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryAvailablePartitionResponse->soap_get(soap, "ns2:QueryAvailablePartitionResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__SelectActivePartition(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__SelectActivePartitionRequestType *ns2__SelectActivePartition, _ns2__SelectActivePartitionResponse *ns2__SelectActivePartitionResponse)
{	struct __ns2__SelectActivePartition soap_tmp___ns2__SelectActivePartition;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__SelectActivePartition.ns2__SelectActivePartition = ns2__SelectActivePartition;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__SelectActivePartition(soap, &soap_tmp___ns2__SelectActivePartition);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__SelectActivePartition(soap, &soap_tmp___ns2__SelectActivePartition, "-ns2:SelectActivePartition", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__SelectActivePartition(soap, &soap_tmp___ns2__SelectActivePartition, "-ns2:SelectActivePartition", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__SelectActivePartitionResponse)
		return soap_closesock(soap);
	ns2__SelectActivePartitionResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__SelectActivePartitionResponse->soap_get(soap, "ns2:SelectActivePartitionResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryPartitionCreateOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryPartitionCreateOptionsRequestType *ns2__QueryPartitionCreateOptions, _ns2__QueryPartitionCreateOptionsResponse *ns2__QueryPartitionCreateOptionsResponse)
{	struct __ns2__QueryPartitionCreateOptions soap_tmp___ns2__QueryPartitionCreateOptions;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryPartitionCreateOptions.ns2__QueryPartitionCreateOptions = ns2__QueryPartitionCreateOptions;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryPartitionCreateOptions(soap, &soap_tmp___ns2__QueryPartitionCreateOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryPartitionCreateOptions(soap, &soap_tmp___ns2__QueryPartitionCreateOptions, "-ns2:QueryPartitionCreateOptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryPartitionCreateOptions(soap, &soap_tmp___ns2__QueryPartitionCreateOptions, "-ns2:QueryPartitionCreateOptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryPartitionCreateOptionsResponse)
		return soap_closesock(soap);
	ns2__QueryPartitionCreateOptionsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryPartitionCreateOptionsResponse->soap_get(soap, "ns2:QueryPartitionCreateOptionsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryPartitionCreateDesc(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryPartitionCreateDescRequestType *ns2__QueryPartitionCreateDesc, _ns2__QueryPartitionCreateDescResponse *ns2__QueryPartitionCreateDescResponse)
{	struct __ns2__QueryPartitionCreateDesc soap_tmp___ns2__QueryPartitionCreateDesc;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryPartitionCreateDesc.ns2__QueryPartitionCreateDesc = ns2__QueryPartitionCreateDesc;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryPartitionCreateDesc(soap, &soap_tmp___ns2__QueryPartitionCreateDesc);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryPartitionCreateDesc(soap, &soap_tmp___ns2__QueryPartitionCreateDesc, "-ns2:QueryPartitionCreateDesc", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryPartitionCreateDesc(soap, &soap_tmp___ns2__QueryPartitionCreateDesc, "-ns2:QueryPartitionCreateDesc", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryPartitionCreateDescResponse)
		return soap_closesock(soap);
	ns2__QueryPartitionCreateDescResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryPartitionCreateDescResponse->soap_get(soap, "ns2:QueryPartitionCreateDescResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__CreateDiagnosticPartition(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__CreateDiagnosticPartitionRequestType *ns2__CreateDiagnosticPartition, _ns2__CreateDiagnosticPartitionResponse *ns2__CreateDiagnosticPartitionResponse)
{	struct __ns2__CreateDiagnosticPartition soap_tmp___ns2__CreateDiagnosticPartition;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__CreateDiagnosticPartition.ns2__CreateDiagnosticPartition = ns2__CreateDiagnosticPartition;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__CreateDiagnosticPartition(soap, &soap_tmp___ns2__CreateDiagnosticPartition);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__CreateDiagnosticPartition(soap, &soap_tmp___ns2__CreateDiagnosticPartition, "-ns2:CreateDiagnosticPartition", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__CreateDiagnosticPartition(soap, &soap_tmp___ns2__CreateDiagnosticPartition, "-ns2:CreateDiagnosticPartition", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CreateDiagnosticPartitionResponse)
		return soap_closesock(soap);
	ns2__CreateDiagnosticPartitionResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CreateDiagnosticPartitionResponse->soap_get(soap, "ns2:CreateDiagnosticPartitionResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__EsxAgentHostManagerUpdateConfig(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__EsxAgentHostManagerUpdateConfigRequestType *ns2__EsxAgentHostManagerUpdateConfig, _ns2__EsxAgentHostManagerUpdateConfigResponse *ns2__EsxAgentHostManagerUpdateConfigResponse)
{	struct __ns2__EsxAgentHostManagerUpdateConfig soap_tmp___ns2__EsxAgentHostManagerUpdateConfig;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__EsxAgentHostManagerUpdateConfig.ns2__EsxAgentHostManagerUpdateConfig = ns2__EsxAgentHostManagerUpdateConfig;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__EsxAgentHostManagerUpdateConfig(soap, &soap_tmp___ns2__EsxAgentHostManagerUpdateConfig);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__EsxAgentHostManagerUpdateConfig(soap, &soap_tmp___ns2__EsxAgentHostManagerUpdateConfig, "-ns2:EsxAgentHostManagerUpdateConfig", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__EsxAgentHostManagerUpdateConfig(soap, &soap_tmp___ns2__EsxAgentHostManagerUpdateConfig, "-ns2:EsxAgentHostManagerUpdateConfig", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__EsxAgentHostManagerUpdateConfigResponse)
		return soap_closesock(soap);
	ns2__EsxAgentHostManagerUpdateConfigResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__EsxAgentHostManagerUpdateConfigResponse->soap_get(soap, "ns2:EsxAgentHostManagerUpdateConfigResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UpdateDefaultPolicy(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UpdateDefaultPolicyRequestType *ns2__UpdateDefaultPolicy, _ns2__UpdateDefaultPolicyResponse *ns2__UpdateDefaultPolicyResponse)
{	struct __ns2__UpdateDefaultPolicy soap_tmp___ns2__UpdateDefaultPolicy;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UpdateDefaultPolicy.ns2__UpdateDefaultPolicy = ns2__UpdateDefaultPolicy;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UpdateDefaultPolicy(soap, &soap_tmp___ns2__UpdateDefaultPolicy);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UpdateDefaultPolicy(soap, &soap_tmp___ns2__UpdateDefaultPolicy, "-ns2:UpdateDefaultPolicy", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UpdateDefaultPolicy(soap, &soap_tmp___ns2__UpdateDefaultPolicy, "-ns2:UpdateDefaultPolicy", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UpdateDefaultPolicyResponse)
		return soap_closesock(soap);
	ns2__UpdateDefaultPolicyResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UpdateDefaultPolicyResponse->soap_get(soap, "ns2:UpdateDefaultPolicyResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__EnableRuleset(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__EnableRulesetRequestType *ns2__EnableRuleset, _ns2__EnableRulesetResponse *ns2__EnableRulesetResponse)
{	struct __ns2__EnableRuleset soap_tmp___ns2__EnableRuleset;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__EnableRuleset.ns2__EnableRuleset = ns2__EnableRuleset;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__EnableRuleset(soap, &soap_tmp___ns2__EnableRuleset);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__EnableRuleset(soap, &soap_tmp___ns2__EnableRuleset, "-ns2:EnableRuleset", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__EnableRuleset(soap, &soap_tmp___ns2__EnableRuleset, "-ns2:EnableRuleset", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__EnableRulesetResponse)
		return soap_closesock(soap);
	ns2__EnableRulesetResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__EnableRulesetResponse->soap_get(soap, "ns2:EnableRulesetResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__DisableRuleset(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__DisableRulesetRequestType *ns2__DisableRuleset, _ns2__DisableRulesetResponse *ns2__DisableRulesetResponse)
{	struct __ns2__DisableRuleset soap_tmp___ns2__DisableRuleset;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__DisableRuleset.ns2__DisableRuleset = ns2__DisableRuleset;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__DisableRuleset(soap, &soap_tmp___ns2__DisableRuleset);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__DisableRuleset(soap, &soap_tmp___ns2__DisableRuleset, "-ns2:DisableRuleset", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__DisableRuleset(soap, &soap_tmp___ns2__DisableRuleset, "-ns2:DisableRuleset", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__DisableRulesetResponse)
		return soap_closesock(soap);
	ns2__DisableRulesetResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__DisableRulesetResponse->soap_get(soap, "ns2:DisableRulesetResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UpdateRuleset(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UpdateRulesetRequestType *ns2__UpdateRuleset, _ns2__UpdateRulesetResponse *ns2__UpdateRulesetResponse)
{	struct __ns2__UpdateRuleset soap_tmp___ns2__UpdateRuleset;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UpdateRuleset.ns2__UpdateRuleset = ns2__UpdateRuleset;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UpdateRuleset(soap, &soap_tmp___ns2__UpdateRuleset);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UpdateRuleset(soap, &soap_tmp___ns2__UpdateRuleset, "-ns2:UpdateRuleset", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UpdateRuleset(soap, &soap_tmp___ns2__UpdateRuleset, "-ns2:UpdateRuleset", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UpdateRulesetResponse)
		return soap_closesock(soap);
	ns2__UpdateRulesetResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UpdateRulesetResponse->soap_get(soap, "ns2:UpdateRulesetResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RefreshFirewall(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RefreshFirewallRequestType *ns2__RefreshFirewall, _ns2__RefreshFirewallResponse *ns2__RefreshFirewallResponse)
{	struct __ns2__RefreshFirewall soap_tmp___ns2__RefreshFirewall;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RefreshFirewall.ns2__RefreshFirewall = ns2__RefreshFirewall;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RefreshFirewall(soap, &soap_tmp___ns2__RefreshFirewall);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RefreshFirewall(soap, &soap_tmp___ns2__RefreshFirewall, "-ns2:RefreshFirewall", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RefreshFirewall(soap, &soap_tmp___ns2__RefreshFirewall, "-ns2:RefreshFirewall", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RefreshFirewallResponse)
		return soap_closesock(soap);
	ns2__RefreshFirewallResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RefreshFirewallResponse->soap_get(soap, "ns2:RefreshFirewallResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ResetFirmwareToFactoryDefaults(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ResetFirmwareToFactoryDefaultsRequestType *ns2__ResetFirmwareToFactoryDefaults, _ns2__ResetFirmwareToFactoryDefaultsResponse *ns2__ResetFirmwareToFactoryDefaultsResponse)
{	struct __ns2__ResetFirmwareToFactoryDefaults soap_tmp___ns2__ResetFirmwareToFactoryDefaults;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ResetFirmwareToFactoryDefaults.ns2__ResetFirmwareToFactoryDefaults = ns2__ResetFirmwareToFactoryDefaults;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ResetFirmwareToFactoryDefaults(soap, &soap_tmp___ns2__ResetFirmwareToFactoryDefaults);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ResetFirmwareToFactoryDefaults(soap, &soap_tmp___ns2__ResetFirmwareToFactoryDefaults, "-ns2:ResetFirmwareToFactoryDefaults", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ResetFirmwareToFactoryDefaults(soap, &soap_tmp___ns2__ResetFirmwareToFactoryDefaults, "-ns2:ResetFirmwareToFactoryDefaults", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ResetFirmwareToFactoryDefaultsResponse)
		return soap_closesock(soap);
	ns2__ResetFirmwareToFactoryDefaultsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ResetFirmwareToFactoryDefaultsResponse->soap_get(soap, "ns2:ResetFirmwareToFactoryDefaultsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__BackupFirmwareConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__BackupFirmwareConfigurationRequestType *ns2__BackupFirmwareConfiguration, _ns2__BackupFirmwareConfigurationResponse *ns2__BackupFirmwareConfigurationResponse)
{	struct __ns2__BackupFirmwareConfiguration soap_tmp___ns2__BackupFirmwareConfiguration;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__BackupFirmwareConfiguration.ns2__BackupFirmwareConfiguration = ns2__BackupFirmwareConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__BackupFirmwareConfiguration(soap, &soap_tmp___ns2__BackupFirmwareConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__BackupFirmwareConfiguration(soap, &soap_tmp___ns2__BackupFirmwareConfiguration, "-ns2:BackupFirmwareConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__BackupFirmwareConfiguration(soap, &soap_tmp___ns2__BackupFirmwareConfiguration, "-ns2:BackupFirmwareConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__BackupFirmwareConfigurationResponse)
		return soap_closesock(soap);
	ns2__BackupFirmwareConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__BackupFirmwareConfigurationResponse->soap_get(soap, "ns2:BackupFirmwareConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryFirmwareConfigUploadURL(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryFirmwareConfigUploadURLRequestType *ns2__QueryFirmwareConfigUploadURL, _ns2__QueryFirmwareConfigUploadURLResponse *ns2__QueryFirmwareConfigUploadURLResponse)
{	struct __ns2__QueryFirmwareConfigUploadURL soap_tmp___ns2__QueryFirmwareConfigUploadURL;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryFirmwareConfigUploadURL.ns2__QueryFirmwareConfigUploadURL = ns2__QueryFirmwareConfigUploadURL;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryFirmwareConfigUploadURL(soap, &soap_tmp___ns2__QueryFirmwareConfigUploadURL);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryFirmwareConfigUploadURL(soap, &soap_tmp___ns2__QueryFirmwareConfigUploadURL, "-ns2:QueryFirmwareConfigUploadURL", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryFirmwareConfigUploadURL(soap, &soap_tmp___ns2__QueryFirmwareConfigUploadURL, "-ns2:QueryFirmwareConfigUploadURL", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryFirmwareConfigUploadURLResponse)
		return soap_closesock(soap);
	ns2__QueryFirmwareConfigUploadURLResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryFirmwareConfigUploadURLResponse->soap_get(soap, "ns2:QueryFirmwareConfigUploadURLResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RestoreFirmwareConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RestoreFirmwareConfigurationRequestType *ns2__RestoreFirmwareConfiguration, _ns2__RestoreFirmwareConfigurationResponse *ns2__RestoreFirmwareConfigurationResponse)
{	struct __ns2__RestoreFirmwareConfiguration soap_tmp___ns2__RestoreFirmwareConfiguration;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RestoreFirmwareConfiguration.ns2__RestoreFirmwareConfiguration = ns2__RestoreFirmwareConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RestoreFirmwareConfiguration(soap, &soap_tmp___ns2__RestoreFirmwareConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RestoreFirmwareConfiguration(soap, &soap_tmp___ns2__RestoreFirmwareConfiguration, "-ns2:RestoreFirmwareConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RestoreFirmwareConfiguration(soap, &soap_tmp___ns2__RestoreFirmwareConfiguration, "-ns2:RestoreFirmwareConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RestoreFirmwareConfigurationResponse)
		return soap_closesock(soap);
	ns2__RestoreFirmwareConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RestoreFirmwareConfigurationResponse->soap_get(soap, "ns2:RestoreFirmwareConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RefreshGraphicsManager(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RefreshGraphicsManagerRequestType *ns2__RefreshGraphicsManager, _ns2__RefreshGraphicsManagerResponse *ns2__RefreshGraphicsManagerResponse)
{	struct __ns2__RefreshGraphicsManager soap_tmp___ns2__RefreshGraphicsManager;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RefreshGraphicsManager.ns2__RefreshGraphicsManager = ns2__RefreshGraphicsManager;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RefreshGraphicsManager(soap, &soap_tmp___ns2__RefreshGraphicsManager);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RefreshGraphicsManager(soap, &soap_tmp___ns2__RefreshGraphicsManager, "-ns2:RefreshGraphicsManager", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RefreshGraphicsManager(soap, &soap_tmp___ns2__RefreshGraphicsManager, "-ns2:RefreshGraphicsManager", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RefreshGraphicsManagerResponse)
		return soap_closesock(soap);
	ns2__RefreshGraphicsManagerResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RefreshGraphicsManagerResponse->soap_get(soap, "ns2:RefreshGraphicsManagerResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__IsSharedGraphicsActive(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__IsSharedGraphicsActiveRequestType *ns2__IsSharedGraphicsActive, _ns2__IsSharedGraphicsActiveResponse *ns2__IsSharedGraphicsActiveResponse)
{	struct __ns2__IsSharedGraphicsActive soap_tmp___ns2__IsSharedGraphicsActive;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__IsSharedGraphicsActive.ns2__IsSharedGraphicsActive = ns2__IsSharedGraphicsActive;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__IsSharedGraphicsActive(soap, &soap_tmp___ns2__IsSharedGraphicsActive);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__IsSharedGraphicsActive(soap, &soap_tmp___ns2__IsSharedGraphicsActive, "-ns2:IsSharedGraphicsActive", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__IsSharedGraphicsActive(soap, &soap_tmp___ns2__IsSharedGraphicsActive, "-ns2:IsSharedGraphicsActive", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__IsSharedGraphicsActiveResponse)
		return soap_closesock(soap);
	ns2__IsSharedGraphicsActiveResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__IsSharedGraphicsActiveResponse->soap_get(soap, "ns2:IsSharedGraphicsActiveResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RefreshHealthStatusSystem(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RefreshHealthStatusSystemRequestType *ns2__RefreshHealthStatusSystem, _ns2__RefreshHealthStatusSystemResponse *ns2__RefreshHealthStatusSystemResponse)
{	struct __ns2__RefreshHealthStatusSystem soap_tmp___ns2__RefreshHealthStatusSystem;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RefreshHealthStatusSystem.ns2__RefreshHealthStatusSystem = ns2__RefreshHealthStatusSystem;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RefreshHealthStatusSystem(soap, &soap_tmp___ns2__RefreshHealthStatusSystem);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RefreshHealthStatusSystem(soap, &soap_tmp___ns2__RefreshHealthStatusSystem, "-ns2:RefreshHealthStatusSystem", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RefreshHealthStatusSystem(soap, &soap_tmp___ns2__RefreshHealthStatusSystem, "-ns2:RefreshHealthStatusSystem", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RefreshHealthStatusSystemResponse)
		return soap_closesock(soap);
	ns2__RefreshHealthStatusSystemResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RefreshHealthStatusSystemResponse->soap_get(soap, "ns2:RefreshHealthStatusSystemResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ResetSystemHealthInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ResetSystemHealthInfoRequestType *ns2__ResetSystemHealthInfo, _ns2__ResetSystemHealthInfoResponse *ns2__ResetSystemHealthInfoResponse)
{	struct __ns2__ResetSystemHealthInfo soap_tmp___ns2__ResetSystemHealthInfo;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ResetSystemHealthInfo.ns2__ResetSystemHealthInfo = ns2__ResetSystemHealthInfo;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ResetSystemHealthInfo(soap, &soap_tmp___ns2__ResetSystemHealthInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ResetSystemHealthInfo(soap, &soap_tmp___ns2__ResetSystemHealthInfo, "-ns2:ResetSystemHealthInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ResetSystemHealthInfo(soap, &soap_tmp___ns2__ResetSystemHealthInfo, "-ns2:ResetSystemHealthInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ResetSystemHealthInfoResponse)
		return soap_closesock(soap);
	ns2__ResetSystemHealthInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ResetSystemHealthInfoResponse->soap_get(soap, "ns2:ResetSystemHealthInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__HostImageConfigGetAcceptance(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__HostImageConfigGetAcceptanceRequestType *ns2__HostImageConfigGetAcceptance, _ns2__HostImageConfigGetAcceptanceResponse *ns2__HostImageConfigGetAcceptanceResponse)
{	struct __ns2__HostImageConfigGetAcceptance soap_tmp___ns2__HostImageConfigGetAcceptance;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__HostImageConfigGetAcceptance.ns2__HostImageConfigGetAcceptance = ns2__HostImageConfigGetAcceptance;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__HostImageConfigGetAcceptance(soap, &soap_tmp___ns2__HostImageConfigGetAcceptance);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__HostImageConfigGetAcceptance(soap, &soap_tmp___ns2__HostImageConfigGetAcceptance, "-ns2:HostImageConfigGetAcceptance", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__HostImageConfigGetAcceptance(soap, &soap_tmp___ns2__HostImageConfigGetAcceptance, "-ns2:HostImageConfigGetAcceptance", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__HostImageConfigGetAcceptanceResponse)
		return soap_closesock(soap);
	ns2__HostImageConfigGetAcceptanceResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__HostImageConfigGetAcceptanceResponse->soap_get(soap, "ns2:HostImageConfigGetAcceptanceResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__HostImageConfigGetProfile(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__HostImageConfigGetProfileRequestType *ns2__HostImageConfigGetProfile, _ns2__HostImageConfigGetProfileResponse *ns2__HostImageConfigGetProfileResponse)
{	struct __ns2__HostImageConfigGetProfile soap_tmp___ns2__HostImageConfigGetProfile;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__HostImageConfigGetProfile.ns2__HostImageConfigGetProfile = ns2__HostImageConfigGetProfile;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__HostImageConfigGetProfile(soap, &soap_tmp___ns2__HostImageConfigGetProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__HostImageConfigGetProfile(soap, &soap_tmp___ns2__HostImageConfigGetProfile, "-ns2:HostImageConfigGetProfile", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__HostImageConfigGetProfile(soap, &soap_tmp___ns2__HostImageConfigGetProfile, "-ns2:HostImageConfigGetProfile", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__HostImageConfigGetProfileResponse)
		return soap_closesock(soap);
	ns2__HostImageConfigGetProfileResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__HostImageConfigGetProfileResponse->soap_get(soap, "ns2:HostImageConfigGetProfileResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UpdateHostImageAcceptanceLevel(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UpdateHostImageAcceptanceLevelRequestType *ns2__UpdateHostImageAcceptanceLevel, _ns2__UpdateHostImageAcceptanceLevelResponse *ns2__UpdateHostImageAcceptanceLevelResponse)
{	struct __ns2__UpdateHostImageAcceptanceLevel soap_tmp___ns2__UpdateHostImageAcceptanceLevel;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UpdateHostImageAcceptanceLevel.ns2__UpdateHostImageAcceptanceLevel = ns2__UpdateHostImageAcceptanceLevel;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UpdateHostImageAcceptanceLevel(soap, &soap_tmp___ns2__UpdateHostImageAcceptanceLevel);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UpdateHostImageAcceptanceLevel(soap, &soap_tmp___ns2__UpdateHostImageAcceptanceLevel, "-ns2:UpdateHostImageAcceptanceLevel", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UpdateHostImageAcceptanceLevel(soap, &soap_tmp___ns2__UpdateHostImageAcceptanceLevel, "-ns2:UpdateHostImageAcceptanceLevel", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UpdateHostImageAcceptanceLevelResponse)
		return soap_closesock(soap);
	ns2__UpdateHostImageAcceptanceLevelResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UpdateHostImageAcceptanceLevelResponse->soap_get(soap, "ns2:UpdateHostImageAcceptanceLevelResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryVnicStatus(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryVnicStatusRequestType *ns2__QueryVnicStatus, _ns2__QueryVnicStatusResponse *ns2__QueryVnicStatusResponse)
{	struct __ns2__QueryVnicStatus soap_tmp___ns2__QueryVnicStatus;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryVnicStatus.ns2__QueryVnicStatus = ns2__QueryVnicStatus;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryVnicStatus(soap, &soap_tmp___ns2__QueryVnicStatus);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryVnicStatus(soap, &soap_tmp___ns2__QueryVnicStatus, "-ns2:QueryVnicStatus", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryVnicStatus(soap, &soap_tmp___ns2__QueryVnicStatus, "-ns2:QueryVnicStatus", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryVnicStatusResponse)
		return soap_closesock(soap);
	ns2__QueryVnicStatusResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryVnicStatusResponse->soap_get(soap, "ns2:QueryVnicStatusResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryPnicStatus(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryPnicStatusRequestType *ns2__QueryPnicStatus, _ns2__QueryPnicStatusResponse *ns2__QueryPnicStatusResponse)
{	struct __ns2__QueryPnicStatus soap_tmp___ns2__QueryPnicStatus;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryPnicStatus.ns2__QueryPnicStatus = ns2__QueryPnicStatus;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryPnicStatus(soap, &soap_tmp___ns2__QueryPnicStatus);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryPnicStatus(soap, &soap_tmp___ns2__QueryPnicStatus, "-ns2:QueryPnicStatus", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryPnicStatus(soap, &soap_tmp___ns2__QueryPnicStatus, "-ns2:QueryPnicStatus", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryPnicStatusResponse)
		return soap_closesock(soap);
	ns2__QueryPnicStatusResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryPnicStatusResponse->soap_get(soap, "ns2:QueryPnicStatusResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryBoundVnics(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryBoundVnicsRequestType *ns2__QueryBoundVnics, _ns2__QueryBoundVnicsResponse *ns2__QueryBoundVnicsResponse)
{	struct __ns2__QueryBoundVnics soap_tmp___ns2__QueryBoundVnics;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryBoundVnics.ns2__QueryBoundVnics = ns2__QueryBoundVnics;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryBoundVnics(soap, &soap_tmp___ns2__QueryBoundVnics);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryBoundVnics(soap, &soap_tmp___ns2__QueryBoundVnics, "-ns2:QueryBoundVnics", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryBoundVnics(soap, &soap_tmp___ns2__QueryBoundVnics, "-ns2:QueryBoundVnics", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryBoundVnicsResponse)
		return soap_closesock(soap);
	ns2__QueryBoundVnicsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryBoundVnicsResponse->soap_get(soap, "ns2:QueryBoundVnicsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryCandidateNics(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryCandidateNicsRequestType *ns2__QueryCandidateNics, _ns2__QueryCandidateNicsResponse *ns2__QueryCandidateNicsResponse)
{	struct __ns2__QueryCandidateNics soap_tmp___ns2__QueryCandidateNics;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryCandidateNics.ns2__QueryCandidateNics = ns2__QueryCandidateNics;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryCandidateNics(soap, &soap_tmp___ns2__QueryCandidateNics);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryCandidateNics(soap, &soap_tmp___ns2__QueryCandidateNics, "-ns2:QueryCandidateNics", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryCandidateNics(soap, &soap_tmp___ns2__QueryCandidateNics, "-ns2:QueryCandidateNics", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryCandidateNicsResponse)
		return soap_closesock(soap);
	ns2__QueryCandidateNicsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryCandidateNicsResponse->soap_get(soap, "ns2:QueryCandidateNicsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__BindVnic(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__BindVnicRequestType *ns2__BindVnic, _ns2__BindVnicResponse *ns2__BindVnicResponse)
{	struct __ns2__BindVnic soap_tmp___ns2__BindVnic;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__BindVnic.ns2__BindVnic = ns2__BindVnic;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__BindVnic(soap, &soap_tmp___ns2__BindVnic);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__BindVnic(soap, &soap_tmp___ns2__BindVnic, "-ns2:BindVnic", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__BindVnic(soap, &soap_tmp___ns2__BindVnic, "-ns2:BindVnic", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__BindVnicResponse)
		return soap_closesock(soap);
	ns2__BindVnicResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__BindVnicResponse->soap_get(soap, "ns2:BindVnicResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UnbindVnic(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UnbindVnicRequestType *ns2__UnbindVnic, _ns2__UnbindVnicResponse *ns2__UnbindVnicResponse)
{	struct __ns2__UnbindVnic soap_tmp___ns2__UnbindVnic;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UnbindVnic.ns2__UnbindVnic = ns2__UnbindVnic;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UnbindVnic(soap, &soap_tmp___ns2__UnbindVnic);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UnbindVnic(soap, &soap_tmp___ns2__UnbindVnic, "-ns2:UnbindVnic", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UnbindVnic(soap, &soap_tmp___ns2__UnbindVnic, "-ns2:UnbindVnic", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UnbindVnicResponse)
		return soap_closesock(soap);
	ns2__UnbindVnicResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UnbindVnicResponse->soap_get(soap, "ns2:UnbindVnicResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryMigrationDependencies(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryMigrationDependenciesRequestType *ns2__QueryMigrationDependencies, _ns2__QueryMigrationDependenciesResponse *ns2__QueryMigrationDependenciesResponse)
{	struct __ns2__QueryMigrationDependencies soap_tmp___ns2__QueryMigrationDependencies;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryMigrationDependencies.ns2__QueryMigrationDependencies = ns2__QueryMigrationDependencies;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryMigrationDependencies(soap, &soap_tmp___ns2__QueryMigrationDependencies);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryMigrationDependencies(soap, &soap_tmp___ns2__QueryMigrationDependencies, "-ns2:QueryMigrationDependencies", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryMigrationDependencies(soap, &soap_tmp___ns2__QueryMigrationDependencies, "-ns2:QueryMigrationDependencies", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryMigrationDependenciesResponse)
		return soap_closesock(soap);
	ns2__QueryMigrationDependenciesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryMigrationDependenciesResponse->soap_get(soap, "ns2:QueryMigrationDependenciesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryModules(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryModulesRequestType *ns2__QueryModules, _ns2__QueryModulesResponse *ns2__QueryModulesResponse)
{	struct __ns2__QueryModules soap_tmp___ns2__QueryModules;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryModules.ns2__QueryModules = ns2__QueryModules;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryModules(soap, &soap_tmp___ns2__QueryModules);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryModules(soap, &soap_tmp___ns2__QueryModules, "-ns2:QueryModules", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryModules(soap, &soap_tmp___ns2__QueryModules, "-ns2:QueryModules", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryModulesResponse)
		return soap_closesock(soap);
	ns2__QueryModulesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryModulesResponse->soap_get(soap, "ns2:QueryModulesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UpdateModuleOptionString(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UpdateModuleOptionStringRequestType *ns2__UpdateModuleOptionString, _ns2__UpdateModuleOptionStringResponse *ns2__UpdateModuleOptionStringResponse)
{	struct __ns2__UpdateModuleOptionString soap_tmp___ns2__UpdateModuleOptionString;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UpdateModuleOptionString.ns2__UpdateModuleOptionString = ns2__UpdateModuleOptionString;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UpdateModuleOptionString(soap, &soap_tmp___ns2__UpdateModuleOptionString);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UpdateModuleOptionString(soap, &soap_tmp___ns2__UpdateModuleOptionString, "-ns2:UpdateModuleOptionString", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UpdateModuleOptionString(soap, &soap_tmp___ns2__UpdateModuleOptionString, "-ns2:UpdateModuleOptionString", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UpdateModuleOptionStringResponse)
		return soap_closesock(soap);
	ns2__UpdateModuleOptionStringResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UpdateModuleOptionStringResponse->soap_get(soap, "ns2:UpdateModuleOptionStringResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryConfiguredModuleOptionString(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryConfiguredModuleOptionStringRequestType *ns2__QueryConfiguredModuleOptionString, _ns2__QueryConfiguredModuleOptionStringResponse *ns2__QueryConfiguredModuleOptionStringResponse)
{	struct __ns2__QueryConfiguredModuleOptionString soap_tmp___ns2__QueryConfiguredModuleOptionString;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryConfiguredModuleOptionString.ns2__QueryConfiguredModuleOptionString = ns2__QueryConfiguredModuleOptionString;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryConfiguredModuleOptionString(soap, &soap_tmp___ns2__QueryConfiguredModuleOptionString);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryConfiguredModuleOptionString(soap, &soap_tmp___ns2__QueryConfiguredModuleOptionString, "-ns2:QueryConfiguredModuleOptionString", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryConfiguredModuleOptionString(soap, &soap_tmp___ns2__QueryConfiguredModuleOptionString, "-ns2:QueryConfiguredModuleOptionString", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryConfiguredModuleOptionStringResponse)
		return soap_closesock(soap);
	ns2__QueryConfiguredModuleOptionStringResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryConfiguredModuleOptionStringResponse->soap_get(soap, "ns2:QueryConfiguredModuleOptionStringResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__CreateUser(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__CreateUserRequestType *ns2__CreateUser, _ns2__CreateUserResponse *ns2__CreateUserResponse)
{	struct __ns2__CreateUser soap_tmp___ns2__CreateUser;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__CreateUser.ns2__CreateUser = ns2__CreateUser;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__CreateUser(soap, &soap_tmp___ns2__CreateUser);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__CreateUser(soap, &soap_tmp___ns2__CreateUser, "-ns2:CreateUser", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__CreateUser(soap, &soap_tmp___ns2__CreateUser, "-ns2:CreateUser", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CreateUserResponse)
		return soap_closesock(soap);
	ns2__CreateUserResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CreateUserResponse->soap_get(soap, "ns2:CreateUserResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UpdateUser(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UpdateUserRequestType *ns2__UpdateUser, _ns2__UpdateUserResponse *ns2__UpdateUserResponse)
{	struct __ns2__UpdateUser soap_tmp___ns2__UpdateUser;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UpdateUser.ns2__UpdateUser = ns2__UpdateUser;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UpdateUser(soap, &soap_tmp___ns2__UpdateUser);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UpdateUser(soap, &soap_tmp___ns2__UpdateUser, "-ns2:UpdateUser", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UpdateUser(soap, &soap_tmp___ns2__UpdateUser, "-ns2:UpdateUser", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UpdateUserResponse)
		return soap_closesock(soap);
	ns2__UpdateUserResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UpdateUserResponse->soap_get(soap, "ns2:UpdateUserResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__CreateGroup(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__CreateGroupRequestType *ns2__CreateGroup, _ns2__CreateGroupResponse *ns2__CreateGroupResponse)
{	struct __ns2__CreateGroup soap_tmp___ns2__CreateGroup;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__CreateGroup.ns2__CreateGroup = ns2__CreateGroup;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__CreateGroup(soap, &soap_tmp___ns2__CreateGroup);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__CreateGroup(soap, &soap_tmp___ns2__CreateGroup, "-ns2:CreateGroup", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__CreateGroup(soap, &soap_tmp___ns2__CreateGroup, "-ns2:CreateGroup", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CreateGroupResponse)
		return soap_closesock(soap);
	ns2__CreateGroupResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CreateGroupResponse->soap_get(soap, "ns2:CreateGroupResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RemoveUser(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RemoveUserRequestType *ns2__RemoveUser, _ns2__RemoveUserResponse *ns2__RemoveUserResponse)
{	struct __ns2__RemoveUser soap_tmp___ns2__RemoveUser;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RemoveUser.ns2__RemoveUser = ns2__RemoveUser;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RemoveUser(soap, &soap_tmp___ns2__RemoveUser);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RemoveUser(soap, &soap_tmp___ns2__RemoveUser, "-ns2:RemoveUser", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RemoveUser(soap, &soap_tmp___ns2__RemoveUser, "-ns2:RemoveUser", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RemoveUserResponse)
		return soap_closesock(soap);
	ns2__RemoveUserResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RemoveUserResponse->soap_get(soap, "ns2:RemoveUserResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RemoveGroup(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RemoveGroupRequestType *ns2__RemoveGroup, _ns2__RemoveGroupResponse *ns2__RemoveGroupResponse)
{	struct __ns2__RemoveGroup soap_tmp___ns2__RemoveGroup;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RemoveGroup.ns2__RemoveGroup = ns2__RemoveGroup;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RemoveGroup(soap, &soap_tmp___ns2__RemoveGroup);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RemoveGroup(soap, &soap_tmp___ns2__RemoveGroup, "-ns2:RemoveGroup", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RemoveGroup(soap, &soap_tmp___ns2__RemoveGroup, "-ns2:RemoveGroup", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RemoveGroupResponse)
		return soap_closesock(soap);
	ns2__RemoveGroupResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RemoveGroupResponse->soap_get(soap, "ns2:RemoveGroupResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__AssignUserToGroup(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__AssignUserToGroupRequestType *ns2__AssignUserToGroup, _ns2__AssignUserToGroupResponse *ns2__AssignUserToGroupResponse)
{	struct __ns2__AssignUserToGroup soap_tmp___ns2__AssignUserToGroup;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__AssignUserToGroup.ns2__AssignUserToGroup = ns2__AssignUserToGroup;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__AssignUserToGroup(soap, &soap_tmp___ns2__AssignUserToGroup);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__AssignUserToGroup(soap, &soap_tmp___ns2__AssignUserToGroup, "-ns2:AssignUserToGroup", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__AssignUserToGroup(soap, &soap_tmp___ns2__AssignUserToGroup, "-ns2:AssignUserToGroup", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__AssignUserToGroupResponse)
		return soap_closesock(soap);
	ns2__AssignUserToGroupResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__AssignUserToGroupResponse->soap_get(soap, "ns2:AssignUserToGroupResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UnassignUserFromGroup(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UnassignUserFromGroupRequestType *ns2__UnassignUserFromGroup, _ns2__UnassignUserFromGroupResponse *ns2__UnassignUserFromGroupResponse)
{	struct __ns2__UnassignUserFromGroup soap_tmp___ns2__UnassignUserFromGroup;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UnassignUserFromGroup.ns2__UnassignUserFromGroup = ns2__UnassignUserFromGroup;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UnassignUserFromGroup(soap, &soap_tmp___ns2__UnassignUserFromGroup);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UnassignUserFromGroup(soap, &soap_tmp___ns2__UnassignUserFromGroup, "-ns2:UnassignUserFromGroup", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UnassignUserFromGroup(soap, &soap_tmp___ns2__UnassignUserFromGroup, "-ns2:UnassignUserFromGroup", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UnassignUserFromGroupResponse)
		return soap_closesock(soap);
	ns2__UnassignUserFromGroupResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UnassignUserFromGroupResponse->soap_get(soap, "ns2:UnassignUserFromGroupResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ReconfigureServiceConsoleReservation(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ReconfigureServiceConsoleReservationRequestType *ns2__ReconfigureServiceConsoleReservation, _ns2__ReconfigureServiceConsoleReservationResponse *ns2__ReconfigureServiceConsoleReservationResponse)
{	struct __ns2__ReconfigureServiceConsoleReservation soap_tmp___ns2__ReconfigureServiceConsoleReservation;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ReconfigureServiceConsoleReservation.ns2__ReconfigureServiceConsoleReservation = ns2__ReconfigureServiceConsoleReservation;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ReconfigureServiceConsoleReservation(soap, &soap_tmp___ns2__ReconfigureServiceConsoleReservation);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ReconfigureServiceConsoleReservation(soap, &soap_tmp___ns2__ReconfigureServiceConsoleReservation, "-ns2:ReconfigureServiceConsoleReservation", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ReconfigureServiceConsoleReservation(soap, &soap_tmp___ns2__ReconfigureServiceConsoleReservation, "-ns2:ReconfigureServiceConsoleReservation", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ReconfigureServiceConsoleReservationResponse)
		return soap_closesock(soap);
	ns2__ReconfigureServiceConsoleReservationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ReconfigureServiceConsoleReservationResponse->soap_get(soap, "ns2:ReconfigureServiceConsoleReservationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ReconfigureVirtualMachineReservation(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ReconfigureVirtualMachineReservationRequestType *ns2__ReconfigureVirtualMachineReservation, _ns2__ReconfigureVirtualMachineReservationResponse *ns2__ReconfigureVirtualMachineReservationResponse)
{	struct __ns2__ReconfigureVirtualMachineReservation soap_tmp___ns2__ReconfigureVirtualMachineReservation;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ReconfigureVirtualMachineReservation.ns2__ReconfigureVirtualMachineReservation = ns2__ReconfigureVirtualMachineReservation;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ReconfigureVirtualMachineReservation(soap, &soap_tmp___ns2__ReconfigureVirtualMachineReservation);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ReconfigureVirtualMachineReservation(soap, &soap_tmp___ns2__ReconfigureVirtualMachineReservation, "-ns2:ReconfigureVirtualMachineReservation", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ReconfigureVirtualMachineReservation(soap, &soap_tmp___ns2__ReconfigureVirtualMachineReservation, "-ns2:ReconfigureVirtualMachineReservation", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ReconfigureVirtualMachineReservationResponse)
		return soap_closesock(soap);
	ns2__ReconfigureVirtualMachineReservationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ReconfigureVirtualMachineReservationResponse->soap_get(soap, "ns2:ReconfigureVirtualMachineReservationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UpdateNetworkConfig(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UpdateNetworkConfigRequestType *ns2__UpdateNetworkConfig, _ns2__UpdateNetworkConfigResponse *ns2__UpdateNetworkConfigResponse)
{	struct __ns2__UpdateNetworkConfig soap_tmp___ns2__UpdateNetworkConfig;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UpdateNetworkConfig.ns2__UpdateNetworkConfig = ns2__UpdateNetworkConfig;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UpdateNetworkConfig(soap, &soap_tmp___ns2__UpdateNetworkConfig);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UpdateNetworkConfig(soap, &soap_tmp___ns2__UpdateNetworkConfig, "-ns2:UpdateNetworkConfig", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UpdateNetworkConfig(soap, &soap_tmp___ns2__UpdateNetworkConfig, "-ns2:UpdateNetworkConfig", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UpdateNetworkConfigResponse)
		return soap_closesock(soap);
	ns2__UpdateNetworkConfigResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UpdateNetworkConfigResponse->soap_get(soap, "ns2:UpdateNetworkConfigResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UpdateDnsConfig(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UpdateDnsConfigRequestType *ns2__UpdateDnsConfig, _ns2__UpdateDnsConfigResponse *ns2__UpdateDnsConfigResponse)
{	struct __ns2__UpdateDnsConfig soap_tmp___ns2__UpdateDnsConfig;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UpdateDnsConfig.ns2__UpdateDnsConfig = ns2__UpdateDnsConfig;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UpdateDnsConfig(soap, &soap_tmp___ns2__UpdateDnsConfig);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UpdateDnsConfig(soap, &soap_tmp___ns2__UpdateDnsConfig, "-ns2:UpdateDnsConfig", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UpdateDnsConfig(soap, &soap_tmp___ns2__UpdateDnsConfig, "-ns2:UpdateDnsConfig", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UpdateDnsConfigResponse)
		return soap_closesock(soap);
	ns2__UpdateDnsConfigResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UpdateDnsConfigResponse->soap_get(soap, "ns2:UpdateDnsConfigResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UpdateIpRouteConfig(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UpdateIpRouteConfigRequestType *ns2__UpdateIpRouteConfig, _ns2__UpdateIpRouteConfigResponse *ns2__UpdateIpRouteConfigResponse)
{	struct __ns2__UpdateIpRouteConfig soap_tmp___ns2__UpdateIpRouteConfig;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UpdateIpRouteConfig.ns2__UpdateIpRouteConfig = ns2__UpdateIpRouteConfig;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UpdateIpRouteConfig(soap, &soap_tmp___ns2__UpdateIpRouteConfig);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UpdateIpRouteConfig(soap, &soap_tmp___ns2__UpdateIpRouteConfig, "-ns2:UpdateIpRouteConfig", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UpdateIpRouteConfig(soap, &soap_tmp___ns2__UpdateIpRouteConfig, "-ns2:UpdateIpRouteConfig", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UpdateIpRouteConfigResponse)
		return soap_closesock(soap);
	ns2__UpdateIpRouteConfigResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UpdateIpRouteConfigResponse->soap_get(soap, "ns2:UpdateIpRouteConfigResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UpdateConsoleIpRouteConfig(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UpdateConsoleIpRouteConfigRequestType *ns2__UpdateConsoleIpRouteConfig, _ns2__UpdateConsoleIpRouteConfigResponse *ns2__UpdateConsoleIpRouteConfigResponse)
{	struct __ns2__UpdateConsoleIpRouteConfig soap_tmp___ns2__UpdateConsoleIpRouteConfig;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UpdateConsoleIpRouteConfig.ns2__UpdateConsoleIpRouteConfig = ns2__UpdateConsoleIpRouteConfig;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UpdateConsoleIpRouteConfig(soap, &soap_tmp___ns2__UpdateConsoleIpRouteConfig);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UpdateConsoleIpRouteConfig(soap, &soap_tmp___ns2__UpdateConsoleIpRouteConfig, "-ns2:UpdateConsoleIpRouteConfig", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UpdateConsoleIpRouteConfig(soap, &soap_tmp___ns2__UpdateConsoleIpRouteConfig, "-ns2:UpdateConsoleIpRouteConfig", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UpdateConsoleIpRouteConfigResponse)
		return soap_closesock(soap);
	ns2__UpdateConsoleIpRouteConfigResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UpdateConsoleIpRouteConfigResponse->soap_get(soap, "ns2:UpdateConsoleIpRouteConfigResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UpdateIpRouteTableConfig(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UpdateIpRouteTableConfigRequestType *ns2__UpdateIpRouteTableConfig, _ns2__UpdateIpRouteTableConfigResponse *ns2__UpdateIpRouteTableConfigResponse)
{	struct __ns2__UpdateIpRouteTableConfig soap_tmp___ns2__UpdateIpRouteTableConfig;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UpdateIpRouteTableConfig.ns2__UpdateIpRouteTableConfig = ns2__UpdateIpRouteTableConfig;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UpdateIpRouteTableConfig(soap, &soap_tmp___ns2__UpdateIpRouteTableConfig);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UpdateIpRouteTableConfig(soap, &soap_tmp___ns2__UpdateIpRouteTableConfig, "-ns2:UpdateIpRouteTableConfig", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UpdateIpRouteTableConfig(soap, &soap_tmp___ns2__UpdateIpRouteTableConfig, "-ns2:UpdateIpRouteTableConfig", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UpdateIpRouteTableConfigResponse)
		return soap_closesock(soap);
	ns2__UpdateIpRouteTableConfigResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UpdateIpRouteTableConfigResponse->soap_get(soap, "ns2:UpdateIpRouteTableConfigResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__AddVirtualSwitch(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__AddVirtualSwitchRequestType *ns2__AddVirtualSwitch, _ns2__AddVirtualSwitchResponse *ns2__AddVirtualSwitchResponse)
{	struct __ns2__AddVirtualSwitch soap_tmp___ns2__AddVirtualSwitch;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__AddVirtualSwitch.ns2__AddVirtualSwitch = ns2__AddVirtualSwitch;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__AddVirtualSwitch(soap, &soap_tmp___ns2__AddVirtualSwitch);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__AddVirtualSwitch(soap, &soap_tmp___ns2__AddVirtualSwitch, "-ns2:AddVirtualSwitch", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__AddVirtualSwitch(soap, &soap_tmp___ns2__AddVirtualSwitch, "-ns2:AddVirtualSwitch", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__AddVirtualSwitchResponse)
		return soap_closesock(soap);
	ns2__AddVirtualSwitchResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__AddVirtualSwitchResponse->soap_get(soap, "ns2:AddVirtualSwitchResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RemoveVirtualSwitch(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RemoveVirtualSwitchRequestType *ns2__RemoveVirtualSwitch, _ns2__RemoveVirtualSwitchResponse *ns2__RemoveVirtualSwitchResponse)
{	struct __ns2__RemoveVirtualSwitch soap_tmp___ns2__RemoveVirtualSwitch;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RemoveVirtualSwitch.ns2__RemoveVirtualSwitch = ns2__RemoveVirtualSwitch;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RemoveVirtualSwitch(soap, &soap_tmp___ns2__RemoveVirtualSwitch);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RemoveVirtualSwitch(soap, &soap_tmp___ns2__RemoveVirtualSwitch, "-ns2:RemoveVirtualSwitch", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RemoveVirtualSwitch(soap, &soap_tmp___ns2__RemoveVirtualSwitch, "-ns2:RemoveVirtualSwitch", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RemoveVirtualSwitchResponse)
		return soap_closesock(soap);
	ns2__RemoveVirtualSwitchResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RemoveVirtualSwitchResponse->soap_get(soap, "ns2:RemoveVirtualSwitchResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UpdateVirtualSwitch(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UpdateVirtualSwitchRequestType *ns2__UpdateVirtualSwitch, _ns2__UpdateVirtualSwitchResponse *ns2__UpdateVirtualSwitchResponse)
{	struct __ns2__UpdateVirtualSwitch soap_tmp___ns2__UpdateVirtualSwitch;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UpdateVirtualSwitch.ns2__UpdateVirtualSwitch = ns2__UpdateVirtualSwitch;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UpdateVirtualSwitch(soap, &soap_tmp___ns2__UpdateVirtualSwitch);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UpdateVirtualSwitch(soap, &soap_tmp___ns2__UpdateVirtualSwitch, "-ns2:UpdateVirtualSwitch", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UpdateVirtualSwitch(soap, &soap_tmp___ns2__UpdateVirtualSwitch, "-ns2:UpdateVirtualSwitch", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UpdateVirtualSwitchResponse)
		return soap_closesock(soap);
	ns2__UpdateVirtualSwitchResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UpdateVirtualSwitchResponse->soap_get(soap, "ns2:UpdateVirtualSwitchResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__AddPortGroup(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__AddPortGroupRequestType *ns2__AddPortGroup, _ns2__AddPortGroupResponse *ns2__AddPortGroupResponse)
{	struct __ns2__AddPortGroup soap_tmp___ns2__AddPortGroup;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__AddPortGroup.ns2__AddPortGroup = ns2__AddPortGroup;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__AddPortGroup(soap, &soap_tmp___ns2__AddPortGroup);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__AddPortGroup(soap, &soap_tmp___ns2__AddPortGroup, "-ns2:AddPortGroup", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__AddPortGroup(soap, &soap_tmp___ns2__AddPortGroup, "-ns2:AddPortGroup", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__AddPortGroupResponse)
		return soap_closesock(soap);
	ns2__AddPortGroupResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__AddPortGroupResponse->soap_get(soap, "ns2:AddPortGroupResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RemovePortGroup(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RemovePortGroupRequestType *ns2__RemovePortGroup, _ns2__RemovePortGroupResponse *ns2__RemovePortGroupResponse)
{	struct __ns2__RemovePortGroup soap_tmp___ns2__RemovePortGroup;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RemovePortGroup.ns2__RemovePortGroup = ns2__RemovePortGroup;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RemovePortGroup(soap, &soap_tmp___ns2__RemovePortGroup);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RemovePortGroup(soap, &soap_tmp___ns2__RemovePortGroup, "-ns2:RemovePortGroup", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RemovePortGroup(soap, &soap_tmp___ns2__RemovePortGroup, "-ns2:RemovePortGroup", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RemovePortGroupResponse)
		return soap_closesock(soap);
	ns2__RemovePortGroupResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RemovePortGroupResponse->soap_get(soap, "ns2:RemovePortGroupResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UpdatePortGroup(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UpdatePortGroupRequestType *ns2__UpdatePortGroup, _ns2__UpdatePortGroupResponse *ns2__UpdatePortGroupResponse)
{	struct __ns2__UpdatePortGroup soap_tmp___ns2__UpdatePortGroup;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UpdatePortGroup.ns2__UpdatePortGroup = ns2__UpdatePortGroup;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UpdatePortGroup(soap, &soap_tmp___ns2__UpdatePortGroup);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UpdatePortGroup(soap, &soap_tmp___ns2__UpdatePortGroup, "-ns2:UpdatePortGroup", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UpdatePortGroup(soap, &soap_tmp___ns2__UpdatePortGroup, "-ns2:UpdatePortGroup", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UpdatePortGroupResponse)
		return soap_closesock(soap);
	ns2__UpdatePortGroupResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UpdatePortGroupResponse->soap_get(soap, "ns2:UpdatePortGroupResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UpdatePhysicalNicLinkSpeed(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UpdatePhysicalNicLinkSpeedRequestType *ns2__UpdatePhysicalNicLinkSpeed, _ns2__UpdatePhysicalNicLinkSpeedResponse *ns2__UpdatePhysicalNicLinkSpeedResponse)
{	struct __ns2__UpdatePhysicalNicLinkSpeed soap_tmp___ns2__UpdatePhysicalNicLinkSpeed;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UpdatePhysicalNicLinkSpeed.ns2__UpdatePhysicalNicLinkSpeed = ns2__UpdatePhysicalNicLinkSpeed;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UpdatePhysicalNicLinkSpeed(soap, &soap_tmp___ns2__UpdatePhysicalNicLinkSpeed);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UpdatePhysicalNicLinkSpeed(soap, &soap_tmp___ns2__UpdatePhysicalNicLinkSpeed, "-ns2:UpdatePhysicalNicLinkSpeed", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UpdatePhysicalNicLinkSpeed(soap, &soap_tmp___ns2__UpdatePhysicalNicLinkSpeed, "-ns2:UpdatePhysicalNicLinkSpeed", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UpdatePhysicalNicLinkSpeedResponse)
		return soap_closesock(soap);
	ns2__UpdatePhysicalNicLinkSpeedResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UpdatePhysicalNicLinkSpeedResponse->soap_get(soap, "ns2:UpdatePhysicalNicLinkSpeedResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryNetworkHint(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryNetworkHintRequestType *ns2__QueryNetworkHint, _ns2__QueryNetworkHintResponse *ns2__QueryNetworkHintResponse)
{	struct __ns2__QueryNetworkHint soap_tmp___ns2__QueryNetworkHint;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryNetworkHint.ns2__QueryNetworkHint = ns2__QueryNetworkHint;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryNetworkHint(soap, &soap_tmp___ns2__QueryNetworkHint);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryNetworkHint(soap, &soap_tmp___ns2__QueryNetworkHint, "-ns2:QueryNetworkHint", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryNetworkHint(soap, &soap_tmp___ns2__QueryNetworkHint, "-ns2:QueryNetworkHint", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryNetworkHintResponse)
		return soap_closesock(soap);
	ns2__QueryNetworkHintResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryNetworkHintResponse->soap_get(soap, "ns2:QueryNetworkHintResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__AddVirtualNic(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__AddVirtualNicRequestType *ns2__AddVirtualNic, _ns2__AddVirtualNicResponse *ns2__AddVirtualNicResponse)
{	struct __ns2__AddVirtualNic soap_tmp___ns2__AddVirtualNic;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__AddVirtualNic.ns2__AddVirtualNic = ns2__AddVirtualNic;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__AddVirtualNic(soap, &soap_tmp___ns2__AddVirtualNic);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__AddVirtualNic(soap, &soap_tmp___ns2__AddVirtualNic, "-ns2:AddVirtualNic", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__AddVirtualNic(soap, &soap_tmp___ns2__AddVirtualNic, "-ns2:AddVirtualNic", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__AddVirtualNicResponse)
		return soap_closesock(soap);
	ns2__AddVirtualNicResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__AddVirtualNicResponse->soap_get(soap, "ns2:AddVirtualNicResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RemoveVirtualNic(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RemoveVirtualNicRequestType *ns2__RemoveVirtualNic, _ns2__RemoveVirtualNicResponse *ns2__RemoveVirtualNicResponse)
{	struct __ns2__RemoveVirtualNic soap_tmp___ns2__RemoveVirtualNic;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RemoveVirtualNic.ns2__RemoveVirtualNic = ns2__RemoveVirtualNic;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RemoveVirtualNic(soap, &soap_tmp___ns2__RemoveVirtualNic);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RemoveVirtualNic(soap, &soap_tmp___ns2__RemoveVirtualNic, "-ns2:RemoveVirtualNic", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RemoveVirtualNic(soap, &soap_tmp___ns2__RemoveVirtualNic, "-ns2:RemoveVirtualNic", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RemoveVirtualNicResponse)
		return soap_closesock(soap);
	ns2__RemoveVirtualNicResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RemoveVirtualNicResponse->soap_get(soap, "ns2:RemoveVirtualNicResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UpdateVirtualNic(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UpdateVirtualNicRequestType *ns2__UpdateVirtualNic, _ns2__UpdateVirtualNicResponse *ns2__UpdateVirtualNicResponse)
{	struct __ns2__UpdateVirtualNic soap_tmp___ns2__UpdateVirtualNic;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UpdateVirtualNic.ns2__UpdateVirtualNic = ns2__UpdateVirtualNic;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UpdateVirtualNic(soap, &soap_tmp___ns2__UpdateVirtualNic);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UpdateVirtualNic(soap, &soap_tmp___ns2__UpdateVirtualNic, "-ns2:UpdateVirtualNic", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UpdateVirtualNic(soap, &soap_tmp___ns2__UpdateVirtualNic, "-ns2:UpdateVirtualNic", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UpdateVirtualNicResponse)
		return soap_closesock(soap);
	ns2__UpdateVirtualNicResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UpdateVirtualNicResponse->soap_get(soap, "ns2:UpdateVirtualNicResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__AddServiceConsoleVirtualNic(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__AddServiceConsoleVirtualNicRequestType *ns2__AddServiceConsoleVirtualNic, _ns2__AddServiceConsoleVirtualNicResponse *ns2__AddServiceConsoleVirtualNicResponse)
{	struct __ns2__AddServiceConsoleVirtualNic soap_tmp___ns2__AddServiceConsoleVirtualNic;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__AddServiceConsoleVirtualNic.ns2__AddServiceConsoleVirtualNic = ns2__AddServiceConsoleVirtualNic;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__AddServiceConsoleVirtualNic(soap, &soap_tmp___ns2__AddServiceConsoleVirtualNic);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__AddServiceConsoleVirtualNic(soap, &soap_tmp___ns2__AddServiceConsoleVirtualNic, "-ns2:AddServiceConsoleVirtualNic", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__AddServiceConsoleVirtualNic(soap, &soap_tmp___ns2__AddServiceConsoleVirtualNic, "-ns2:AddServiceConsoleVirtualNic", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__AddServiceConsoleVirtualNicResponse)
		return soap_closesock(soap);
	ns2__AddServiceConsoleVirtualNicResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__AddServiceConsoleVirtualNicResponse->soap_get(soap, "ns2:AddServiceConsoleVirtualNicResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RemoveServiceConsoleVirtualNic(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RemoveServiceConsoleVirtualNicRequestType *ns2__RemoveServiceConsoleVirtualNic, _ns2__RemoveServiceConsoleVirtualNicResponse *ns2__RemoveServiceConsoleVirtualNicResponse)
{	struct __ns2__RemoveServiceConsoleVirtualNic soap_tmp___ns2__RemoveServiceConsoleVirtualNic;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RemoveServiceConsoleVirtualNic.ns2__RemoveServiceConsoleVirtualNic = ns2__RemoveServiceConsoleVirtualNic;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RemoveServiceConsoleVirtualNic(soap, &soap_tmp___ns2__RemoveServiceConsoleVirtualNic);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RemoveServiceConsoleVirtualNic(soap, &soap_tmp___ns2__RemoveServiceConsoleVirtualNic, "-ns2:RemoveServiceConsoleVirtualNic", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RemoveServiceConsoleVirtualNic(soap, &soap_tmp___ns2__RemoveServiceConsoleVirtualNic, "-ns2:RemoveServiceConsoleVirtualNic", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RemoveServiceConsoleVirtualNicResponse)
		return soap_closesock(soap);
	ns2__RemoveServiceConsoleVirtualNicResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RemoveServiceConsoleVirtualNicResponse->soap_get(soap, "ns2:RemoveServiceConsoleVirtualNicResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UpdateServiceConsoleVirtualNic(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UpdateServiceConsoleVirtualNicRequestType *ns2__UpdateServiceConsoleVirtualNic, _ns2__UpdateServiceConsoleVirtualNicResponse *ns2__UpdateServiceConsoleVirtualNicResponse)
{	struct __ns2__UpdateServiceConsoleVirtualNic soap_tmp___ns2__UpdateServiceConsoleVirtualNic;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UpdateServiceConsoleVirtualNic.ns2__UpdateServiceConsoleVirtualNic = ns2__UpdateServiceConsoleVirtualNic;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UpdateServiceConsoleVirtualNic(soap, &soap_tmp___ns2__UpdateServiceConsoleVirtualNic);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UpdateServiceConsoleVirtualNic(soap, &soap_tmp___ns2__UpdateServiceConsoleVirtualNic, "-ns2:UpdateServiceConsoleVirtualNic", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UpdateServiceConsoleVirtualNic(soap, &soap_tmp___ns2__UpdateServiceConsoleVirtualNic, "-ns2:UpdateServiceConsoleVirtualNic", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UpdateServiceConsoleVirtualNicResponse)
		return soap_closesock(soap);
	ns2__UpdateServiceConsoleVirtualNicResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UpdateServiceConsoleVirtualNicResponse->soap_get(soap, "ns2:UpdateServiceConsoleVirtualNicResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RestartServiceConsoleVirtualNic(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RestartServiceConsoleVirtualNicRequestType *ns2__RestartServiceConsoleVirtualNic, _ns2__RestartServiceConsoleVirtualNicResponse *ns2__RestartServiceConsoleVirtualNicResponse)
{	struct __ns2__RestartServiceConsoleVirtualNic soap_tmp___ns2__RestartServiceConsoleVirtualNic;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RestartServiceConsoleVirtualNic.ns2__RestartServiceConsoleVirtualNic = ns2__RestartServiceConsoleVirtualNic;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RestartServiceConsoleVirtualNic(soap, &soap_tmp___ns2__RestartServiceConsoleVirtualNic);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RestartServiceConsoleVirtualNic(soap, &soap_tmp___ns2__RestartServiceConsoleVirtualNic, "-ns2:RestartServiceConsoleVirtualNic", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RestartServiceConsoleVirtualNic(soap, &soap_tmp___ns2__RestartServiceConsoleVirtualNic, "-ns2:RestartServiceConsoleVirtualNic", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RestartServiceConsoleVirtualNicResponse)
		return soap_closesock(soap);
	ns2__RestartServiceConsoleVirtualNicResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RestartServiceConsoleVirtualNicResponse->soap_get(soap, "ns2:RestartServiceConsoleVirtualNicResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RefreshNetworkSystem(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RefreshNetworkSystemRequestType *ns2__RefreshNetworkSystem, _ns2__RefreshNetworkSystemResponse *ns2__RefreshNetworkSystemResponse)
{	struct __ns2__RefreshNetworkSystem soap_tmp___ns2__RefreshNetworkSystem;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RefreshNetworkSystem.ns2__RefreshNetworkSystem = ns2__RefreshNetworkSystem;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RefreshNetworkSystem(soap, &soap_tmp___ns2__RefreshNetworkSystem);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RefreshNetworkSystem(soap, &soap_tmp___ns2__RefreshNetworkSystem, "-ns2:RefreshNetworkSystem", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RefreshNetworkSystem(soap, &soap_tmp___ns2__RefreshNetworkSystem, "-ns2:RefreshNetworkSystem", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RefreshNetworkSystemResponse)
		return soap_closesock(soap);
	ns2__RefreshNetworkSystemResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RefreshNetworkSystemResponse->soap_get(soap, "ns2:RefreshNetworkSystemResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__CheckHostPatch_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__CheckHostPatchRequestType *ns2__CheckHostPatch_USCORETask, _ns2__CheckHostPatch_USCORETaskResponse *ns2__CheckHostPatch_USCORETaskResponse)
{	struct __ns2__CheckHostPatch_USCORETask soap_tmp___ns2__CheckHostPatch_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__CheckHostPatch_USCORETask.ns2__CheckHostPatch_USCORETask = ns2__CheckHostPatch_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__CheckHostPatch_USCORETask(soap, &soap_tmp___ns2__CheckHostPatch_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__CheckHostPatch_USCORETask(soap, &soap_tmp___ns2__CheckHostPatch_USCORETask, "-ns2:CheckHostPatch_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__CheckHostPatch_USCORETask(soap, &soap_tmp___ns2__CheckHostPatch_USCORETask, "-ns2:CheckHostPatch_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CheckHostPatch_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__CheckHostPatch_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CheckHostPatch_USCORETaskResponse->soap_get(soap, "ns2:CheckHostPatch_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ScanHostPatch_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ScanHostPatchRequestType *ns2__ScanHostPatch_USCORETask, _ns2__ScanHostPatch_USCORETaskResponse *ns2__ScanHostPatch_USCORETaskResponse)
{	struct __ns2__ScanHostPatch_USCORETask soap_tmp___ns2__ScanHostPatch_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ScanHostPatch_USCORETask.ns2__ScanHostPatch_USCORETask = ns2__ScanHostPatch_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ScanHostPatch_USCORETask(soap, &soap_tmp___ns2__ScanHostPatch_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ScanHostPatch_USCORETask(soap, &soap_tmp___ns2__ScanHostPatch_USCORETask, "-ns2:ScanHostPatch_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ScanHostPatch_USCORETask(soap, &soap_tmp___ns2__ScanHostPatch_USCORETask, "-ns2:ScanHostPatch_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ScanHostPatch_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__ScanHostPatch_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ScanHostPatch_USCORETaskResponse->soap_get(soap, "ns2:ScanHostPatch_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ScanHostPatchV2_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ScanHostPatchV2RequestType *ns2__ScanHostPatchV2_USCORETask, _ns2__ScanHostPatchV2_USCORETaskResponse *ns2__ScanHostPatchV2_USCORETaskResponse)
{	struct __ns2__ScanHostPatchV2_USCORETask soap_tmp___ns2__ScanHostPatchV2_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ScanHostPatchV2_USCORETask.ns2__ScanHostPatchV2_USCORETask = ns2__ScanHostPatchV2_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ScanHostPatchV2_USCORETask(soap, &soap_tmp___ns2__ScanHostPatchV2_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ScanHostPatchV2_USCORETask(soap, &soap_tmp___ns2__ScanHostPatchV2_USCORETask, "-ns2:ScanHostPatchV2_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ScanHostPatchV2_USCORETask(soap, &soap_tmp___ns2__ScanHostPatchV2_USCORETask, "-ns2:ScanHostPatchV2_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ScanHostPatchV2_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__ScanHostPatchV2_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ScanHostPatchV2_USCORETaskResponse->soap_get(soap, "ns2:ScanHostPatchV2_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__StageHostPatch_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__StageHostPatchRequestType *ns2__StageHostPatch_USCORETask, _ns2__StageHostPatch_USCORETaskResponse *ns2__StageHostPatch_USCORETaskResponse)
{	struct __ns2__StageHostPatch_USCORETask soap_tmp___ns2__StageHostPatch_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__StageHostPatch_USCORETask.ns2__StageHostPatch_USCORETask = ns2__StageHostPatch_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__StageHostPatch_USCORETask(soap, &soap_tmp___ns2__StageHostPatch_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__StageHostPatch_USCORETask(soap, &soap_tmp___ns2__StageHostPatch_USCORETask, "-ns2:StageHostPatch_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__StageHostPatch_USCORETask(soap, &soap_tmp___ns2__StageHostPatch_USCORETask, "-ns2:StageHostPatch_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__StageHostPatch_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__StageHostPatch_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__StageHostPatch_USCORETaskResponse->soap_get(soap, "ns2:StageHostPatch_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__InstallHostPatch_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__InstallHostPatchRequestType *ns2__InstallHostPatch_USCORETask, _ns2__InstallHostPatch_USCORETaskResponse *ns2__InstallHostPatch_USCORETaskResponse)
{	struct __ns2__InstallHostPatch_USCORETask soap_tmp___ns2__InstallHostPatch_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__InstallHostPatch_USCORETask.ns2__InstallHostPatch_USCORETask = ns2__InstallHostPatch_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__InstallHostPatch_USCORETask(soap, &soap_tmp___ns2__InstallHostPatch_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__InstallHostPatch_USCORETask(soap, &soap_tmp___ns2__InstallHostPatch_USCORETask, "-ns2:InstallHostPatch_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__InstallHostPatch_USCORETask(soap, &soap_tmp___ns2__InstallHostPatch_USCORETask, "-ns2:InstallHostPatch_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__InstallHostPatch_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__InstallHostPatch_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__InstallHostPatch_USCORETaskResponse->soap_get(soap, "ns2:InstallHostPatch_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__InstallHostPatchV2_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__InstallHostPatchV2RequestType *ns2__InstallHostPatchV2_USCORETask, _ns2__InstallHostPatchV2_USCORETaskResponse *ns2__InstallHostPatchV2_USCORETaskResponse)
{	struct __ns2__InstallHostPatchV2_USCORETask soap_tmp___ns2__InstallHostPatchV2_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__InstallHostPatchV2_USCORETask.ns2__InstallHostPatchV2_USCORETask = ns2__InstallHostPatchV2_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__InstallHostPatchV2_USCORETask(soap, &soap_tmp___ns2__InstallHostPatchV2_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__InstallHostPatchV2_USCORETask(soap, &soap_tmp___ns2__InstallHostPatchV2_USCORETask, "-ns2:InstallHostPatchV2_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__InstallHostPatchV2_USCORETask(soap, &soap_tmp___ns2__InstallHostPatchV2_USCORETask, "-ns2:InstallHostPatchV2_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__InstallHostPatchV2_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__InstallHostPatchV2_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__InstallHostPatchV2_USCORETaskResponse->soap_get(soap, "ns2:InstallHostPatchV2_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UninstallHostPatch_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UninstallHostPatchRequestType *ns2__UninstallHostPatch_USCORETask, _ns2__UninstallHostPatch_USCORETaskResponse *ns2__UninstallHostPatch_USCORETaskResponse)
{	struct __ns2__UninstallHostPatch_USCORETask soap_tmp___ns2__UninstallHostPatch_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UninstallHostPatch_USCORETask.ns2__UninstallHostPatch_USCORETask = ns2__UninstallHostPatch_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UninstallHostPatch_USCORETask(soap, &soap_tmp___ns2__UninstallHostPatch_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UninstallHostPatch_USCORETask(soap, &soap_tmp___ns2__UninstallHostPatch_USCORETask, "-ns2:UninstallHostPatch_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UninstallHostPatch_USCORETask(soap, &soap_tmp___ns2__UninstallHostPatch_USCORETask, "-ns2:UninstallHostPatch_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UninstallHostPatch_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__UninstallHostPatch_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UninstallHostPatch_USCORETaskResponse->soap_get(soap, "ns2:UninstallHostPatch_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryHostPatch_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryHostPatchRequestType *ns2__QueryHostPatch_USCORETask, _ns2__QueryHostPatch_USCORETaskResponse *ns2__QueryHostPatch_USCORETaskResponse)
{	struct __ns2__QueryHostPatch_USCORETask soap_tmp___ns2__QueryHostPatch_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryHostPatch_USCORETask.ns2__QueryHostPatch_USCORETask = ns2__QueryHostPatch_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryHostPatch_USCORETask(soap, &soap_tmp___ns2__QueryHostPatch_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryHostPatch_USCORETask(soap, &soap_tmp___ns2__QueryHostPatch_USCORETask, "-ns2:QueryHostPatch_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryHostPatch_USCORETask(soap, &soap_tmp___ns2__QueryHostPatch_USCORETask, "-ns2:QueryHostPatch_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryHostPatch_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__QueryHostPatch_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryHostPatch_USCORETaskResponse->soap_get(soap, "ns2:QueryHostPatch_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__Refresh(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RefreshRequestType *ns2__Refresh, _ns2__RefreshResponse *ns2__RefreshResponse)
{	struct __ns2__Refresh soap_tmp___ns2__Refresh;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__Refresh.ns2__Refresh = ns2__Refresh;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__Refresh(soap, &soap_tmp___ns2__Refresh);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__Refresh(soap, &soap_tmp___ns2__Refresh, "-ns2:Refresh", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__Refresh(soap, &soap_tmp___ns2__Refresh, "-ns2:Refresh", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RefreshResponse)
		return soap_closesock(soap);
	ns2__RefreshResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RefreshResponse->soap_get(soap, "ns2:RefreshResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UpdatePassthruConfig(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UpdatePassthruConfigRequestType *ns2__UpdatePassthruConfig, _ns2__UpdatePassthruConfigResponse *ns2__UpdatePassthruConfigResponse)
{	struct __ns2__UpdatePassthruConfig soap_tmp___ns2__UpdatePassthruConfig;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UpdatePassthruConfig.ns2__UpdatePassthruConfig = ns2__UpdatePassthruConfig;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UpdatePassthruConfig(soap, &soap_tmp___ns2__UpdatePassthruConfig);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UpdatePassthruConfig(soap, &soap_tmp___ns2__UpdatePassthruConfig, "-ns2:UpdatePassthruConfig", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UpdatePassthruConfig(soap, &soap_tmp___ns2__UpdatePassthruConfig, "-ns2:UpdatePassthruConfig", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UpdatePassthruConfigResponse)
		return soap_closesock(soap);
	ns2__UpdatePassthruConfigResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UpdatePassthruConfigResponse->soap_get(soap, "ns2:UpdatePassthruConfigResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ConfigurePowerPolicy(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ConfigurePowerPolicyRequestType *ns2__ConfigurePowerPolicy, _ns2__ConfigurePowerPolicyResponse *ns2__ConfigurePowerPolicyResponse)
{	struct __ns2__ConfigurePowerPolicy soap_tmp___ns2__ConfigurePowerPolicy;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ConfigurePowerPolicy.ns2__ConfigurePowerPolicy = ns2__ConfigurePowerPolicy;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ConfigurePowerPolicy(soap, &soap_tmp___ns2__ConfigurePowerPolicy);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ConfigurePowerPolicy(soap, &soap_tmp___ns2__ConfigurePowerPolicy, "-ns2:ConfigurePowerPolicy", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ConfigurePowerPolicy(soap, &soap_tmp___ns2__ConfigurePowerPolicy, "-ns2:ConfigurePowerPolicy", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ConfigurePowerPolicyResponse)
		return soap_closesock(soap);
	ns2__ConfigurePowerPolicyResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ConfigurePowerPolicyResponse->soap_get(soap, "ns2:ConfigurePowerPolicyResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UpdateServicePolicy(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UpdateServicePolicyRequestType *ns2__UpdateServicePolicy, _ns2__UpdateServicePolicyResponse *ns2__UpdateServicePolicyResponse)
{	struct __ns2__UpdateServicePolicy soap_tmp___ns2__UpdateServicePolicy;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UpdateServicePolicy.ns2__UpdateServicePolicy = ns2__UpdateServicePolicy;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UpdateServicePolicy(soap, &soap_tmp___ns2__UpdateServicePolicy);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UpdateServicePolicy(soap, &soap_tmp___ns2__UpdateServicePolicy, "-ns2:UpdateServicePolicy", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UpdateServicePolicy(soap, &soap_tmp___ns2__UpdateServicePolicy, "-ns2:UpdateServicePolicy", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UpdateServicePolicyResponse)
		return soap_closesock(soap);
	ns2__UpdateServicePolicyResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UpdateServicePolicyResponse->soap_get(soap, "ns2:UpdateServicePolicyResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__StartService(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__StartServiceRequestType *ns2__StartService, _ns2__StartServiceResponse *ns2__StartServiceResponse)
{	struct __ns2__StartService soap_tmp___ns2__StartService;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__StartService.ns2__StartService = ns2__StartService;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__StartService(soap, &soap_tmp___ns2__StartService);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__StartService(soap, &soap_tmp___ns2__StartService, "-ns2:StartService", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__StartService(soap, &soap_tmp___ns2__StartService, "-ns2:StartService", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__StartServiceResponse)
		return soap_closesock(soap);
	ns2__StartServiceResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__StartServiceResponse->soap_get(soap, "ns2:StartServiceResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__StopService(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__StopServiceRequestType *ns2__StopService, _ns2__StopServiceResponse *ns2__StopServiceResponse)
{	struct __ns2__StopService soap_tmp___ns2__StopService;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__StopService.ns2__StopService = ns2__StopService;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__StopService(soap, &soap_tmp___ns2__StopService);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__StopService(soap, &soap_tmp___ns2__StopService, "-ns2:StopService", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__StopService(soap, &soap_tmp___ns2__StopService, "-ns2:StopService", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__StopServiceResponse)
		return soap_closesock(soap);
	ns2__StopServiceResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__StopServiceResponse->soap_get(soap, "ns2:StopServiceResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RestartService(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RestartServiceRequestType *ns2__RestartService, _ns2__RestartServiceResponse *ns2__RestartServiceResponse)
{	struct __ns2__RestartService soap_tmp___ns2__RestartService;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RestartService.ns2__RestartService = ns2__RestartService;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RestartService(soap, &soap_tmp___ns2__RestartService);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RestartService(soap, &soap_tmp___ns2__RestartService, "-ns2:RestartService", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RestartService(soap, &soap_tmp___ns2__RestartService, "-ns2:RestartService", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RestartServiceResponse)
		return soap_closesock(soap);
	ns2__RestartServiceResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RestartServiceResponse->soap_get(soap, "ns2:RestartServiceResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UninstallService(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UninstallServiceRequestType *ns2__UninstallService, _ns2__UninstallServiceResponse *ns2__UninstallServiceResponse)
{	struct __ns2__UninstallService soap_tmp___ns2__UninstallService;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UninstallService.ns2__UninstallService = ns2__UninstallService;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UninstallService(soap, &soap_tmp___ns2__UninstallService);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UninstallService(soap, &soap_tmp___ns2__UninstallService, "-ns2:UninstallService", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UninstallService(soap, &soap_tmp___ns2__UninstallService, "-ns2:UninstallService", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UninstallServiceResponse)
		return soap_closesock(soap);
	ns2__UninstallServiceResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UninstallServiceResponse->soap_get(soap, "ns2:UninstallServiceResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RefreshServices(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RefreshServicesRequestType *ns2__RefreshServices, _ns2__RefreshServicesResponse *ns2__RefreshServicesResponse)
{	struct __ns2__RefreshServices soap_tmp___ns2__RefreshServices;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RefreshServices.ns2__RefreshServices = ns2__RefreshServices;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RefreshServices(soap, &soap_tmp___ns2__RefreshServices);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RefreshServices(soap, &soap_tmp___ns2__RefreshServices, "-ns2:RefreshServices", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RefreshServices(soap, &soap_tmp___ns2__RefreshServices, "-ns2:RefreshServices", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RefreshServicesResponse)
		return soap_closesock(soap);
	ns2__RefreshServicesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RefreshServicesResponse->soap_get(soap, "ns2:RefreshServicesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ReconfigureSnmpAgent(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ReconfigureSnmpAgentRequestType *ns2__ReconfigureSnmpAgent, _ns2__ReconfigureSnmpAgentResponse *ns2__ReconfigureSnmpAgentResponse)
{	struct __ns2__ReconfigureSnmpAgent soap_tmp___ns2__ReconfigureSnmpAgent;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ReconfigureSnmpAgent.ns2__ReconfigureSnmpAgent = ns2__ReconfigureSnmpAgent;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ReconfigureSnmpAgent(soap, &soap_tmp___ns2__ReconfigureSnmpAgent);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ReconfigureSnmpAgent(soap, &soap_tmp___ns2__ReconfigureSnmpAgent, "-ns2:ReconfigureSnmpAgent", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ReconfigureSnmpAgent(soap, &soap_tmp___ns2__ReconfigureSnmpAgent, "-ns2:ReconfigureSnmpAgent", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ReconfigureSnmpAgentResponse)
		return soap_closesock(soap);
	ns2__ReconfigureSnmpAgentResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ReconfigureSnmpAgentResponse->soap_get(soap, "ns2:ReconfigureSnmpAgentResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__SendTestNotification(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__SendTestNotificationRequestType *ns2__SendTestNotification, _ns2__SendTestNotificationResponse *ns2__SendTestNotificationResponse)
{	struct __ns2__SendTestNotification soap_tmp___ns2__SendTestNotification;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__SendTestNotification.ns2__SendTestNotification = ns2__SendTestNotification;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__SendTestNotification(soap, &soap_tmp___ns2__SendTestNotification);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__SendTestNotification(soap, &soap_tmp___ns2__SendTestNotification, "-ns2:SendTestNotification", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__SendTestNotification(soap, &soap_tmp___ns2__SendTestNotification, "-ns2:SendTestNotification", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__SendTestNotificationResponse)
		return soap_closesock(soap);
	ns2__SendTestNotificationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__SendTestNotificationResponse->soap_get(soap, "ns2:SendTestNotificationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RetrieveDiskPartitionInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RetrieveDiskPartitionInfoRequestType *ns2__RetrieveDiskPartitionInfo, _ns2__RetrieveDiskPartitionInfoResponse *ns2__RetrieveDiskPartitionInfoResponse)
{	struct __ns2__RetrieveDiskPartitionInfo soap_tmp___ns2__RetrieveDiskPartitionInfo;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RetrieveDiskPartitionInfo.ns2__RetrieveDiskPartitionInfo = ns2__RetrieveDiskPartitionInfo;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RetrieveDiskPartitionInfo(soap, &soap_tmp___ns2__RetrieveDiskPartitionInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RetrieveDiskPartitionInfo(soap, &soap_tmp___ns2__RetrieveDiskPartitionInfo, "-ns2:RetrieveDiskPartitionInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RetrieveDiskPartitionInfo(soap, &soap_tmp___ns2__RetrieveDiskPartitionInfo, "-ns2:RetrieveDiskPartitionInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RetrieveDiskPartitionInfoResponse)
		return soap_closesock(soap);
	ns2__RetrieveDiskPartitionInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RetrieveDiskPartitionInfoResponse->soap_get(soap, "ns2:RetrieveDiskPartitionInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ComputeDiskPartitionInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ComputeDiskPartitionInfoRequestType *ns2__ComputeDiskPartitionInfo, _ns2__ComputeDiskPartitionInfoResponse *ns2__ComputeDiskPartitionInfoResponse)
{	struct __ns2__ComputeDiskPartitionInfo soap_tmp___ns2__ComputeDiskPartitionInfo;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ComputeDiskPartitionInfo.ns2__ComputeDiskPartitionInfo = ns2__ComputeDiskPartitionInfo;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ComputeDiskPartitionInfo(soap, &soap_tmp___ns2__ComputeDiskPartitionInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ComputeDiskPartitionInfo(soap, &soap_tmp___ns2__ComputeDiskPartitionInfo, "-ns2:ComputeDiskPartitionInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ComputeDiskPartitionInfo(soap, &soap_tmp___ns2__ComputeDiskPartitionInfo, "-ns2:ComputeDiskPartitionInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ComputeDiskPartitionInfoResponse)
		return soap_closesock(soap);
	ns2__ComputeDiskPartitionInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ComputeDiskPartitionInfoResponse->soap_get(soap, "ns2:ComputeDiskPartitionInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ComputeDiskPartitionInfoForResize(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ComputeDiskPartitionInfoForResizeRequestType *ns2__ComputeDiskPartitionInfoForResize, _ns2__ComputeDiskPartitionInfoForResizeResponse *ns2__ComputeDiskPartitionInfoForResizeResponse)
{	struct __ns2__ComputeDiskPartitionInfoForResize soap_tmp___ns2__ComputeDiskPartitionInfoForResize;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ComputeDiskPartitionInfoForResize.ns2__ComputeDiskPartitionInfoForResize = ns2__ComputeDiskPartitionInfoForResize;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ComputeDiskPartitionInfoForResize(soap, &soap_tmp___ns2__ComputeDiskPartitionInfoForResize);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ComputeDiskPartitionInfoForResize(soap, &soap_tmp___ns2__ComputeDiskPartitionInfoForResize, "-ns2:ComputeDiskPartitionInfoForResize", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ComputeDiskPartitionInfoForResize(soap, &soap_tmp___ns2__ComputeDiskPartitionInfoForResize, "-ns2:ComputeDiskPartitionInfoForResize", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ComputeDiskPartitionInfoForResizeResponse)
		return soap_closesock(soap);
	ns2__ComputeDiskPartitionInfoForResizeResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ComputeDiskPartitionInfoForResizeResponse->soap_get(soap, "ns2:ComputeDiskPartitionInfoForResizeResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UpdateDiskPartitions(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UpdateDiskPartitionsRequestType *ns2__UpdateDiskPartitions, _ns2__UpdateDiskPartitionsResponse *ns2__UpdateDiskPartitionsResponse)
{	struct __ns2__UpdateDiskPartitions soap_tmp___ns2__UpdateDiskPartitions;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UpdateDiskPartitions.ns2__UpdateDiskPartitions = ns2__UpdateDiskPartitions;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UpdateDiskPartitions(soap, &soap_tmp___ns2__UpdateDiskPartitions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UpdateDiskPartitions(soap, &soap_tmp___ns2__UpdateDiskPartitions, "-ns2:UpdateDiskPartitions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UpdateDiskPartitions(soap, &soap_tmp___ns2__UpdateDiskPartitions, "-ns2:UpdateDiskPartitions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UpdateDiskPartitionsResponse)
		return soap_closesock(soap);
	ns2__UpdateDiskPartitionsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UpdateDiskPartitionsResponse->soap_get(soap, "ns2:UpdateDiskPartitionsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__FormatVmfs(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__FormatVmfsRequestType *ns2__FormatVmfs, _ns2__FormatVmfsResponse *ns2__FormatVmfsResponse)
{	struct __ns2__FormatVmfs soap_tmp___ns2__FormatVmfs;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__FormatVmfs.ns2__FormatVmfs = ns2__FormatVmfs;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__FormatVmfs(soap, &soap_tmp___ns2__FormatVmfs);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__FormatVmfs(soap, &soap_tmp___ns2__FormatVmfs, "-ns2:FormatVmfs", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__FormatVmfs(soap, &soap_tmp___ns2__FormatVmfs, "-ns2:FormatVmfs", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__FormatVmfsResponse)
		return soap_closesock(soap);
	ns2__FormatVmfsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__FormatVmfsResponse->soap_get(soap, "ns2:FormatVmfsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__MountVmfsVolume(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__MountVmfsVolumeRequestType *ns2__MountVmfsVolume, _ns2__MountVmfsVolumeResponse *ns2__MountVmfsVolumeResponse)
{	struct __ns2__MountVmfsVolume soap_tmp___ns2__MountVmfsVolume;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__MountVmfsVolume.ns2__MountVmfsVolume = ns2__MountVmfsVolume;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__MountVmfsVolume(soap, &soap_tmp___ns2__MountVmfsVolume);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__MountVmfsVolume(soap, &soap_tmp___ns2__MountVmfsVolume, "-ns2:MountVmfsVolume", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__MountVmfsVolume(soap, &soap_tmp___ns2__MountVmfsVolume, "-ns2:MountVmfsVolume", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__MountVmfsVolumeResponse)
		return soap_closesock(soap);
	ns2__MountVmfsVolumeResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__MountVmfsVolumeResponse->soap_get(soap, "ns2:MountVmfsVolumeResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UnmountVmfsVolume(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UnmountVmfsVolumeRequestType *ns2__UnmountVmfsVolume, _ns2__UnmountVmfsVolumeResponse *ns2__UnmountVmfsVolumeResponse)
{	struct __ns2__UnmountVmfsVolume soap_tmp___ns2__UnmountVmfsVolume;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UnmountVmfsVolume.ns2__UnmountVmfsVolume = ns2__UnmountVmfsVolume;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UnmountVmfsVolume(soap, &soap_tmp___ns2__UnmountVmfsVolume);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UnmountVmfsVolume(soap, &soap_tmp___ns2__UnmountVmfsVolume, "-ns2:UnmountVmfsVolume", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UnmountVmfsVolume(soap, &soap_tmp___ns2__UnmountVmfsVolume, "-ns2:UnmountVmfsVolume", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UnmountVmfsVolumeResponse)
		return soap_closesock(soap);
	ns2__UnmountVmfsVolumeResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UnmountVmfsVolumeResponse->soap_get(soap, "ns2:UnmountVmfsVolumeResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__DeleteVmfsVolumeState(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__DeleteVmfsVolumeStateRequestType *ns2__DeleteVmfsVolumeState, _ns2__DeleteVmfsVolumeStateResponse *ns2__DeleteVmfsVolumeStateResponse)
{	struct __ns2__DeleteVmfsVolumeState soap_tmp___ns2__DeleteVmfsVolumeState;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__DeleteVmfsVolumeState.ns2__DeleteVmfsVolumeState = ns2__DeleteVmfsVolumeState;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__DeleteVmfsVolumeState(soap, &soap_tmp___ns2__DeleteVmfsVolumeState);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__DeleteVmfsVolumeState(soap, &soap_tmp___ns2__DeleteVmfsVolumeState, "-ns2:DeleteVmfsVolumeState", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__DeleteVmfsVolumeState(soap, &soap_tmp___ns2__DeleteVmfsVolumeState, "-ns2:DeleteVmfsVolumeState", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__DeleteVmfsVolumeStateResponse)
		return soap_closesock(soap);
	ns2__DeleteVmfsVolumeStateResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__DeleteVmfsVolumeStateResponse->soap_get(soap, "ns2:DeleteVmfsVolumeStateResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RescanVmfs(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RescanVmfsRequestType *ns2__RescanVmfs, _ns2__RescanVmfsResponse *ns2__RescanVmfsResponse)
{	struct __ns2__RescanVmfs soap_tmp___ns2__RescanVmfs;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RescanVmfs.ns2__RescanVmfs = ns2__RescanVmfs;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RescanVmfs(soap, &soap_tmp___ns2__RescanVmfs);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RescanVmfs(soap, &soap_tmp___ns2__RescanVmfs, "-ns2:RescanVmfs", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RescanVmfs(soap, &soap_tmp___ns2__RescanVmfs, "-ns2:RescanVmfs", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RescanVmfsResponse)
		return soap_closesock(soap);
	ns2__RescanVmfsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RescanVmfsResponse->soap_get(soap, "ns2:RescanVmfsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__AttachVmfsExtent(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__AttachVmfsExtentRequestType *ns2__AttachVmfsExtent, _ns2__AttachVmfsExtentResponse *ns2__AttachVmfsExtentResponse)
{	struct __ns2__AttachVmfsExtent soap_tmp___ns2__AttachVmfsExtent;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__AttachVmfsExtent.ns2__AttachVmfsExtent = ns2__AttachVmfsExtent;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__AttachVmfsExtent(soap, &soap_tmp___ns2__AttachVmfsExtent);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__AttachVmfsExtent(soap, &soap_tmp___ns2__AttachVmfsExtent, "-ns2:AttachVmfsExtent", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__AttachVmfsExtent(soap, &soap_tmp___ns2__AttachVmfsExtent, "-ns2:AttachVmfsExtent", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__AttachVmfsExtentResponse)
		return soap_closesock(soap);
	ns2__AttachVmfsExtentResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__AttachVmfsExtentResponse->soap_get(soap, "ns2:AttachVmfsExtentResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ExpandVmfsExtent(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ExpandVmfsExtentRequestType *ns2__ExpandVmfsExtent, _ns2__ExpandVmfsExtentResponse *ns2__ExpandVmfsExtentResponse)
{	struct __ns2__ExpandVmfsExtent soap_tmp___ns2__ExpandVmfsExtent;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ExpandVmfsExtent.ns2__ExpandVmfsExtent = ns2__ExpandVmfsExtent;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ExpandVmfsExtent(soap, &soap_tmp___ns2__ExpandVmfsExtent);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ExpandVmfsExtent(soap, &soap_tmp___ns2__ExpandVmfsExtent, "-ns2:ExpandVmfsExtent", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ExpandVmfsExtent(soap, &soap_tmp___ns2__ExpandVmfsExtent, "-ns2:ExpandVmfsExtent", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ExpandVmfsExtentResponse)
		return soap_closesock(soap);
	ns2__ExpandVmfsExtentResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ExpandVmfsExtentResponse->soap_get(soap, "ns2:ExpandVmfsExtentResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UpgradeVmfs(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UpgradeVmfsRequestType *ns2__UpgradeVmfs, _ns2__UpgradeVmfsResponse *ns2__UpgradeVmfsResponse)
{	struct __ns2__UpgradeVmfs soap_tmp___ns2__UpgradeVmfs;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UpgradeVmfs.ns2__UpgradeVmfs = ns2__UpgradeVmfs;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UpgradeVmfs(soap, &soap_tmp___ns2__UpgradeVmfs);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UpgradeVmfs(soap, &soap_tmp___ns2__UpgradeVmfs, "-ns2:UpgradeVmfs", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UpgradeVmfs(soap, &soap_tmp___ns2__UpgradeVmfs, "-ns2:UpgradeVmfs", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UpgradeVmfsResponse)
		return soap_closesock(soap);
	ns2__UpgradeVmfsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UpgradeVmfsResponse->soap_get(soap, "ns2:UpgradeVmfsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UpgradeVmLayout(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UpgradeVmLayoutRequestType *ns2__UpgradeVmLayout, _ns2__UpgradeVmLayoutResponse *ns2__UpgradeVmLayoutResponse)
{	struct __ns2__UpgradeVmLayout soap_tmp___ns2__UpgradeVmLayout;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UpgradeVmLayout.ns2__UpgradeVmLayout = ns2__UpgradeVmLayout;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UpgradeVmLayout(soap, &soap_tmp___ns2__UpgradeVmLayout);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UpgradeVmLayout(soap, &soap_tmp___ns2__UpgradeVmLayout, "-ns2:UpgradeVmLayout", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UpgradeVmLayout(soap, &soap_tmp___ns2__UpgradeVmLayout, "-ns2:UpgradeVmLayout", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UpgradeVmLayoutResponse)
		return soap_closesock(soap);
	ns2__UpgradeVmLayoutResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UpgradeVmLayoutResponse->soap_get(soap, "ns2:UpgradeVmLayoutResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryUnresolvedVmfsVolume(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryUnresolvedVmfsVolumeRequestType *ns2__QueryUnresolvedVmfsVolume, _ns2__QueryUnresolvedVmfsVolumeResponse *ns2__QueryUnresolvedVmfsVolumeResponse)
{	struct __ns2__QueryUnresolvedVmfsVolume soap_tmp___ns2__QueryUnresolvedVmfsVolume;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryUnresolvedVmfsVolume.ns2__QueryUnresolvedVmfsVolume = ns2__QueryUnresolvedVmfsVolume;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryUnresolvedVmfsVolume(soap, &soap_tmp___ns2__QueryUnresolvedVmfsVolume);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryUnresolvedVmfsVolume(soap, &soap_tmp___ns2__QueryUnresolvedVmfsVolume, "-ns2:QueryUnresolvedVmfsVolume", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryUnresolvedVmfsVolume(soap, &soap_tmp___ns2__QueryUnresolvedVmfsVolume, "-ns2:QueryUnresolvedVmfsVolume", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryUnresolvedVmfsVolumeResponse)
		return soap_closesock(soap);
	ns2__QueryUnresolvedVmfsVolumeResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryUnresolvedVmfsVolumeResponse->soap_get(soap, "ns2:QueryUnresolvedVmfsVolumeResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ResolveMultipleUnresolvedVmfsVolumes(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ResolveMultipleUnresolvedVmfsVolumesRequestType *ns2__ResolveMultipleUnresolvedVmfsVolumes, _ns2__ResolveMultipleUnresolvedVmfsVolumesResponse *ns2__ResolveMultipleUnresolvedVmfsVolumesResponse)
{	struct __ns2__ResolveMultipleUnresolvedVmfsVolumes soap_tmp___ns2__ResolveMultipleUnresolvedVmfsVolumes;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ResolveMultipleUnresolvedVmfsVolumes.ns2__ResolveMultipleUnresolvedVmfsVolumes = ns2__ResolveMultipleUnresolvedVmfsVolumes;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ResolveMultipleUnresolvedVmfsVolumes(soap, &soap_tmp___ns2__ResolveMultipleUnresolvedVmfsVolumes);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ResolveMultipleUnresolvedVmfsVolumes(soap, &soap_tmp___ns2__ResolveMultipleUnresolvedVmfsVolumes, "-ns2:ResolveMultipleUnresolvedVmfsVolumes", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ResolveMultipleUnresolvedVmfsVolumes(soap, &soap_tmp___ns2__ResolveMultipleUnresolvedVmfsVolumes, "-ns2:ResolveMultipleUnresolvedVmfsVolumes", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ResolveMultipleUnresolvedVmfsVolumesResponse)
		return soap_closesock(soap);
	ns2__ResolveMultipleUnresolvedVmfsVolumesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ResolveMultipleUnresolvedVmfsVolumesResponse->soap_get(soap, "ns2:ResolveMultipleUnresolvedVmfsVolumesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ResolveMultipleUnresolvedVmfsVolumesEx_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ResolveMultipleUnresolvedVmfsVolumesExRequestType *ns2__ResolveMultipleUnresolvedVmfsVolumesEx_USCORETask, _ns2__ResolveMultipleUnresolvedVmfsVolumesEx_USCORETaskResponse *ns2__ResolveMultipleUnresolvedVmfsVolumesEx_USCORETaskResponse)
{	struct __ns2__ResolveMultipleUnresolvedVmfsVolumesEx_USCORETask soap_tmp___ns2__ResolveMultipleUnresolvedVmfsVolumesEx_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ResolveMultipleUnresolvedVmfsVolumesEx_USCORETask.ns2__ResolveMultipleUnresolvedVmfsVolumesEx_USCORETask = ns2__ResolveMultipleUnresolvedVmfsVolumesEx_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ResolveMultipleUnresolvedVmfsVolumesEx_USCORETask(soap, &soap_tmp___ns2__ResolveMultipleUnresolvedVmfsVolumesEx_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ResolveMultipleUnresolvedVmfsVolumesEx_USCORETask(soap, &soap_tmp___ns2__ResolveMultipleUnresolvedVmfsVolumesEx_USCORETask, "-ns2:ResolveMultipleUnresolvedVmfsVolumesEx_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ResolveMultipleUnresolvedVmfsVolumesEx_USCORETask(soap, &soap_tmp___ns2__ResolveMultipleUnresolvedVmfsVolumesEx_USCORETask, "-ns2:ResolveMultipleUnresolvedVmfsVolumesEx_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ResolveMultipleUnresolvedVmfsVolumesEx_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__ResolveMultipleUnresolvedVmfsVolumesEx_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ResolveMultipleUnresolvedVmfsVolumesEx_USCORETaskResponse->soap_get(soap, "ns2:ResolveMultipleUnresolvedVmfsVolumesEx_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UnmountForceMountedVmfsVolume(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UnmountForceMountedVmfsVolumeRequestType *ns2__UnmountForceMountedVmfsVolume, _ns2__UnmountForceMountedVmfsVolumeResponse *ns2__UnmountForceMountedVmfsVolumeResponse)
{	struct __ns2__UnmountForceMountedVmfsVolume soap_tmp___ns2__UnmountForceMountedVmfsVolume;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UnmountForceMountedVmfsVolume.ns2__UnmountForceMountedVmfsVolume = ns2__UnmountForceMountedVmfsVolume;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UnmountForceMountedVmfsVolume(soap, &soap_tmp___ns2__UnmountForceMountedVmfsVolume);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UnmountForceMountedVmfsVolume(soap, &soap_tmp___ns2__UnmountForceMountedVmfsVolume, "-ns2:UnmountForceMountedVmfsVolume", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UnmountForceMountedVmfsVolume(soap, &soap_tmp___ns2__UnmountForceMountedVmfsVolume, "-ns2:UnmountForceMountedVmfsVolume", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UnmountForceMountedVmfsVolumeResponse)
		return soap_closesock(soap);
	ns2__UnmountForceMountedVmfsVolumeResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UnmountForceMountedVmfsVolumeResponse->soap_get(soap, "ns2:UnmountForceMountedVmfsVolumeResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RescanHba(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RescanHbaRequestType *ns2__RescanHba, _ns2__RescanHbaResponse *ns2__RescanHbaResponse)
{	struct __ns2__RescanHba soap_tmp___ns2__RescanHba;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RescanHba.ns2__RescanHba = ns2__RescanHba;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RescanHba(soap, &soap_tmp___ns2__RescanHba);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RescanHba(soap, &soap_tmp___ns2__RescanHba, "-ns2:RescanHba", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RescanHba(soap, &soap_tmp___ns2__RescanHba, "-ns2:RescanHba", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RescanHbaResponse)
		return soap_closesock(soap);
	ns2__RescanHbaResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RescanHbaResponse->soap_get(soap, "ns2:RescanHbaResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RescanAllHba(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RescanAllHbaRequestType *ns2__RescanAllHba, _ns2__RescanAllHbaResponse *ns2__RescanAllHbaResponse)
{	struct __ns2__RescanAllHba soap_tmp___ns2__RescanAllHba;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RescanAllHba.ns2__RescanAllHba = ns2__RescanAllHba;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RescanAllHba(soap, &soap_tmp___ns2__RescanAllHba);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RescanAllHba(soap, &soap_tmp___ns2__RescanAllHba, "-ns2:RescanAllHba", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RescanAllHba(soap, &soap_tmp___ns2__RescanAllHba, "-ns2:RescanAllHba", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RescanAllHbaResponse)
		return soap_closesock(soap);
	ns2__RescanAllHbaResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RescanAllHbaResponse->soap_get(soap, "ns2:RescanAllHbaResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UpdateSoftwareInternetScsiEnabled(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UpdateSoftwareInternetScsiEnabledRequestType *ns2__UpdateSoftwareInternetScsiEnabled, _ns2__UpdateSoftwareInternetScsiEnabledResponse *ns2__UpdateSoftwareInternetScsiEnabledResponse)
{	struct __ns2__UpdateSoftwareInternetScsiEnabled soap_tmp___ns2__UpdateSoftwareInternetScsiEnabled;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UpdateSoftwareInternetScsiEnabled.ns2__UpdateSoftwareInternetScsiEnabled = ns2__UpdateSoftwareInternetScsiEnabled;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UpdateSoftwareInternetScsiEnabled(soap, &soap_tmp___ns2__UpdateSoftwareInternetScsiEnabled);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UpdateSoftwareInternetScsiEnabled(soap, &soap_tmp___ns2__UpdateSoftwareInternetScsiEnabled, "-ns2:UpdateSoftwareInternetScsiEnabled", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UpdateSoftwareInternetScsiEnabled(soap, &soap_tmp___ns2__UpdateSoftwareInternetScsiEnabled, "-ns2:UpdateSoftwareInternetScsiEnabled", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UpdateSoftwareInternetScsiEnabledResponse)
		return soap_closesock(soap);
	ns2__UpdateSoftwareInternetScsiEnabledResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UpdateSoftwareInternetScsiEnabledResponse->soap_get(soap, "ns2:UpdateSoftwareInternetScsiEnabledResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UpdateInternetScsiDiscoveryProperties(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UpdateInternetScsiDiscoveryPropertiesRequestType *ns2__UpdateInternetScsiDiscoveryProperties, _ns2__UpdateInternetScsiDiscoveryPropertiesResponse *ns2__UpdateInternetScsiDiscoveryPropertiesResponse)
{	struct __ns2__UpdateInternetScsiDiscoveryProperties soap_tmp___ns2__UpdateInternetScsiDiscoveryProperties;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UpdateInternetScsiDiscoveryProperties.ns2__UpdateInternetScsiDiscoveryProperties = ns2__UpdateInternetScsiDiscoveryProperties;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UpdateInternetScsiDiscoveryProperties(soap, &soap_tmp___ns2__UpdateInternetScsiDiscoveryProperties);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UpdateInternetScsiDiscoveryProperties(soap, &soap_tmp___ns2__UpdateInternetScsiDiscoveryProperties, "-ns2:UpdateInternetScsiDiscoveryProperties", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UpdateInternetScsiDiscoveryProperties(soap, &soap_tmp___ns2__UpdateInternetScsiDiscoveryProperties, "-ns2:UpdateInternetScsiDiscoveryProperties", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UpdateInternetScsiDiscoveryPropertiesResponse)
		return soap_closesock(soap);
	ns2__UpdateInternetScsiDiscoveryPropertiesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UpdateInternetScsiDiscoveryPropertiesResponse->soap_get(soap, "ns2:UpdateInternetScsiDiscoveryPropertiesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UpdateInternetScsiAuthenticationProperties(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UpdateInternetScsiAuthenticationPropertiesRequestType *ns2__UpdateInternetScsiAuthenticationProperties, _ns2__UpdateInternetScsiAuthenticationPropertiesResponse *ns2__UpdateInternetScsiAuthenticationPropertiesResponse)
{	struct __ns2__UpdateInternetScsiAuthenticationProperties soap_tmp___ns2__UpdateInternetScsiAuthenticationProperties;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UpdateInternetScsiAuthenticationProperties.ns2__UpdateInternetScsiAuthenticationProperties = ns2__UpdateInternetScsiAuthenticationProperties;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UpdateInternetScsiAuthenticationProperties(soap, &soap_tmp___ns2__UpdateInternetScsiAuthenticationProperties);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UpdateInternetScsiAuthenticationProperties(soap, &soap_tmp___ns2__UpdateInternetScsiAuthenticationProperties, "-ns2:UpdateInternetScsiAuthenticationProperties", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UpdateInternetScsiAuthenticationProperties(soap, &soap_tmp___ns2__UpdateInternetScsiAuthenticationProperties, "-ns2:UpdateInternetScsiAuthenticationProperties", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UpdateInternetScsiAuthenticationPropertiesResponse)
		return soap_closesock(soap);
	ns2__UpdateInternetScsiAuthenticationPropertiesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UpdateInternetScsiAuthenticationPropertiesResponse->soap_get(soap, "ns2:UpdateInternetScsiAuthenticationPropertiesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UpdateInternetScsiDigestProperties(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UpdateInternetScsiDigestPropertiesRequestType *ns2__UpdateInternetScsiDigestProperties, _ns2__UpdateInternetScsiDigestPropertiesResponse *ns2__UpdateInternetScsiDigestPropertiesResponse)
{	struct __ns2__UpdateInternetScsiDigestProperties soap_tmp___ns2__UpdateInternetScsiDigestProperties;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UpdateInternetScsiDigestProperties.ns2__UpdateInternetScsiDigestProperties = ns2__UpdateInternetScsiDigestProperties;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UpdateInternetScsiDigestProperties(soap, &soap_tmp___ns2__UpdateInternetScsiDigestProperties);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UpdateInternetScsiDigestProperties(soap, &soap_tmp___ns2__UpdateInternetScsiDigestProperties, "-ns2:UpdateInternetScsiDigestProperties", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UpdateInternetScsiDigestProperties(soap, &soap_tmp___ns2__UpdateInternetScsiDigestProperties, "-ns2:UpdateInternetScsiDigestProperties", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UpdateInternetScsiDigestPropertiesResponse)
		return soap_closesock(soap);
	ns2__UpdateInternetScsiDigestPropertiesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UpdateInternetScsiDigestPropertiesResponse->soap_get(soap, "ns2:UpdateInternetScsiDigestPropertiesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UpdateInternetScsiAdvancedOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UpdateInternetScsiAdvancedOptionsRequestType *ns2__UpdateInternetScsiAdvancedOptions, _ns2__UpdateInternetScsiAdvancedOptionsResponse *ns2__UpdateInternetScsiAdvancedOptionsResponse)
{	struct __ns2__UpdateInternetScsiAdvancedOptions soap_tmp___ns2__UpdateInternetScsiAdvancedOptions;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UpdateInternetScsiAdvancedOptions.ns2__UpdateInternetScsiAdvancedOptions = ns2__UpdateInternetScsiAdvancedOptions;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UpdateInternetScsiAdvancedOptions(soap, &soap_tmp___ns2__UpdateInternetScsiAdvancedOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UpdateInternetScsiAdvancedOptions(soap, &soap_tmp___ns2__UpdateInternetScsiAdvancedOptions, "-ns2:UpdateInternetScsiAdvancedOptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UpdateInternetScsiAdvancedOptions(soap, &soap_tmp___ns2__UpdateInternetScsiAdvancedOptions, "-ns2:UpdateInternetScsiAdvancedOptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UpdateInternetScsiAdvancedOptionsResponse)
		return soap_closesock(soap);
	ns2__UpdateInternetScsiAdvancedOptionsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UpdateInternetScsiAdvancedOptionsResponse->soap_get(soap, "ns2:UpdateInternetScsiAdvancedOptionsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UpdateInternetScsiIPProperties(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UpdateInternetScsiIPPropertiesRequestType *ns2__UpdateInternetScsiIPProperties, _ns2__UpdateInternetScsiIPPropertiesResponse *ns2__UpdateInternetScsiIPPropertiesResponse)
{	struct __ns2__UpdateInternetScsiIPProperties soap_tmp___ns2__UpdateInternetScsiIPProperties;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UpdateInternetScsiIPProperties.ns2__UpdateInternetScsiIPProperties = ns2__UpdateInternetScsiIPProperties;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UpdateInternetScsiIPProperties(soap, &soap_tmp___ns2__UpdateInternetScsiIPProperties);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UpdateInternetScsiIPProperties(soap, &soap_tmp___ns2__UpdateInternetScsiIPProperties, "-ns2:UpdateInternetScsiIPProperties", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UpdateInternetScsiIPProperties(soap, &soap_tmp___ns2__UpdateInternetScsiIPProperties, "-ns2:UpdateInternetScsiIPProperties", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UpdateInternetScsiIPPropertiesResponse)
		return soap_closesock(soap);
	ns2__UpdateInternetScsiIPPropertiesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UpdateInternetScsiIPPropertiesResponse->soap_get(soap, "ns2:UpdateInternetScsiIPPropertiesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UpdateInternetScsiName(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UpdateInternetScsiNameRequestType *ns2__UpdateInternetScsiName, _ns2__UpdateInternetScsiNameResponse *ns2__UpdateInternetScsiNameResponse)
{	struct __ns2__UpdateInternetScsiName soap_tmp___ns2__UpdateInternetScsiName;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UpdateInternetScsiName.ns2__UpdateInternetScsiName = ns2__UpdateInternetScsiName;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UpdateInternetScsiName(soap, &soap_tmp___ns2__UpdateInternetScsiName);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UpdateInternetScsiName(soap, &soap_tmp___ns2__UpdateInternetScsiName, "-ns2:UpdateInternetScsiName", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UpdateInternetScsiName(soap, &soap_tmp___ns2__UpdateInternetScsiName, "-ns2:UpdateInternetScsiName", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UpdateInternetScsiNameResponse)
		return soap_closesock(soap);
	ns2__UpdateInternetScsiNameResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UpdateInternetScsiNameResponse->soap_get(soap, "ns2:UpdateInternetScsiNameResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UpdateInternetScsiAlias(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UpdateInternetScsiAliasRequestType *ns2__UpdateInternetScsiAlias, _ns2__UpdateInternetScsiAliasResponse *ns2__UpdateInternetScsiAliasResponse)
{	struct __ns2__UpdateInternetScsiAlias soap_tmp___ns2__UpdateInternetScsiAlias;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UpdateInternetScsiAlias.ns2__UpdateInternetScsiAlias = ns2__UpdateInternetScsiAlias;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UpdateInternetScsiAlias(soap, &soap_tmp___ns2__UpdateInternetScsiAlias);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UpdateInternetScsiAlias(soap, &soap_tmp___ns2__UpdateInternetScsiAlias, "-ns2:UpdateInternetScsiAlias", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UpdateInternetScsiAlias(soap, &soap_tmp___ns2__UpdateInternetScsiAlias, "-ns2:UpdateInternetScsiAlias", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UpdateInternetScsiAliasResponse)
		return soap_closesock(soap);
	ns2__UpdateInternetScsiAliasResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UpdateInternetScsiAliasResponse->soap_get(soap, "ns2:UpdateInternetScsiAliasResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__AddInternetScsiSendTargets(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__AddInternetScsiSendTargetsRequestType *ns2__AddInternetScsiSendTargets, _ns2__AddInternetScsiSendTargetsResponse *ns2__AddInternetScsiSendTargetsResponse)
{	struct __ns2__AddInternetScsiSendTargets soap_tmp___ns2__AddInternetScsiSendTargets;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__AddInternetScsiSendTargets.ns2__AddInternetScsiSendTargets = ns2__AddInternetScsiSendTargets;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__AddInternetScsiSendTargets(soap, &soap_tmp___ns2__AddInternetScsiSendTargets);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__AddInternetScsiSendTargets(soap, &soap_tmp___ns2__AddInternetScsiSendTargets, "-ns2:AddInternetScsiSendTargets", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__AddInternetScsiSendTargets(soap, &soap_tmp___ns2__AddInternetScsiSendTargets, "-ns2:AddInternetScsiSendTargets", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__AddInternetScsiSendTargetsResponse)
		return soap_closesock(soap);
	ns2__AddInternetScsiSendTargetsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__AddInternetScsiSendTargetsResponse->soap_get(soap, "ns2:AddInternetScsiSendTargetsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RemoveInternetScsiSendTargets(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RemoveInternetScsiSendTargetsRequestType *ns2__RemoveInternetScsiSendTargets, _ns2__RemoveInternetScsiSendTargetsResponse *ns2__RemoveInternetScsiSendTargetsResponse)
{	struct __ns2__RemoveInternetScsiSendTargets soap_tmp___ns2__RemoveInternetScsiSendTargets;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RemoveInternetScsiSendTargets.ns2__RemoveInternetScsiSendTargets = ns2__RemoveInternetScsiSendTargets;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RemoveInternetScsiSendTargets(soap, &soap_tmp___ns2__RemoveInternetScsiSendTargets);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RemoveInternetScsiSendTargets(soap, &soap_tmp___ns2__RemoveInternetScsiSendTargets, "-ns2:RemoveInternetScsiSendTargets", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RemoveInternetScsiSendTargets(soap, &soap_tmp___ns2__RemoveInternetScsiSendTargets, "-ns2:RemoveInternetScsiSendTargets", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RemoveInternetScsiSendTargetsResponse)
		return soap_closesock(soap);
	ns2__RemoveInternetScsiSendTargetsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RemoveInternetScsiSendTargetsResponse->soap_get(soap, "ns2:RemoveInternetScsiSendTargetsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__AddInternetScsiStaticTargets(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__AddInternetScsiStaticTargetsRequestType *ns2__AddInternetScsiStaticTargets, _ns2__AddInternetScsiStaticTargetsResponse *ns2__AddInternetScsiStaticTargetsResponse)
{	struct __ns2__AddInternetScsiStaticTargets soap_tmp___ns2__AddInternetScsiStaticTargets;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__AddInternetScsiStaticTargets.ns2__AddInternetScsiStaticTargets = ns2__AddInternetScsiStaticTargets;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__AddInternetScsiStaticTargets(soap, &soap_tmp___ns2__AddInternetScsiStaticTargets);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__AddInternetScsiStaticTargets(soap, &soap_tmp___ns2__AddInternetScsiStaticTargets, "-ns2:AddInternetScsiStaticTargets", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__AddInternetScsiStaticTargets(soap, &soap_tmp___ns2__AddInternetScsiStaticTargets, "-ns2:AddInternetScsiStaticTargets", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__AddInternetScsiStaticTargetsResponse)
		return soap_closesock(soap);
	ns2__AddInternetScsiStaticTargetsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__AddInternetScsiStaticTargetsResponse->soap_get(soap, "ns2:AddInternetScsiStaticTargetsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RemoveInternetScsiStaticTargets(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RemoveInternetScsiStaticTargetsRequestType *ns2__RemoveInternetScsiStaticTargets, _ns2__RemoveInternetScsiStaticTargetsResponse *ns2__RemoveInternetScsiStaticTargetsResponse)
{	struct __ns2__RemoveInternetScsiStaticTargets soap_tmp___ns2__RemoveInternetScsiStaticTargets;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RemoveInternetScsiStaticTargets.ns2__RemoveInternetScsiStaticTargets = ns2__RemoveInternetScsiStaticTargets;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RemoveInternetScsiStaticTargets(soap, &soap_tmp___ns2__RemoveInternetScsiStaticTargets);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RemoveInternetScsiStaticTargets(soap, &soap_tmp___ns2__RemoveInternetScsiStaticTargets, "-ns2:RemoveInternetScsiStaticTargets", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RemoveInternetScsiStaticTargets(soap, &soap_tmp___ns2__RemoveInternetScsiStaticTargets, "-ns2:RemoveInternetScsiStaticTargets", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RemoveInternetScsiStaticTargetsResponse)
		return soap_closesock(soap);
	ns2__RemoveInternetScsiStaticTargetsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RemoveInternetScsiStaticTargetsResponse->soap_get(soap, "ns2:RemoveInternetScsiStaticTargetsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__EnableMultipathPath(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__EnableMultipathPathRequestType *ns2__EnableMultipathPath, _ns2__EnableMultipathPathResponse *ns2__EnableMultipathPathResponse)
{	struct __ns2__EnableMultipathPath soap_tmp___ns2__EnableMultipathPath;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__EnableMultipathPath.ns2__EnableMultipathPath = ns2__EnableMultipathPath;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__EnableMultipathPath(soap, &soap_tmp___ns2__EnableMultipathPath);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__EnableMultipathPath(soap, &soap_tmp___ns2__EnableMultipathPath, "-ns2:EnableMultipathPath", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__EnableMultipathPath(soap, &soap_tmp___ns2__EnableMultipathPath, "-ns2:EnableMultipathPath", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__EnableMultipathPathResponse)
		return soap_closesock(soap);
	ns2__EnableMultipathPathResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__EnableMultipathPathResponse->soap_get(soap, "ns2:EnableMultipathPathResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__DisableMultipathPath(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__DisableMultipathPathRequestType *ns2__DisableMultipathPath, _ns2__DisableMultipathPathResponse *ns2__DisableMultipathPathResponse)
{	struct __ns2__DisableMultipathPath soap_tmp___ns2__DisableMultipathPath;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__DisableMultipathPath.ns2__DisableMultipathPath = ns2__DisableMultipathPath;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__DisableMultipathPath(soap, &soap_tmp___ns2__DisableMultipathPath);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__DisableMultipathPath(soap, &soap_tmp___ns2__DisableMultipathPath, "-ns2:DisableMultipathPath", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__DisableMultipathPath(soap, &soap_tmp___ns2__DisableMultipathPath, "-ns2:DisableMultipathPath", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__DisableMultipathPathResponse)
		return soap_closesock(soap);
	ns2__DisableMultipathPathResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__DisableMultipathPathResponse->soap_get(soap, "ns2:DisableMultipathPathResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__SetMultipathLunPolicy(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__SetMultipathLunPolicyRequestType *ns2__SetMultipathLunPolicy, _ns2__SetMultipathLunPolicyResponse *ns2__SetMultipathLunPolicyResponse)
{	struct __ns2__SetMultipathLunPolicy soap_tmp___ns2__SetMultipathLunPolicy;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__SetMultipathLunPolicy.ns2__SetMultipathLunPolicy = ns2__SetMultipathLunPolicy;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__SetMultipathLunPolicy(soap, &soap_tmp___ns2__SetMultipathLunPolicy);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__SetMultipathLunPolicy(soap, &soap_tmp___ns2__SetMultipathLunPolicy, "-ns2:SetMultipathLunPolicy", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__SetMultipathLunPolicy(soap, &soap_tmp___ns2__SetMultipathLunPolicy, "-ns2:SetMultipathLunPolicy", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__SetMultipathLunPolicyResponse)
		return soap_closesock(soap);
	ns2__SetMultipathLunPolicyResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__SetMultipathLunPolicyResponse->soap_get(soap, "ns2:SetMultipathLunPolicyResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryPathSelectionPolicyOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryPathSelectionPolicyOptionsRequestType *ns2__QueryPathSelectionPolicyOptions, _ns2__QueryPathSelectionPolicyOptionsResponse *ns2__QueryPathSelectionPolicyOptionsResponse)
{	struct __ns2__QueryPathSelectionPolicyOptions soap_tmp___ns2__QueryPathSelectionPolicyOptions;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryPathSelectionPolicyOptions.ns2__QueryPathSelectionPolicyOptions = ns2__QueryPathSelectionPolicyOptions;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryPathSelectionPolicyOptions(soap, &soap_tmp___ns2__QueryPathSelectionPolicyOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryPathSelectionPolicyOptions(soap, &soap_tmp___ns2__QueryPathSelectionPolicyOptions, "-ns2:QueryPathSelectionPolicyOptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryPathSelectionPolicyOptions(soap, &soap_tmp___ns2__QueryPathSelectionPolicyOptions, "-ns2:QueryPathSelectionPolicyOptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryPathSelectionPolicyOptionsResponse)
		return soap_closesock(soap);
	ns2__QueryPathSelectionPolicyOptionsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryPathSelectionPolicyOptionsResponse->soap_get(soap, "ns2:QueryPathSelectionPolicyOptionsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryStorageArrayTypePolicyOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryStorageArrayTypePolicyOptionsRequestType *ns2__QueryStorageArrayTypePolicyOptions, _ns2__QueryStorageArrayTypePolicyOptionsResponse *ns2__QueryStorageArrayTypePolicyOptionsResponse)
{	struct __ns2__QueryStorageArrayTypePolicyOptions soap_tmp___ns2__QueryStorageArrayTypePolicyOptions;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryStorageArrayTypePolicyOptions.ns2__QueryStorageArrayTypePolicyOptions = ns2__QueryStorageArrayTypePolicyOptions;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryStorageArrayTypePolicyOptions(soap, &soap_tmp___ns2__QueryStorageArrayTypePolicyOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryStorageArrayTypePolicyOptions(soap, &soap_tmp___ns2__QueryStorageArrayTypePolicyOptions, "-ns2:QueryStorageArrayTypePolicyOptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryStorageArrayTypePolicyOptions(soap, &soap_tmp___ns2__QueryStorageArrayTypePolicyOptions, "-ns2:QueryStorageArrayTypePolicyOptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryStorageArrayTypePolicyOptionsResponse)
		return soap_closesock(soap);
	ns2__QueryStorageArrayTypePolicyOptionsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryStorageArrayTypePolicyOptionsResponse->soap_get(soap, "ns2:QueryStorageArrayTypePolicyOptionsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UpdateScsiLunDisplayName(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UpdateScsiLunDisplayNameRequestType *ns2__UpdateScsiLunDisplayName, _ns2__UpdateScsiLunDisplayNameResponse *ns2__UpdateScsiLunDisplayNameResponse)
{	struct __ns2__UpdateScsiLunDisplayName soap_tmp___ns2__UpdateScsiLunDisplayName;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UpdateScsiLunDisplayName.ns2__UpdateScsiLunDisplayName = ns2__UpdateScsiLunDisplayName;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UpdateScsiLunDisplayName(soap, &soap_tmp___ns2__UpdateScsiLunDisplayName);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UpdateScsiLunDisplayName(soap, &soap_tmp___ns2__UpdateScsiLunDisplayName, "-ns2:UpdateScsiLunDisplayName", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UpdateScsiLunDisplayName(soap, &soap_tmp___ns2__UpdateScsiLunDisplayName, "-ns2:UpdateScsiLunDisplayName", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UpdateScsiLunDisplayNameResponse)
		return soap_closesock(soap);
	ns2__UpdateScsiLunDisplayNameResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UpdateScsiLunDisplayNameResponse->soap_get(soap, "ns2:UpdateScsiLunDisplayNameResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__DetachScsiLun(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__DetachScsiLunRequestType *ns2__DetachScsiLun, _ns2__DetachScsiLunResponse *ns2__DetachScsiLunResponse)
{	struct __ns2__DetachScsiLun soap_tmp___ns2__DetachScsiLun;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__DetachScsiLun.ns2__DetachScsiLun = ns2__DetachScsiLun;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__DetachScsiLun(soap, &soap_tmp___ns2__DetachScsiLun);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__DetachScsiLun(soap, &soap_tmp___ns2__DetachScsiLun, "-ns2:DetachScsiLun", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__DetachScsiLun(soap, &soap_tmp___ns2__DetachScsiLun, "-ns2:DetachScsiLun", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__DetachScsiLunResponse)
		return soap_closesock(soap);
	ns2__DetachScsiLunResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__DetachScsiLunResponse->soap_get(soap, "ns2:DetachScsiLunResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__DeleteScsiLunState(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__DeleteScsiLunStateRequestType *ns2__DeleteScsiLunState, _ns2__DeleteScsiLunStateResponse *ns2__DeleteScsiLunStateResponse)
{	struct __ns2__DeleteScsiLunState soap_tmp___ns2__DeleteScsiLunState;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__DeleteScsiLunState.ns2__DeleteScsiLunState = ns2__DeleteScsiLunState;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__DeleteScsiLunState(soap, &soap_tmp___ns2__DeleteScsiLunState);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__DeleteScsiLunState(soap, &soap_tmp___ns2__DeleteScsiLunState, "-ns2:DeleteScsiLunState", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__DeleteScsiLunState(soap, &soap_tmp___ns2__DeleteScsiLunState, "-ns2:DeleteScsiLunState", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__DeleteScsiLunStateResponse)
		return soap_closesock(soap);
	ns2__DeleteScsiLunStateResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__DeleteScsiLunStateResponse->soap_get(soap, "ns2:DeleteScsiLunStateResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__AttachScsiLun(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__AttachScsiLunRequestType *ns2__AttachScsiLun, _ns2__AttachScsiLunResponse *ns2__AttachScsiLunResponse)
{	struct __ns2__AttachScsiLun soap_tmp___ns2__AttachScsiLun;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__AttachScsiLun.ns2__AttachScsiLun = ns2__AttachScsiLun;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__AttachScsiLun(soap, &soap_tmp___ns2__AttachScsiLun);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__AttachScsiLun(soap, &soap_tmp___ns2__AttachScsiLun, "-ns2:AttachScsiLun", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__AttachScsiLun(soap, &soap_tmp___ns2__AttachScsiLun, "-ns2:AttachScsiLun", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__AttachScsiLunResponse)
		return soap_closesock(soap);
	ns2__AttachScsiLunResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__AttachScsiLunResponse->soap_get(soap, "ns2:AttachScsiLunResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RefreshStorageSystem(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RefreshStorageSystemRequestType *ns2__RefreshStorageSystem, _ns2__RefreshStorageSystemResponse *ns2__RefreshStorageSystemResponse)
{	struct __ns2__RefreshStorageSystem soap_tmp___ns2__RefreshStorageSystem;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RefreshStorageSystem.ns2__RefreshStorageSystem = ns2__RefreshStorageSystem;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RefreshStorageSystem(soap, &soap_tmp___ns2__RefreshStorageSystem);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RefreshStorageSystem(soap, &soap_tmp___ns2__RefreshStorageSystem, "-ns2:RefreshStorageSystem", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RefreshStorageSystem(soap, &soap_tmp___ns2__RefreshStorageSystem, "-ns2:RefreshStorageSystem", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RefreshStorageSystemResponse)
		return soap_closesock(soap);
	ns2__RefreshStorageSystemResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RefreshStorageSystemResponse->soap_get(soap, "ns2:RefreshStorageSystemResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__DiscoverFcoeHbas(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__DiscoverFcoeHbasRequestType *ns2__DiscoverFcoeHbas, _ns2__DiscoverFcoeHbasResponse *ns2__DiscoverFcoeHbasResponse)
{	struct __ns2__DiscoverFcoeHbas soap_tmp___ns2__DiscoverFcoeHbas;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__DiscoverFcoeHbas.ns2__DiscoverFcoeHbas = ns2__DiscoverFcoeHbas;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__DiscoverFcoeHbas(soap, &soap_tmp___ns2__DiscoverFcoeHbas);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__DiscoverFcoeHbas(soap, &soap_tmp___ns2__DiscoverFcoeHbas, "-ns2:DiscoverFcoeHbas", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__DiscoverFcoeHbas(soap, &soap_tmp___ns2__DiscoverFcoeHbas, "-ns2:DiscoverFcoeHbas", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__DiscoverFcoeHbasResponse)
		return soap_closesock(soap);
	ns2__DiscoverFcoeHbasResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__DiscoverFcoeHbasResponse->soap_get(soap, "ns2:DiscoverFcoeHbasResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__MarkForRemoval(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__MarkForRemovalRequestType *ns2__MarkForRemoval, _ns2__MarkForRemovalResponse *ns2__MarkForRemovalResponse)
{	struct __ns2__MarkForRemoval soap_tmp___ns2__MarkForRemoval;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__MarkForRemoval.ns2__MarkForRemoval = ns2__MarkForRemoval;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__MarkForRemoval(soap, &soap_tmp___ns2__MarkForRemoval);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__MarkForRemoval(soap, &soap_tmp___ns2__MarkForRemoval, "-ns2:MarkForRemoval", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__MarkForRemoval(soap, &soap_tmp___ns2__MarkForRemoval, "-ns2:MarkForRemoval", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__MarkForRemovalResponse)
		return soap_closesock(soap);
	ns2__MarkForRemovalResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__MarkForRemovalResponse->soap_get(soap, "ns2:MarkForRemovalResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__FormatVffs(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__FormatVffsRequestType *ns2__FormatVffs, _ns2__FormatVffsResponse *ns2__FormatVffsResponse)
{	struct __ns2__FormatVffs soap_tmp___ns2__FormatVffs;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__FormatVffs.ns2__FormatVffs = ns2__FormatVffs;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__FormatVffs(soap, &soap_tmp___ns2__FormatVffs);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__FormatVffs(soap, &soap_tmp___ns2__FormatVffs, "-ns2:FormatVffs", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__FormatVffs(soap, &soap_tmp___ns2__FormatVffs, "-ns2:FormatVffs", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__FormatVffsResponse)
		return soap_closesock(soap);
	ns2__FormatVffsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__FormatVffsResponse->soap_get(soap, "ns2:FormatVffsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ExtendVffs(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ExtendVffsRequestType *ns2__ExtendVffs, _ns2__ExtendVffsResponse *ns2__ExtendVffsResponse)
{	struct __ns2__ExtendVffs soap_tmp___ns2__ExtendVffs;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ExtendVffs.ns2__ExtendVffs = ns2__ExtendVffs;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ExtendVffs(soap, &soap_tmp___ns2__ExtendVffs);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ExtendVffs(soap, &soap_tmp___ns2__ExtendVffs, "-ns2:ExtendVffs", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ExtendVffs(soap, &soap_tmp___ns2__ExtendVffs, "-ns2:ExtendVffs", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ExtendVffsResponse)
		return soap_closesock(soap);
	ns2__ExtendVffsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ExtendVffsResponse->soap_get(soap, "ns2:ExtendVffsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__DestroyVffs(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__DestroyVffsRequestType *ns2__DestroyVffs, _ns2__DestroyVffsResponse *ns2__DestroyVffsResponse)
{	struct __ns2__DestroyVffs soap_tmp___ns2__DestroyVffs;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__DestroyVffs.ns2__DestroyVffs = ns2__DestroyVffs;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__DestroyVffs(soap, &soap_tmp___ns2__DestroyVffs);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__DestroyVffs(soap, &soap_tmp___ns2__DestroyVffs, "-ns2:DestroyVffs", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__DestroyVffs(soap, &soap_tmp___ns2__DestroyVffs, "-ns2:DestroyVffs", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__DestroyVffsResponse)
		return soap_closesock(soap);
	ns2__DestroyVffsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__DestroyVffsResponse->soap_get(soap, "ns2:DestroyVffsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__MountVffsVolume(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__MountVffsVolumeRequestType *ns2__MountVffsVolume, _ns2__MountVffsVolumeResponse *ns2__MountVffsVolumeResponse)
{	struct __ns2__MountVffsVolume soap_tmp___ns2__MountVffsVolume;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__MountVffsVolume.ns2__MountVffsVolume = ns2__MountVffsVolume;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__MountVffsVolume(soap, &soap_tmp___ns2__MountVffsVolume);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__MountVffsVolume(soap, &soap_tmp___ns2__MountVffsVolume, "-ns2:MountVffsVolume", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__MountVffsVolume(soap, &soap_tmp___ns2__MountVffsVolume, "-ns2:MountVffsVolume", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__MountVffsVolumeResponse)
		return soap_closesock(soap);
	ns2__MountVffsVolumeResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__MountVffsVolumeResponse->soap_get(soap, "ns2:MountVffsVolumeResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UnmountVffsVolume(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UnmountVffsVolumeRequestType *ns2__UnmountVffsVolume, _ns2__UnmountVffsVolumeResponse *ns2__UnmountVffsVolumeResponse)
{	struct __ns2__UnmountVffsVolume soap_tmp___ns2__UnmountVffsVolume;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UnmountVffsVolume.ns2__UnmountVffsVolume = ns2__UnmountVffsVolume;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UnmountVffsVolume(soap, &soap_tmp___ns2__UnmountVffsVolume);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UnmountVffsVolume(soap, &soap_tmp___ns2__UnmountVffsVolume, "-ns2:UnmountVffsVolume", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UnmountVffsVolume(soap, &soap_tmp___ns2__UnmountVffsVolume, "-ns2:UnmountVffsVolume", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UnmountVffsVolumeResponse)
		return soap_closesock(soap);
	ns2__UnmountVffsVolumeResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UnmountVffsVolumeResponse->soap_get(soap, "ns2:UnmountVffsVolumeResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__DeleteVffsVolumeState(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__DeleteVffsVolumeStateRequestType *ns2__DeleteVffsVolumeState, _ns2__DeleteVffsVolumeStateResponse *ns2__DeleteVffsVolumeStateResponse)
{	struct __ns2__DeleteVffsVolumeState soap_tmp___ns2__DeleteVffsVolumeState;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__DeleteVffsVolumeState.ns2__DeleteVffsVolumeState = ns2__DeleteVffsVolumeState;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__DeleteVffsVolumeState(soap, &soap_tmp___ns2__DeleteVffsVolumeState);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__DeleteVffsVolumeState(soap, &soap_tmp___ns2__DeleteVffsVolumeState, "-ns2:DeleteVffsVolumeState", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__DeleteVffsVolumeState(soap, &soap_tmp___ns2__DeleteVffsVolumeState, "-ns2:DeleteVffsVolumeState", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__DeleteVffsVolumeStateResponse)
		return soap_closesock(soap);
	ns2__DeleteVffsVolumeStateResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__DeleteVffsVolumeStateResponse->soap_get(soap, "ns2:DeleteVffsVolumeStateResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RescanVffs(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RescanVffsRequestType *ns2__RescanVffs, _ns2__RescanVffsResponse *ns2__RescanVffsResponse)
{	struct __ns2__RescanVffs soap_tmp___ns2__RescanVffs;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RescanVffs.ns2__RescanVffs = ns2__RescanVffs;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RescanVffs(soap, &soap_tmp___ns2__RescanVffs);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RescanVffs(soap, &soap_tmp___ns2__RescanVffs, "-ns2:RescanVffs", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RescanVffs(soap, &soap_tmp___ns2__RescanVffs, "-ns2:RescanVffs", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RescanVffsResponse)
		return soap_closesock(soap);
	ns2__RescanVffsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RescanVffsResponse->soap_get(soap, "ns2:RescanVffsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryAvailableSsds(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryAvailableSsdsRequestType *ns2__QueryAvailableSsds, _ns2__QueryAvailableSsdsResponse *ns2__QueryAvailableSsdsResponse)
{	struct __ns2__QueryAvailableSsds soap_tmp___ns2__QueryAvailableSsds;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryAvailableSsds.ns2__QueryAvailableSsds = ns2__QueryAvailableSsds;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryAvailableSsds(soap, &soap_tmp___ns2__QueryAvailableSsds);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryAvailableSsds(soap, &soap_tmp___ns2__QueryAvailableSsds, "-ns2:QueryAvailableSsds", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryAvailableSsds(soap, &soap_tmp___ns2__QueryAvailableSsds, "-ns2:QueryAvailableSsds", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryAvailableSsdsResponse)
		return soap_closesock(soap);
	ns2__QueryAvailableSsdsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryAvailableSsdsResponse->soap_get(soap, "ns2:QueryAvailableSsdsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ConfigureVFlashResourceEx_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ConfigureVFlashResourceExRequestType *ns2__ConfigureVFlashResourceEx_USCORETask, _ns2__ConfigureVFlashResourceEx_USCORETaskResponse *ns2__ConfigureVFlashResourceEx_USCORETaskResponse)
{	struct __ns2__ConfigureVFlashResourceEx_USCORETask soap_tmp___ns2__ConfigureVFlashResourceEx_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ConfigureVFlashResourceEx_USCORETask.ns2__ConfigureVFlashResourceEx_USCORETask = ns2__ConfigureVFlashResourceEx_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ConfigureVFlashResourceEx_USCORETask(soap, &soap_tmp___ns2__ConfigureVFlashResourceEx_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ConfigureVFlashResourceEx_USCORETask(soap, &soap_tmp___ns2__ConfigureVFlashResourceEx_USCORETask, "-ns2:ConfigureVFlashResourceEx_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ConfigureVFlashResourceEx_USCORETask(soap, &soap_tmp___ns2__ConfigureVFlashResourceEx_USCORETask, "-ns2:ConfigureVFlashResourceEx_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ConfigureVFlashResourceEx_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__ConfigureVFlashResourceEx_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ConfigureVFlashResourceEx_USCORETaskResponse->soap_get(soap, "ns2:ConfigureVFlashResourceEx_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__HostConfigureVFlashResource(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__HostConfigureVFlashResourceRequestType *ns2__HostConfigureVFlashResource, _ns2__HostConfigureVFlashResourceResponse *ns2__HostConfigureVFlashResourceResponse)
{	struct __ns2__HostConfigureVFlashResource soap_tmp___ns2__HostConfigureVFlashResource;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__HostConfigureVFlashResource.ns2__HostConfigureVFlashResource = ns2__HostConfigureVFlashResource;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__HostConfigureVFlashResource(soap, &soap_tmp___ns2__HostConfigureVFlashResource);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__HostConfigureVFlashResource(soap, &soap_tmp___ns2__HostConfigureVFlashResource, "-ns2:HostConfigureVFlashResource", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__HostConfigureVFlashResource(soap, &soap_tmp___ns2__HostConfigureVFlashResource, "-ns2:HostConfigureVFlashResource", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__HostConfigureVFlashResourceResponse)
		return soap_closesock(soap);
	ns2__HostConfigureVFlashResourceResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__HostConfigureVFlashResourceResponse->soap_get(soap, "ns2:HostConfigureVFlashResourceResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__HostRemoveVFlashResource(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__HostRemoveVFlashResourceRequestType *ns2__HostRemoveVFlashResource, _ns2__HostRemoveVFlashResourceResponse *ns2__HostRemoveVFlashResourceResponse)
{	struct __ns2__HostRemoveVFlashResource soap_tmp___ns2__HostRemoveVFlashResource;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__HostRemoveVFlashResource.ns2__HostRemoveVFlashResource = ns2__HostRemoveVFlashResource;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__HostRemoveVFlashResource(soap, &soap_tmp___ns2__HostRemoveVFlashResource);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__HostRemoveVFlashResource(soap, &soap_tmp___ns2__HostRemoveVFlashResource, "-ns2:HostRemoveVFlashResource", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__HostRemoveVFlashResource(soap, &soap_tmp___ns2__HostRemoveVFlashResource, "-ns2:HostRemoveVFlashResource", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__HostRemoveVFlashResourceResponse)
		return soap_closesock(soap);
	ns2__HostRemoveVFlashResourceResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__HostRemoveVFlashResourceResponse->soap_get(soap, "ns2:HostRemoveVFlashResourceResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__HostConfigVFlashCache(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__HostConfigVFlashCacheRequestType *ns2__HostConfigVFlashCache, _ns2__HostConfigVFlashCacheResponse *ns2__HostConfigVFlashCacheResponse)
{	struct __ns2__HostConfigVFlashCache soap_tmp___ns2__HostConfigVFlashCache;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__HostConfigVFlashCache.ns2__HostConfigVFlashCache = ns2__HostConfigVFlashCache;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__HostConfigVFlashCache(soap, &soap_tmp___ns2__HostConfigVFlashCache);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__HostConfigVFlashCache(soap, &soap_tmp___ns2__HostConfigVFlashCache, "-ns2:HostConfigVFlashCache", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__HostConfigVFlashCache(soap, &soap_tmp___ns2__HostConfigVFlashCache, "-ns2:HostConfigVFlashCache", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__HostConfigVFlashCacheResponse)
		return soap_closesock(soap);
	ns2__HostConfigVFlashCacheResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__HostConfigVFlashCacheResponse->soap_get(soap, "ns2:HostConfigVFlashCacheResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__HostGetVFlashModuleDefaultConfig(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__HostGetVFlashModuleDefaultConfigRequestType *ns2__HostGetVFlashModuleDefaultConfig, _ns2__HostGetVFlashModuleDefaultConfigResponse *ns2__HostGetVFlashModuleDefaultConfigResponse)
{	struct __ns2__HostGetVFlashModuleDefaultConfig soap_tmp___ns2__HostGetVFlashModuleDefaultConfig;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__HostGetVFlashModuleDefaultConfig.ns2__HostGetVFlashModuleDefaultConfig = ns2__HostGetVFlashModuleDefaultConfig;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__HostGetVFlashModuleDefaultConfig(soap, &soap_tmp___ns2__HostGetVFlashModuleDefaultConfig);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__HostGetVFlashModuleDefaultConfig(soap, &soap_tmp___ns2__HostGetVFlashModuleDefaultConfig, "-ns2:HostGetVFlashModuleDefaultConfig", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__HostGetVFlashModuleDefaultConfig(soap, &soap_tmp___ns2__HostGetVFlashModuleDefaultConfig, "-ns2:HostGetVFlashModuleDefaultConfig", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__HostGetVFlashModuleDefaultConfigResponse)
		return soap_closesock(soap);
	ns2__HostGetVFlashModuleDefaultConfigResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__HostGetVFlashModuleDefaultConfigResponse->soap_get(soap, "ns2:HostGetVFlashModuleDefaultConfigResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UpdateIpConfig(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UpdateIpConfigRequestType *ns2__UpdateIpConfig, _ns2__UpdateIpConfigResponse *ns2__UpdateIpConfigResponse)
{	struct __ns2__UpdateIpConfig soap_tmp___ns2__UpdateIpConfig;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UpdateIpConfig.ns2__UpdateIpConfig = ns2__UpdateIpConfig;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UpdateIpConfig(soap, &soap_tmp___ns2__UpdateIpConfig);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UpdateIpConfig(soap, &soap_tmp___ns2__UpdateIpConfig, "-ns2:UpdateIpConfig", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UpdateIpConfig(soap, &soap_tmp___ns2__UpdateIpConfig, "-ns2:UpdateIpConfig", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UpdateIpConfigResponse)
		return soap_closesock(soap);
	ns2__UpdateIpConfigResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UpdateIpConfigResponse->soap_get(soap, "ns2:UpdateIpConfigResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__SelectVnic(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__SelectVnicRequestType *ns2__SelectVnic, _ns2__SelectVnicResponse *ns2__SelectVnicResponse)
{	struct __ns2__SelectVnic soap_tmp___ns2__SelectVnic;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__SelectVnic.ns2__SelectVnic = ns2__SelectVnic;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__SelectVnic(soap, &soap_tmp___ns2__SelectVnic);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__SelectVnic(soap, &soap_tmp___ns2__SelectVnic, "-ns2:SelectVnic", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__SelectVnic(soap, &soap_tmp___ns2__SelectVnic, "-ns2:SelectVnic", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__SelectVnicResponse)
		return soap_closesock(soap);
	ns2__SelectVnicResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__SelectVnicResponse->soap_get(soap, "ns2:SelectVnicResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__DeselectVnic(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__DeselectVnicRequestType *ns2__DeselectVnic, _ns2__DeselectVnicResponse *ns2__DeselectVnicResponse)
{	struct __ns2__DeselectVnic soap_tmp___ns2__DeselectVnic;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__DeselectVnic.ns2__DeselectVnic = ns2__DeselectVnic;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__DeselectVnic(soap, &soap_tmp___ns2__DeselectVnic);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__DeselectVnic(soap, &soap_tmp___ns2__DeselectVnic, "-ns2:DeselectVnic", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__DeselectVnic(soap, &soap_tmp___ns2__DeselectVnic, "-ns2:DeselectVnic", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__DeselectVnicResponse)
		return soap_closesock(soap);
	ns2__DeselectVnicResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__DeselectVnicResponse->soap_get(soap, "ns2:DeselectVnicResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryNetConfig(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryNetConfigRequestType *ns2__QueryNetConfig, _ns2__QueryNetConfigResponse *ns2__QueryNetConfigResponse)
{	struct __ns2__QueryNetConfig soap_tmp___ns2__QueryNetConfig;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryNetConfig.ns2__QueryNetConfig = ns2__QueryNetConfig;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryNetConfig(soap, &soap_tmp___ns2__QueryNetConfig);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryNetConfig(soap, &soap_tmp___ns2__QueryNetConfig, "-ns2:QueryNetConfig", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryNetConfig(soap, &soap_tmp___ns2__QueryNetConfig, "-ns2:QueryNetConfig", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryNetConfigResponse)
		return soap_closesock(soap);
	ns2__QueryNetConfigResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryNetConfigResponse->soap_get(soap, "ns2:QueryNetConfigResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__SelectVnicForNicType(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__SelectVnicForNicTypeRequestType *ns2__SelectVnicForNicType, _ns2__SelectVnicForNicTypeResponse *ns2__SelectVnicForNicTypeResponse)
{	struct __ns2__SelectVnicForNicType soap_tmp___ns2__SelectVnicForNicType;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__SelectVnicForNicType.ns2__SelectVnicForNicType = ns2__SelectVnicForNicType;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__SelectVnicForNicType(soap, &soap_tmp___ns2__SelectVnicForNicType);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__SelectVnicForNicType(soap, &soap_tmp___ns2__SelectVnicForNicType, "-ns2:SelectVnicForNicType", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__SelectVnicForNicType(soap, &soap_tmp___ns2__SelectVnicForNicType, "-ns2:SelectVnicForNicType", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__SelectVnicForNicTypeResponse)
		return soap_closesock(soap);
	ns2__SelectVnicForNicTypeResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__SelectVnicForNicTypeResponse->soap_get(soap, "ns2:SelectVnicForNicTypeResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__DeselectVnicForNicType(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__DeselectVnicForNicTypeRequestType *ns2__DeselectVnicForNicType, _ns2__DeselectVnicForNicTypeResponse *ns2__DeselectVnicForNicTypeResponse)
{	struct __ns2__DeselectVnicForNicType soap_tmp___ns2__DeselectVnicForNicType;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__DeselectVnicForNicType.ns2__DeselectVnicForNicType = ns2__DeselectVnicForNicType;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__DeselectVnicForNicType(soap, &soap_tmp___ns2__DeselectVnicForNicType);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__DeselectVnicForNicType(soap, &soap_tmp___ns2__DeselectVnicForNicType, "-ns2:DeselectVnicForNicType", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__DeselectVnicForNicType(soap, &soap_tmp___ns2__DeselectVnicForNicType, "-ns2:DeselectVnicForNicType", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__DeselectVnicForNicTypeResponse)
		return soap_closesock(soap);
	ns2__DeselectVnicForNicTypeResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__DeselectVnicForNicTypeResponse->soap_get(soap, "ns2:DeselectVnicForNicTypeResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryCmmds(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryCmmdsRequestType *ns2__QueryCmmds, _ns2__QueryCmmdsResponse *ns2__QueryCmmdsResponse)
{	struct __ns2__QueryCmmds soap_tmp___ns2__QueryCmmds;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryCmmds.ns2__QueryCmmds = ns2__QueryCmmds;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryCmmds(soap, &soap_tmp___ns2__QueryCmmds);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryCmmds(soap, &soap_tmp___ns2__QueryCmmds, "-ns2:QueryCmmds", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryCmmds(soap, &soap_tmp___ns2__QueryCmmds, "-ns2:QueryCmmds", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryCmmdsResponse)
		return soap_closesock(soap);
	ns2__QueryCmmdsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryCmmdsResponse->soap_get(soap, "ns2:QueryCmmdsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryPhysicalVsanDisks(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryPhysicalVsanDisksRequestType *ns2__QueryPhysicalVsanDisks, _ns2__QueryPhysicalVsanDisksResponse *ns2__QueryPhysicalVsanDisksResponse)
{	struct __ns2__QueryPhysicalVsanDisks soap_tmp___ns2__QueryPhysicalVsanDisks;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryPhysicalVsanDisks.ns2__QueryPhysicalVsanDisks = ns2__QueryPhysicalVsanDisks;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryPhysicalVsanDisks(soap, &soap_tmp___ns2__QueryPhysicalVsanDisks);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryPhysicalVsanDisks(soap, &soap_tmp___ns2__QueryPhysicalVsanDisks, "-ns2:QueryPhysicalVsanDisks", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryPhysicalVsanDisks(soap, &soap_tmp___ns2__QueryPhysicalVsanDisks, "-ns2:QueryPhysicalVsanDisks", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryPhysicalVsanDisksResponse)
		return soap_closesock(soap);
	ns2__QueryPhysicalVsanDisksResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryPhysicalVsanDisksResponse->soap_get(soap, "ns2:QueryPhysicalVsanDisksResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryVsanObjects(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryVsanObjectsRequestType *ns2__QueryVsanObjects, _ns2__QueryVsanObjectsResponse *ns2__QueryVsanObjectsResponse)
{	struct __ns2__QueryVsanObjects soap_tmp___ns2__QueryVsanObjects;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryVsanObjects.ns2__QueryVsanObjects = ns2__QueryVsanObjects;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryVsanObjects(soap, &soap_tmp___ns2__QueryVsanObjects);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryVsanObjects(soap, &soap_tmp___ns2__QueryVsanObjects, "-ns2:QueryVsanObjects", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryVsanObjects(soap, &soap_tmp___ns2__QueryVsanObjects, "-ns2:QueryVsanObjects", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryVsanObjectsResponse)
		return soap_closesock(soap);
	ns2__QueryVsanObjectsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryVsanObjectsResponse->soap_get(soap, "ns2:QueryVsanObjectsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryObjectsOnPhysicalVsanDisk(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryObjectsOnPhysicalVsanDiskRequestType *ns2__QueryObjectsOnPhysicalVsanDisk, _ns2__QueryObjectsOnPhysicalVsanDiskResponse *ns2__QueryObjectsOnPhysicalVsanDiskResponse)
{	struct __ns2__QueryObjectsOnPhysicalVsanDisk soap_tmp___ns2__QueryObjectsOnPhysicalVsanDisk;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryObjectsOnPhysicalVsanDisk.ns2__QueryObjectsOnPhysicalVsanDisk = ns2__QueryObjectsOnPhysicalVsanDisk;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryObjectsOnPhysicalVsanDisk(soap, &soap_tmp___ns2__QueryObjectsOnPhysicalVsanDisk);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryObjectsOnPhysicalVsanDisk(soap, &soap_tmp___ns2__QueryObjectsOnPhysicalVsanDisk, "-ns2:QueryObjectsOnPhysicalVsanDisk", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryObjectsOnPhysicalVsanDisk(soap, &soap_tmp___ns2__QueryObjectsOnPhysicalVsanDisk, "-ns2:QueryObjectsOnPhysicalVsanDisk", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryObjectsOnPhysicalVsanDiskResponse)
		return soap_closesock(soap);
	ns2__QueryObjectsOnPhysicalVsanDiskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryObjectsOnPhysicalVsanDiskResponse->soap_get(soap, "ns2:QueryObjectsOnPhysicalVsanDiskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryDisksForVsan(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryDisksForVsanRequestType *ns2__QueryDisksForVsan, _ns2__QueryDisksForVsanResponse *ns2__QueryDisksForVsanResponse)
{	struct __ns2__QueryDisksForVsan soap_tmp___ns2__QueryDisksForVsan;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryDisksForVsan.ns2__QueryDisksForVsan = ns2__QueryDisksForVsan;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryDisksForVsan(soap, &soap_tmp___ns2__QueryDisksForVsan);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryDisksForVsan(soap, &soap_tmp___ns2__QueryDisksForVsan, "-ns2:QueryDisksForVsan", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryDisksForVsan(soap, &soap_tmp___ns2__QueryDisksForVsan, "-ns2:QueryDisksForVsan", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryDisksForVsanResponse)
		return soap_closesock(soap);
	ns2__QueryDisksForVsanResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryDisksForVsanResponse->soap_get(soap, "ns2:QueryDisksForVsanResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__AddDisks_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__AddDisksRequestType *ns2__AddDisks_USCORETask, _ns2__AddDisks_USCORETaskResponse *ns2__AddDisks_USCORETaskResponse)
{	struct __ns2__AddDisks_USCORETask soap_tmp___ns2__AddDisks_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__AddDisks_USCORETask.ns2__AddDisks_USCORETask = ns2__AddDisks_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__AddDisks_USCORETask(soap, &soap_tmp___ns2__AddDisks_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__AddDisks_USCORETask(soap, &soap_tmp___ns2__AddDisks_USCORETask, "-ns2:AddDisks_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__AddDisks_USCORETask(soap, &soap_tmp___ns2__AddDisks_USCORETask, "-ns2:AddDisks_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__AddDisks_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__AddDisks_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__AddDisks_USCORETaskResponse->soap_get(soap, "ns2:AddDisks_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__InitializeDisks_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__InitializeDisksRequestType *ns2__InitializeDisks_USCORETask, _ns2__InitializeDisks_USCORETaskResponse *ns2__InitializeDisks_USCORETaskResponse)
{	struct __ns2__InitializeDisks_USCORETask soap_tmp___ns2__InitializeDisks_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__InitializeDisks_USCORETask.ns2__InitializeDisks_USCORETask = ns2__InitializeDisks_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__InitializeDisks_USCORETask(soap, &soap_tmp___ns2__InitializeDisks_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__InitializeDisks_USCORETask(soap, &soap_tmp___ns2__InitializeDisks_USCORETask, "-ns2:InitializeDisks_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__InitializeDisks_USCORETask(soap, &soap_tmp___ns2__InitializeDisks_USCORETask, "-ns2:InitializeDisks_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__InitializeDisks_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__InitializeDisks_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__InitializeDisks_USCORETaskResponse->soap_get(soap, "ns2:InitializeDisks_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RemoveDisk_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RemoveDiskRequestType *ns2__RemoveDisk_USCORETask, _ns2__RemoveDisk_USCORETaskResponse *ns2__RemoveDisk_USCORETaskResponse)
{	struct __ns2__RemoveDisk_USCORETask soap_tmp___ns2__RemoveDisk_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RemoveDisk_USCORETask.ns2__RemoveDisk_USCORETask = ns2__RemoveDisk_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RemoveDisk_USCORETask(soap, &soap_tmp___ns2__RemoveDisk_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RemoveDisk_USCORETask(soap, &soap_tmp___ns2__RemoveDisk_USCORETask, "-ns2:RemoveDisk_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RemoveDisk_USCORETask(soap, &soap_tmp___ns2__RemoveDisk_USCORETask, "-ns2:RemoveDisk_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RemoveDisk_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__RemoveDisk_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RemoveDisk_USCORETaskResponse->soap_get(soap, "ns2:RemoveDisk_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RemoveDiskMapping_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RemoveDiskMappingRequestType *ns2__RemoveDiskMapping_USCORETask, _ns2__RemoveDiskMapping_USCORETaskResponse *ns2__RemoveDiskMapping_USCORETaskResponse)
{	struct __ns2__RemoveDiskMapping_USCORETask soap_tmp___ns2__RemoveDiskMapping_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RemoveDiskMapping_USCORETask.ns2__RemoveDiskMapping_USCORETask = ns2__RemoveDiskMapping_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RemoveDiskMapping_USCORETask(soap, &soap_tmp___ns2__RemoveDiskMapping_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RemoveDiskMapping_USCORETask(soap, &soap_tmp___ns2__RemoveDiskMapping_USCORETask, "-ns2:RemoveDiskMapping_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RemoveDiskMapping_USCORETask(soap, &soap_tmp___ns2__RemoveDiskMapping_USCORETask, "-ns2:RemoveDiskMapping_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RemoveDiskMapping_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__RemoveDiskMapping_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RemoveDiskMapping_USCORETaskResponse->soap_get(soap, "ns2:RemoveDiskMapping_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UpdateVsan_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UpdateVsanRequestType *ns2__UpdateVsan_USCORETask, _ns2__UpdateVsan_USCORETaskResponse *ns2__UpdateVsan_USCORETaskResponse)
{	struct __ns2__UpdateVsan_USCORETask soap_tmp___ns2__UpdateVsan_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UpdateVsan_USCORETask.ns2__UpdateVsan_USCORETask = ns2__UpdateVsan_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UpdateVsan_USCORETask(soap, &soap_tmp___ns2__UpdateVsan_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UpdateVsan_USCORETask(soap, &soap_tmp___ns2__UpdateVsan_USCORETask, "-ns2:UpdateVsan_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UpdateVsan_USCORETask(soap, &soap_tmp___ns2__UpdateVsan_USCORETask, "-ns2:UpdateVsan_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UpdateVsan_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__UpdateVsan_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UpdateVsan_USCORETaskResponse->soap_get(soap, "ns2:UpdateVsan_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryHostStatus(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryHostStatusRequestType *ns2__QueryHostStatus, _ns2__QueryHostStatusResponse *ns2__QueryHostStatusResponse)
{	struct __ns2__QueryHostStatus soap_tmp___ns2__QueryHostStatus;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryHostStatus.ns2__QueryHostStatus = ns2__QueryHostStatus;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryHostStatus(soap, &soap_tmp___ns2__QueryHostStatus);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryHostStatus(soap, &soap_tmp___ns2__QueryHostStatus, "-ns2:QueryHostStatus", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryHostStatus(soap, &soap_tmp___ns2__QueryHostStatus, "-ns2:QueryHostStatus", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryHostStatusResponse)
		return soap_closesock(soap);
	ns2__QueryHostStatusResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryHostStatusResponse->soap_get(soap, "ns2:QueryHostStatusResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryOptionsRequestType *ns2__QueryOptions, _ns2__QueryOptionsResponse *ns2__QueryOptionsResponse)
{	struct __ns2__QueryOptions soap_tmp___ns2__QueryOptions;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryOptions.ns2__QueryOptions = ns2__QueryOptions;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryOptions(soap, &soap_tmp___ns2__QueryOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryOptions(soap, &soap_tmp___ns2__QueryOptions, "-ns2:QueryOptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryOptions(soap, &soap_tmp___ns2__QueryOptions, "-ns2:QueryOptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryOptionsResponse)
		return soap_closesock(soap);
	ns2__QueryOptionsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryOptionsResponse->soap_get(soap, "ns2:QueryOptionsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UpdateOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UpdateOptionsRequestType *ns2__UpdateOptions, _ns2__UpdateOptionsResponse *ns2__UpdateOptionsResponse)
{	struct __ns2__UpdateOptions soap_tmp___ns2__UpdateOptions;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UpdateOptions.ns2__UpdateOptions = ns2__UpdateOptions;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UpdateOptions(soap, &soap_tmp___ns2__UpdateOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UpdateOptions(soap, &soap_tmp___ns2__UpdateOptions, "-ns2:UpdateOptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UpdateOptions(soap, &soap_tmp___ns2__UpdateOptions, "-ns2:UpdateOptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UpdateOptionsResponse)
		return soap_closesock(soap);
	ns2__UpdateOptionsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UpdateOptionsResponse->soap_get(soap, "ns2:UpdateOptionsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__CheckCompliance_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__CheckComplianceRequestType *ns2__CheckCompliance_USCORETask, _ns2__CheckCompliance_USCORETaskResponse *ns2__CheckCompliance_USCORETaskResponse)
{	struct __ns2__CheckCompliance_USCORETask soap_tmp___ns2__CheckCompliance_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__CheckCompliance_USCORETask.ns2__CheckCompliance_USCORETask = ns2__CheckCompliance_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__CheckCompliance_USCORETask(soap, &soap_tmp___ns2__CheckCompliance_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__CheckCompliance_USCORETask(soap, &soap_tmp___ns2__CheckCompliance_USCORETask, "-ns2:CheckCompliance_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__CheckCompliance_USCORETask(soap, &soap_tmp___ns2__CheckCompliance_USCORETask, "-ns2:CheckCompliance_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CheckCompliance_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__CheckCompliance_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CheckCompliance_USCORETaskResponse->soap_get(soap, "ns2:CheckCompliance_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryComplianceStatus(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryComplianceStatusRequestType *ns2__QueryComplianceStatus, _ns2__QueryComplianceStatusResponse *ns2__QueryComplianceStatusResponse)
{	struct __ns2__QueryComplianceStatus soap_tmp___ns2__QueryComplianceStatus;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryComplianceStatus.ns2__QueryComplianceStatus = ns2__QueryComplianceStatus;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryComplianceStatus(soap, &soap_tmp___ns2__QueryComplianceStatus);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryComplianceStatus(soap, &soap_tmp___ns2__QueryComplianceStatus, "-ns2:QueryComplianceStatus", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryComplianceStatus(soap, &soap_tmp___ns2__QueryComplianceStatus, "-ns2:QueryComplianceStatus", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryComplianceStatusResponse)
		return soap_closesock(soap);
	ns2__QueryComplianceStatusResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryComplianceStatusResponse->soap_get(soap, "ns2:QueryComplianceStatusResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ClearComplianceStatus(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ClearComplianceStatusRequestType *ns2__ClearComplianceStatus, _ns2__ClearComplianceStatusResponse *ns2__ClearComplianceStatusResponse)
{	struct __ns2__ClearComplianceStatus soap_tmp___ns2__ClearComplianceStatus;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ClearComplianceStatus.ns2__ClearComplianceStatus = ns2__ClearComplianceStatus;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ClearComplianceStatus(soap, &soap_tmp___ns2__ClearComplianceStatus);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ClearComplianceStatus(soap, &soap_tmp___ns2__ClearComplianceStatus, "-ns2:ClearComplianceStatus", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ClearComplianceStatus(soap, &soap_tmp___ns2__ClearComplianceStatus, "-ns2:ClearComplianceStatus", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ClearComplianceStatusResponse)
		return soap_closesock(soap);
	ns2__ClearComplianceStatusResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ClearComplianceStatusResponse->soap_get(soap, "ns2:ClearComplianceStatusResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryExpressionMetadata(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryExpressionMetadataRequestType *ns2__QueryExpressionMetadata, _ns2__QueryExpressionMetadataResponse *ns2__QueryExpressionMetadataResponse)
{	struct __ns2__QueryExpressionMetadata soap_tmp___ns2__QueryExpressionMetadata;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryExpressionMetadata.ns2__QueryExpressionMetadata = ns2__QueryExpressionMetadata;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryExpressionMetadata(soap, &soap_tmp___ns2__QueryExpressionMetadata);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryExpressionMetadata(soap, &soap_tmp___ns2__QueryExpressionMetadata, "-ns2:QueryExpressionMetadata", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryExpressionMetadata(soap, &soap_tmp___ns2__QueryExpressionMetadata, "-ns2:QueryExpressionMetadata", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryExpressionMetadataResponse)
		return soap_closesock(soap);
	ns2__QueryExpressionMetadataResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryExpressionMetadataResponse->soap_get(soap, "ns2:QueryExpressionMetadataResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RetrieveDescription(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RetrieveDescriptionRequestType *ns2__RetrieveDescription, _ns2__RetrieveDescriptionResponse *ns2__RetrieveDescriptionResponse)
{	struct __ns2__RetrieveDescription soap_tmp___ns2__RetrieveDescription;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RetrieveDescription.ns2__RetrieveDescription = ns2__RetrieveDescription;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RetrieveDescription(soap, &soap_tmp___ns2__RetrieveDescription);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RetrieveDescription(soap, &soap_tmp___ns2__RetrieveDescription, "-ns2:RetrieveDescription", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RetrieveDescription(soap, &soap_tmp___ns2__RetrieveDescription, "-ns2:RetrieveDescription", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RetrieveDescriptionResponse)
		return soap_closesock(soap);
	ns2__RetrieveDescriptionResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RetrieveDescriptionResponse->soap_get(soap, "ns2:RetrieveDescriptionResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__DestroyProfile(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__DestroyProfileRequestType *ns2__DestroyProfile, _ns2__DestroyProfileResponse *ns2__DestroyProfileResponse)
{	struct __ns2__DestroyProfile soap_tmp___ns2__DestroyProfile;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__DestroyProfile.ns2__DestroyProfile = ns2__DestroyProfile;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__DestroyProfile(soap, &soap_tmp___ns2__DestroyProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__DestroyProfile(soap, &soap_tmp___ns2__DestroyProfile, "-ns2:DestroyProfile", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__DestroyProfile(soap, &soap_tmp___ns2__DestroyProfile, "-ns2:DestroyProfile", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__DestroyProfileResponse)
		return soap_closesock(soap);
	ns2__DestroyProfileResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__DestroyProfileResponse->soap_get(soap, "ns2:DestroyProfileResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__AssociateProfile(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__AssociateProfileRequestType *ns2__AssociateProfile, _ns2__AssociateProfileResponse *ns2__AssociateProfileResponse)
{	struct __ns2__AssociateProfile soap_tmp___ns2__AssociateProfile;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__AssociateProfile.ns2__AssociateProfile = ns2__AssociateProfile;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__AssociateProfile(soap, &soap_tmp___ns2__AssociateProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__AssociateProfile(soap, &soap_tmp___ns2__AssociateProfile, "-ns2:AssociateProfile", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__AssociateProfile(soap, &soap_tmp___ns2__AssociateProfile, "-ns2:AssociateProfile", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__AssociateProfileResponse)
		return soap_closesock(soap);
	ns2__AssociateProfileResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__AssociateProfileResponse->soap_get(soap, "ns2:AssociateProfileResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__DissociateProfile(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__DissociateProfileRequestType *ns2__DissociateProfile, _ns2__DissociateProfileResponse *ns2__DissociateProfileResponse)
{	struct __ns2__DissociateProfile soap_tmp___ns2__DissociateProfile;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__DissociateProfile.ns2__DissociateProfile = ns2__DissociateProfile;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__DissociateProfile(soap, &soap_tmp___ns2__DissociateProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__DissociateProfile(soap, &soap_tmp___ns2__DissociateProfile, "-ns2:DissociateProfile", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__DissociateProfile(soap, &soap_tmp___ns2__DissociateProfile, "-ns2:DissociateProfile", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__DissociateProfileResponse)
		return soap_closesock(soap);
	ns2__DissociateProfileResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__DissociateProfileResponse->soap_get(soap, "ns2:DissociateProfileResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__CheckProfileCompliance_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__CheckProfileComplianceRequestType *ns2__CheckProfileCompliance_USCORETask, _ns2__CheckProfileCompliance_USCORETaskResponse *ns2__CheckProfileCompliance_USCORETaskResponse)
{	struct __ns2__CheckProfileCompliance_USCORETask soap_tmp___ns2__CheckProfileCompliance_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__CheckProfileCompliance_USCORETask.ns2__CheckProfileCompliance_USCORETask = ns2__CheckProfileCompliance_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__CheckProfileCompliance_USCORETask(soap, &soap_tmp___ns2__CheckProfileCompliance_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__CheckProfileCompliance_USCORETask(soap, &soap_tmp___ns2__CheckProfileCompliance_USCORETask, "-ns2:CheckProfileCompliance_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__CheckProfileCompliance_USCORETask(soap, &soap_tmp___ns2__CheckProfileCompliance_USCORETask, "-ns2:CheckProfileCompliance_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CheckProfileCompliance_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__CheckProfileCompliance_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CheckProfileCompliance_USCORETaskResponse->soap_get(soap, "ns2:CheckProfileCompliance_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ExportProfile(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ExportProfileRequestType *ns2__ExportProfile, _ns2__ExportProfileResponse *ns2__ExportProfileResponse)
{	struct __ns2__ExportProfile soap_tmp___ns2__ExportProfile;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ExportProfile.ns2__ExportProfile = ns2__ExportProfile;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ExportProfile(soap, &soap_tmp___ns2__ExportProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ExportProfile(soap, &soap_tmp___ns2__ExportProfile, "-ns2:ExportProfile", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ExportProfile(soap, &soap_tmp___ns2__ExportProfile, "-ns2:ExportProfile", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ExportProfileResponse)
		return soap_closesock(soap);
	ns2__ExportProfileResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ExportProfileResponse->soap_get(soap, "ns2:ExportProfileResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__CreateProfile(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__CreateProfileRequestType *ns2__CreateProfile, _ns2__CreateProfileResponse *ns2__CreateProfileResponse)
{	struct __ns2__CreateProfile soap_tmp___ns2__CreateProfile;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__CreateProfile.ns2__CreateProfile = ns2__CreateProfile;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__CreateProfile(soap, &soap_tmp___ns2__CreateProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__CreateProfile(soap, &soap_tmp___ns2__CreateProfile, "-ns2:CreateProfile", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__CreateProfile(soap, &soap_tmp___ns2__CreateProfile, "-ns2:CreateProfile", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CreateProfileResponse)
		return soap_closesock(soap);
	ns2__CreateProfileResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CreateProfileResponse->soap_get(soap, "ns2:CreateProfileResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryPolicyMetadata(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryPolicyMetadataRequestType *ns2__QueryPolicyMetadata, _ns2__QueryPolicyMetadataResponse *ns2__QueryPolicyMetadataResponse)
{	struct __ns2__QueryPolicyMetadata soap_tmp___ns2__QueryPolicyMetadata;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryPolicyMetadata.ns2__QueryPolicyMetadata = ns2__QueryPolicyMetadata;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryPolicyMetadata(soap, &soap_tmp___ns2__QueryPolicyMetadata);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryPolicyMetadata(soap, &soap_tmp___ns2__QueryPolicyMetadata, "-ns2:QueryPolicyMetadata", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryPolicyMetadata(soap, &soap_tmp___ns2__QueryPolicyMetadata, "-ns2:QueryPolicyMetadata", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryPolicyMetadataResponse)
		return soap_closesock(soap);
	ns2__QueryPolicyMetadataResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryPolicyMetadataResponse->soap_get(soap, "ns2:QueryPolicyMetadataResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__FindAssociatedProfile(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__FindAssociatedProfileRequestType *ns2__FindAssociatedProfile, _ns2__FindAssociatedProfileResponse *ns2__FindAssociatedProfileResponse)
{	struct __ns2__FindAssociatedProfile soap_tmp___ns2__FindAssociatedProfile;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__FindAssociatedProfile.ns2__FindAssociatedProfile = ns2__FindAssociatedProfile;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__FindAssociatedProfile(soap, &soap_tmp___ns2__FindAssociatedProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__FindAssociatedProfile(soap, &soap_tmp___ns2__FindAssociatedProfile, "-ns2:FindAssociatedProfile", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__FindAssociatedProfile(soap, &soap_tmp___ns2__FindAssociatedProfile, "-ns2:FindAssociatedProfile", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__FindAssociatedProfileResponse)
		return soap_closesock(soap);
	ns2__FindAssociatedProfileResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__FindAssociatedProfileResponse->soap_get(soap, "ns2:FindAssociatedProfileResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UpdateClusterProfile(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UpdateClusterProfileRequestType *ns2__UpdateClusterProfile, _ns2__UpdateClusterProfileResponse *ns2__UpdateClusterProfileResponse)
{	struct __ns2__UpdateClusterProfile soap_tmp___ns2__UpdateClusterProfile;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UpdateClusterProfile.ns2__UpdateClusterProfile = ns2__UpdateClusterProfile;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UpdateClusterProfile(soap, &soap_tmp___ns2__UpdateClusterProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UpdateClusterProfile(soap, &soap_tmp___ns2__UpdateClusterProfile, "-ns2:UpdateClusterProfile", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UpdateClusterProfile(soap, &soap_tmp___ns2__UpdateClusterProfile, "-ns2:UpdateClusterProfile", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UpdateClusterProfileResponse)
		return soap_closesock(soap);
	ns2__UpdateClusterProfileResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UpdateClusterProfileResponse->soap_get(soap, "ns2:UpdateClusterProfileResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UpdateReferenceHost(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UpdateReferenceHostRequestType *ns2__UpdateReferenceHost, _ns2__UpdateReferenceHostResponse *ns2__UpdateReferenceHostResponse)
{	struct __ns2__UpdateReferenceHost soap_tmp___ns2__UpdateReferenceHost;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UpdateReferenceHost.ns2__UpdateReferenceHost = ns2__UpdateReferenceHost;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UpdateReferenceHost(soap, &soap_tmp___ns2__UpdateReferenceHost);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UpdateReferenceHost(soap, &soap_tmp___ns2__UpdateReferenceHost, "-ns2:UpdateReferenceHost", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UpdateReferenceHost(soap, &soap_tmp___ns2__UpdateReferenceHost, "-ns2:UpdateReferenceHost", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UpdateReferenceHostResponse)
		return soap_closesock(soap);
	ns2__UpdateReferenceHostResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UpdateReferenceHostResponse->soap_get(soap, "ns2:UpdateReferenceHostResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UpdateHostProfile(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UpdateHostProfileRequestType *ns2__UpdateHostProfile, _ns2__UpdateHostProfileResponse *ns2__UpdateHostProfileResponse)
{	struct __ns2__UpdateHostProfile soap_tmp___ns2__UpdateHostProfile;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UpdateHostProfile.ns2__UpdateHostProfile = ns2__UpdateHostProfile;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UpdateHostProfile(soap, &soap_tmp___ns2__UpdateHostProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UpdateHostProfile(soap, &soap_tmp___ns2__UpdateHostProfile, "-ns2:UpdateHostProfile", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UpdateHostProfile(soap, &soap_tmp___ns2__UpdateHostProfile, "-ns2:UpdateHostProfile", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UpdateHostProfileResponse)
		return soap_closesock(soap);
	ns2__UpdateHostProfileResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UpdateHostProfileResponse->soap_get(soap, "ns2:UpdateHostProfileResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ExecuteHostProfile(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ExecuteHostProfileRequestType *ns2__ExecuteHostProfile, _ns2__ExecuteHostProfileResponse *ns2__ExecuteHostProfileResponse)
{	struct __ns2__ExecuteHostProfile soap_tmp___ns2__ExecuteHostProfile;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ExecuteHostProfile.ns2__ExecuteHostProfile = ns2__ExecuteHostProfile;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ExecuteHostProfile(soap, &soap_tmp___ns2__ExecuteHostProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ExecuteHostProfile(soap, &soap_tmp___ns2__ExecuteHostProfile, "-ns2:ExecuteHostProfile", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ExecuteHostProfile(soap, &soap_tmp___ns2__ExecuteHostProfile, "-ns2:ExecuteHostProfile", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ExecuteHostProfileResponse)
		return soap_closesock(soap);
	ns2__ExecuteHostProfileResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ExecuteHostProfileResponse->soap_get(soap, "ns2:ExecuteHostProfileResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ApplyHostConfig_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ApplyHostConfigRequestType *ns2__ApplyHostConfig_USCORETask, _ns2__ApplyHostConfig_USCORETaskResponse *ns2__ApplyHostConfig_USCORETaskResponse)
{	struct __ns2__ApplyHostConfig_USCORETask soap_tmp___ns2__ApplyHostConfig_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ApplyHostConfig_USCORETask.ns2__ApplyHostConfig_USCORETask = ns2__ApplyHostConfig_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ApplyHostConfig_USCORETask(soap, &soap_tmp___ns2__ApplyHostConfig_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ApplyHostConfig_USCORETask(soap, &soap_tmp___ns2__ApplyHostConfig_USCORETask, "-ns2:ApplyHostConfig_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ApplyHostConfig_USCORETask(soap, &soap_tmp___ns2__ApplyHostConfig_USCORETask, "-ns2:ApplyHostConfig_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ApplyHostConfig_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__ApplyHostConfig_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ApplyHostConfig_USCORETaskResponse->soap_get(soap, "ns2:ApplyHostConfig_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__GenerateConfigTaskList(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__GenerateConfigTaskListRequestType *ns2__GenerateConfigTaskList, _ns2__GenerateConfigTaskListResponse *ns2__GenerateConfigTaskListResponse)
{	struct __ns2__GenerateConfigTaskList soap_tmp___ns2__GenerateConfigTaskList;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__GenerateConfigTaskList.ns2__GenerateConfigTaskList = ns2__GenerateConfigTaskList;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__GenerateConfigTaskList(soap, &soap_tmp___ns2__GenerateConfigTaskList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__GenerateConfigTaskList(soap, &soap_tmp___ns2__GenerateConfigTaskList, "-ns2:GenerateConfigTaskList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__GenerateConfigTaskList(soap, &soap_tmp___ns2__GenerateConfigTaskList, "-ns2:GenerateConfigTaskList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__GenerateConfigTaskListResponse)
		return soap_closesock(soap);
	ns2__GenerateConfigTaskListResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__GenerateConfigTaskListResponse->soap_get(soap, "ns2:GenerateConfigTaskListResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__GenerateHostProfileTaskList_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__GenerateHostProfileTaskListRequestType *ns2__GenerateHostProfileTaskList_USCORETask, _ns2__GenerateHostProfileTaskList_USCORETaskResponse *ns2__GenerateHostProfileTaskList_USCORETaskResponse)
{	struct __ns2__GenerateHostProfileTaskList_USCORETask soap_tmp___ns2__GenerateHostProfileTaskList_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__GenerateHostProfileTaskList_USCORETask.ns2__GenerateHostProfileTaskList_USCORETask = ns2__GenerateHostProfileTaskList_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__GenerateHostProfileTaskList_USCORETask(soap, &soap_tmp___ns2__GenerateHostProfileTaskList_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__GenerateHostProfileTaskList_USCORETask(soap, &soap_tmp___ns2__GenerateHostProfileTaskList_USCORETask, "-ns2:GenerateHostProfileTaskList_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__GenerateHostProfileTaskList_USCORETask(soap, &soap_tmp___ns2__GenerateHostProfileTaskList_USCORETask, "-ns2:GenerateHostProfileTaskList_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__GenerateHostProfileTaskList_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__GenerateHostProfileTaskList_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__GenerateHostProfileTaskList_USCORETaskResponse->soap_get(soap, "ns2:GenerateHostProfileTaskList_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryHostProfileMetadata(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryHostProfileMetadataRequestType *ns2__QueryHostProfileMetadata, _ns2__QueryHostProfileMetadataResponse *ns2__QueryHostProfileMetadataResponse)
{	struct __ns2__QueryHostProfileMetadata soap_tmp___ns2__QueryHostProfileMetadata;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryHostProfileMetadata.ns2__QueryHostProfileMetadata = ns2__QueryHostProfileMetadata;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryHostProfileMetadata(soap, &soap_tmp___ns2__QueryHostProfileMetadata);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryHostProfileMetadata(soap, &soap_tmp___ns2__QueryHostProfileMetadata, "-ns2:QueryHostProfileMetadata", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryHostProfileMetadata(soap, &soap_tmp___ns2__QueryHostProfileMetadata, "-ns2:QueryHostProfileMetadata", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryHostProfileMetadataResponse)
		return soap_closesock(soap);
	ns2__QueryHostProfileMetadataResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryHostProfileMetadataResponse->soap_get(soap, "ns2:QueryHostProfileMetadataResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryProfileStructure(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryProfileStructureRequestType *ns2__QueryProfileStructure, _ns2__QueryProfileStructureResponse *ns2__QueryProfileStructureResponse)
{	struct __ns2__QueryProfileStructure soap_tmp___ns2__QueryProfileStructure;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryProfileStructure.ns2__QueryProfileStructure = ns2__QueryProfileStructure;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryProfileStructure(soap, &soap_tmp___ns2__QueryProfileStructure);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryProfileStructure(soap, &soap_tmp___ns2__QueryProfileStructure, "-ns2:QueryProfileStructure", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryProfileStructure(soap, &soap_tmp___ns2__QueryProfileStructure, "-ns2:QueryProfileStructure", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryProfileStructureResponse)
		return soap_closesock(soap);
	ns2__QueryProfileStructureResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryProfileStructureResponse->soap_get(soap, "ns2:QueryProfileStructureResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__CreateDefaultProfile(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__CreateDefaultProfileRequestType *ns2__CreateDefaultProfile, _ns2__CreateDefaultProfileResponse *ns2__CreateDefaultProfileResponse)
{	struct __ns2__CreateDefaultProfile soap_tmp___ns2__CreateDefaultProfile;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__CreateDefaultProfile.ns2__CreateDefaultProfile = ns2__CreateDefaultProfile;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__CreateDefaultProfile(soap, &soap_tmp___ns2__CreateDefaultProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__CreateDefaultProfile(soap, &soap_tmp___ns2__CreateDefaultProfile, "-ns2:CreateDefaultProfile", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__CreateDefaultProfile(soap, &soap_tmp___ns2__CreateDefaultProfile, "-ns2:CreateDefaultProfile", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CreateDefaultProfileResponse)
		return soap_closesock(soap);
	ns2__CreateDefaultProfileResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CreateDefaultProfileResponse->soap_get(soap, "ns2:CreateDefaultProfileResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__UpdateAnswerFile_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__UpdateAnswerFileRequestType *ns2__UpdateAnswerFile_USCORETask, _ns2__UpdateAnswerFile_USCORETaskResponse *ns2__UpdateAnswerFile_USCORETaskResponse)
{	struct __ns2__UpdateAnswerFile_USCORETask soap_tmp___ns2__UpdateAnswerFile_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__UpdateAnswerFile_USCORETask.ns2__UpdateAnswerFile_USCORETask = ns2__UpdateAnswerFile_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__UpdateAnswerFile_USCORETask(soap, &soap_tmp___ns2__UpdateAnswerFile_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__UpdateAnswerFile_USCORETask(soap, &soap_tmp___ns2__UpdateAnswerFile_USCORETask, "-ns2:UpdateAnswerFile_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__UpdateAnswerFile_USCORETask(soap, &soap_tmp___ns2__UpdateAnswerFile_USCORETask, "-ns2:UpdateAnswerFile_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UpdateAnswerFile_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__UpdateAnswerFile_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UpdateAnswerFile_USCORETaskResponse->soap_get(soap, "ns2:UpdateAnswerFile_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RetrieveAnswerFile(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RetrieveAnswerFileRequestType *ns2__RetrieveAnswerFile, _ns2__RetrieveAnswerFileResponse *ns2__RetrieveAnswerFileResponse)
{	struct __ns2__RetrieveAnswerFile soap_tmp___ns2__RetrieveAnswerFile;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RetrieveAnswerFile.ns2__RetrieveAnswerFile = ns2__RetrieveAnswerFile;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RetrieveAnswerFile(soap, &soap_tmp___ns2__RetrieveAnswerFile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RetrieveAnswerFile(soap, &soap_tmp___ns2__RetrieveAnswerFile, "-ns2:RetrieveAnswerFile", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RetrieveAnswerFile(soap, &soap_tmp___ns2__RetrieveAnswerFile, "-ns2:RetrieveAnswerFile", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RetrieveAnswerFileResponse)
		return soap_closesock(soap);
	ns2__RetrieveAnswerFileResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RetrieveAnswerFileResponse->soap_get(soap, "ns2:RetrieveAnswerFileResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RetrieveAnswerFileForProfile(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RetrieveAnswerFileForProfileRequestType *ns2__RetrieveAnswerFileForProfile, _ns2__RetrieveAnswerFileForProfileResponse *ns2__RetrieveAnswerFileForProfileResponse)
{	struct __ns2__RetrieveAnswerFileForProfile soap_tmp___ns2__RetrieveAnswerFileForProfile;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RetrieveAnswerFileForProfile.ns2__RetrieveAnswerFileForProfile = ns2__RetrieveAnswerFileForProfile;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RetrieveAnswerFileForProfile(soap, &soap_tmp___ns2__RetrieveAnswerFileForProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RetrieveAnswerFileForProfile(soap, &soap_tmp___ns2__RetrieveAnswerFileForProfile, "-ns2:RetrieveAnswerFileForProfile", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RetrieveAnswerFileForProfile(soap, &soap_tmp___ns2__RetrieveAnswerFileForProfile, "-ns2:RetrieveAnswerFileForProfile", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RetrieveAnswerFileForProfileResponse)
		return soap_closesock(soap);
	ns2__RetrieveAnswerFileForProfileResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RetrieveAnswerFileForProfileResponse->soap_get(soap, "ns2:RetrieveAnswerFileForProfileResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ExportAnswerFile_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ExportAnswerFileRequestType *ns2__ExportAnswerFile_USCORETask, _ns2__ExportAnswerFile_USCORETaskResponse *ns2__ExportAnswerFile_USCORETaskResponse)
{	struct __ns2__ExportAnswerFile_USCORETask soap_tmp___ns2__ExportAnswerFile_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ExportAnswerFile_USCORETask.ns2__ExportAnswerFile_USCORETask = ns2__ExportAnswerFile_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ExportAnswerFile_USCORETask(soap, &soap_tmp___ns2__ExportAnswerFile_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ExportAnswerFile_USCORETask(soap, &soap_tmp___ns2__ExportAnswerFile_USCORETask, "-ns2:ExportAnswerFile_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ExportAnswerFile_USCORETask(soap, &soap_tmp___ns2__ExportAnswerFile_USCORETask, "-ns2:ExportAnswerFile_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ExportAnswerFile_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__ExportAnswerFile_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ExportAnswerFile_USCORETaskResponse->soap_get(soap, "ns2:ExportAnswerFile_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__CheckAnswerFileStatus_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__CheckAnswerFileStatusRequestType *ns2__CheckAnswerFileStatus_USCORETask, _ns2__CheckAnswerFileStatus_USCORETaskResponse *ns2__CheckAnswerFileStatus_USCORETaskResponse)
{	struct __ns2__CheckAnswerFileStatus_USCORETask soap_tmp___ns2__CheckAnswerFileStatus_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__CheckAnswerFileStatus_USCORETask.ns2__CheckAnswerFileStatus_USCORETask = ns2__CheckAnswerFileStatus_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__CheckAnswerFileStatus_USCORETask(soap, &soap_tmp___ns2__CheckAnswerFileStatus_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__CheckAnswerFileStatus_USCORETask(soap, &soap_tmp___ns2__CheckAnswerFileStatus_USCORETask, "-ns2:CheckAnswerFileStatus_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__CheckAnswerFileStatus_USCORETask(soap, &soap_tmp___ns2__CheckAnswerFileStatus_USCORETask, "-ns2:CheckAnswerFileStatus_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CheckAnswerFileStatus_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__CheckAnswerFileStatus_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CheckAnswerFileStatus_USCORETaskResponse->soap_get(soap, "ns2:CheckAnswerFileStatus_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryAnswerFileStatus(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryAnswerFileStatusRequestType *ns2__QueryAnswerFileStatus, _ns2__QueryAnswerFileStatusResponse *ns2__QueryAnswerFileStatusResponse)
{	struct __ns2__QueryAnswerFileStatus soap_tmp___ns2__QueryAnswerFileStatus;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryAnswerFileStatus.ns2__QueryAnswerFileStatus = ns2__QueryAnswerFileStatus;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryAnswerFileStatus(soap, &soap_tmp___ns2__QueryAnswerFileStatus);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryAnswerFileStatus(soap, &soap_tmp___ns2__QueryAnswerFileStatus, "-ns2:QueryAnswerFileStatus", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryAnswerFileStatus(soap, &soap_tmp___ns2__QueryAnswerFileStatus, "-ns2:QueryAnswerFileStatus", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryAnswerFileStatusResponse)
		return soap_closesock(soap);
	ns2__QueryAnswerFileStatusResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryAnswerFileStatusResponse->soap_get(soap, "ns2:QueryAnswerFileStatusResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RemoveScheduledTask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RemoveScheduledTaskRequestType *ns2__RemoveScheduledTask, _ns2__RemoveScheduledTaskResponse *ns2__RemoveScheduledTaskResponse)
{	struct __ns2__RemoveScheduledTask soap_tmp___ns2__RemoveScheduledTask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RemoveScheduledTask.ns2__RemoveScheduledTask = ns2__RemoveScheduledTask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RemoveScheduledTask(soap, &soap_tmp___ns2__RemoveScheduledTask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RemoveScheduledTask(soap, &soap_tmp___ns2__RemoveScheduledTask, "-ns2:RemoveScheduledTask", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RemoveScheduledTask(soap, &soap_tmp___ns2__RemoveScheduledTask, "-ns2:RemoveScheduledTask", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RemoveScheduledTaskResponse)
		return soap_closesock(soap);
	ns2__RemoveScheduledTaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RemoveScheduledTaskResponse->soap_get(soap, "ns2:RemoveScheduledTaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ReconfigureScheduledTask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ReconfigureScheduledTaskRequestType *ns2__ReconfigureScheduledTask, _ns2__ReconfigureScheduledTaskResponse *ns2__ReconfigureScheduledTaskResponse)
{	struct __ns2__ReconfigureScheduledTask soap_tmp___ns2__ReconfigureScheduledTask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ReconfigureScheduledTask.ns2__ReconfigureScheduledTask = ns2__ReconfigureScheduledTask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ReconfigureScheduledTask(soap, &soap_tmp___ns2__ReconfigureScheduledTask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ReconfigureScheduledTask(soap, &soap_tmp___ns2__ReconfigureScheduledTask, "-ns2:ReconfigureScheduledTask", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ReconfigureScheduledTask(soap, &soap_tmp___ns2__ReconfigureScheduledTask, "-ns2:ReconfigureScheduledTask", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ReconfigureScheduledTaskResponse)
		return soap_closesock(soap);
	ns2__ReconfigureScheduledTaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ReconfigureScheduledTaskResponse->soap_get(soap, "ns2:ReconfigureScheduledTaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RunScheduledTask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RunScheduledTaskRequestType *ns2__RunScheduledTask, _ns2__RunScheduledTaskResponse *ns2__RunScheduledTaskResponse)
{	struct __ns2__RunScheduledTask soap_tmp___ns2__RunScheduledTask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RunScheduledTask.ns2__RunScheduledTask = ns2__RunScheduledTask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RunScheduledTask(soap, &soap_tmp___ns2__RunScheduledTask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RunScheduledTask(soap, &soap_tmp___ns2__RunScheduledTask, "-ns2:RunScheduledTask", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RunScheduledTask(soap, &soap_tmp___ns2__RunScheduledTask, "-ns2:RunScheduledTask", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RunScheduledTaskResponse)
		return soap_closesock(soap);
	ns2__RunScheduledTaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RunScheduledTaskResponse->soap_get(soap, "ns2:RunScheduledTaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__CreateScheduledTask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__CreateScheduledTaskRequestType *ns2__CreateScheduledTask, _ns2__CreateScheduledTaskResponse *ns2__CreateScheduledTaskResponse)
{	struct __ns2__CreateScheduledTask soap_tmp___ns2__CreateScheduledTask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__CreateScheduledTask.ns2__CreateScheduledTask = ns2__CreateScheduledTask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__CreateScheduledTask(soap, &soap_tmp___ns2__CreateScheduledTask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__CreateScheduledTask(soap, &soap_tmp___ns2__CreateScheduledTask, "-ns2:CreateScheduledTask", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__CreateScheduledTask(soap, &soap_tmp___ns2__CreateScheduledTask, "-ns2:CreateScheduledTask", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CreateScheduledTaskResponse)
		return soap_closesock(soap);
	ns2__CreateScheduledTaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CreateScheduledTaskResponse->soap_get(soap, "ns2:CreateScheduledTaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RetrieveEntityScheduledTask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RetrieveEntityScheduledTaskRequestType *ns2__RetrieveEntityScheduledTask, _ns2__RetrieveEntityScheduledTaskResponse *ns2__RetrieveEntityScheduledTaskResponse)
{	struct __ns2__RetrieveEntityScheduledTask soap_tmp___ns2__RetrieveEntityScheduledTask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RetrieveEntityScheduledTask.ns2__RetrieveEntityScheduledTask = ns2__RetrieveEntityScheduledTask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RetrieveEntityScheduledTask(soap, &soap_tmp___ns2__RetrieveEntityScheduledTask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RetrieveEntityScheduledTask(soap, &soap_tmp___ns2__RetrieveEntityScheduledTask, "-ns2:RetrieveEntityScheduledTask", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RetrieveEntityScheduledTask(soap, &soap_tmp___ns2__RetrieveEntityScheduledTask, "-ns2:RetrieveEntityScheduledTask", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RetrieveEntityScheduledTaskResponse)
		return soap_closesock(soap);
	ns2__RetrieveEntityScheduledTaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RetrieveEntityScheduledTaskResponse->soap_get(soap, "ns2:RetrieveEntityScheduledTaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__CreateObjectScheduledTask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__CreateObjectScheduledTaskRequestType *ns2__CreateObjectScheduledTask, _ns2__CreateObjectScheduledTaskResponse *ns2__CreateObjectScheduledTaskResponse)
{	struct __ns2__CreateObjectScheduledTask soap_tmp___ns2__CreateObjectScheduledTask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__CreateObjectScheduledTask.ns2__CreateObjectScheduledTask = ns2__CreateObjectScheduledTask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__CreateObjectScheduledTask(soap, &soap_tmp___ns2__CreateObjectScheduledTask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__CreateObjectScheduledTask(soap, &soap_tmp___ns2__CreateObjectScheduledTask, "-ns2:CreateObjectScheduledTask", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__CreateObjectScheduledTask(soap, &soap_tmp___ns2__CreateObjectScheduledTask, "-ns2:CreateObjectScheduledTask", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CreateObjectScheduledTaskResponse)
		return soap_closesock(soap);
	ns2__CreateObjectScheduledTaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CreateObjectScheduledTaskResponse->soap_get(soap, "ns2:CreateObjectScheduledTaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RetrieveObjectScheduledTask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RetrieveObjectScheduledTaskRequestType *ns2__RetrieveObjectScheduledTask, _ns2__RetrieveObjectScheduledTaskResponse *ns2__RetrieveObjectScheduledTaskResponse)
{	struct __ns2__RetrieveObjectScheduledTask soap_tmp___ns2__RetrieveObjectScheduledTask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RetrieveObjectScheduledTask.ns2__RetrieveObjectScheduledTask = ns2__RetrieveObjectScheduledTask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RetrieveObjectScheduledTask(soap, &soap_tmp___ns2__RetrieveObjectScheduledTask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RetrieveObjectScheduledTask(soap, &soap_tmp___ns2__RetrieveObjectScheduledTask, "-ns2:RetrieveObjectScheduledTask", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RetrieveObjectScheduledTask(soap, &soap_tmp___ns2__RetrieveObjectScheduledTask, "-ns2:RetrieveObjectScheduledTask", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RetrieveObjectScheduledTaskResponse)
		return soap_closesock(soap);
	ns2__RetrieveObjectScheduledTaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RetrieveObjectScheduledTaskResponse->soap_get(soap, "ns2:RetrieveObjectScheduledTaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__OpenInventoryViewFolder(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__OpenInventoryViewFolderRequestType *ns2__OpenInventoryViewFolder, _ns2__OpenInventoryViewFolderResponse *ns2__OpenInventoryViewFolderResponse)
{	struct __ns2__OpenInventoryViewFolder soap_tmp___ns2__OpenInventoryViewFolder;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__OpenInventoryViewFolder.ns2__OpenInventoryViewFolder = ns2__OpenInventoryViewFolder;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__OpenInventoryViewFolder(soap, &soap_tmp___ns2__OpenInventoryViewFolder);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__OpenInventoryViewFolder(soap, &soap_tmp___ns2__OpenInventoryViewFolder, "-ns2:OpenInventoryViewFolder", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__OpenInventoryViewFolder(soap, &soap_tmp___ns2__OpenInventoryViewFolder, "-ns2:OpenInventoryViewFolder", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__OpenInventoryViewFolderResponse)
		return soap_closesock(soap);
	ns2__OpenInventoryViewFolderResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__OpenInventoryViewFolderResponse->soap_get(soap, "ns2:OpenInventoryViewFolderResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__CloseInventoryViewFolder(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__CloseInventoryViewFolderRequestType *ns2__CloseInventoryViewFolder, _ns2__CloseInventoryViewFolderResponse *ns2__CloseInventoryViewFolderResponse)
{	struct __ns2__CloseInventoryViewFolder soap_tmp___ns2__CloseInventoryViewFolder;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__CloseInventoryViewFolder.ns2__CloseInventoryViewFolder = ns2__CloseInventoryViewFolder;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__CloseInventoryViewFolder(soap, &soap_tmp___ns2__CloseInventoryViewFolder);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__CloseInventoryViewFolder(soap, &soap_tmp___ns2__CloseInventoryViewFolder, "-ns2:CloseInventoryViewFolder", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__CloseInventoryViewFolder(soap, &soap_tmp___ns2__CloseInventoryViewFolder, "-ns2:CloseInventoryViewFolder", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CloseInventoryViewFolderResponse)
		return soap_closesock(soap);
	ns2__CloseInventoryViewFolderResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CloseInventoryViewFolderResponse->soap_get(soap, "ns2:CloseInventoryViewFolderResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ModifyListView(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ModifyListViewRequestType *ns2__ModifyListView, _ns2__ModifyListViewResponse *ns2__ModifyListViewResponse)
{	struct __ns2__ModifyListView soap_tmp___ns2__ModifyListView;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ModifyListView.ns2__ModifyListView = ns2__ModifyListView;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ModifyListView(soap, &soap_tmp___ns2__ModifyListView);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ModifyListView(soap, &soap_tmp___ns2__ModifyListView, "-ns2:ModifyListView", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ModifyListView(soap, &soap_tmp___ns2__ModifyListView, "-ns2:ModifyListView", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ModifyListViewResponse)
		return soap_closesock(soap);
	ns2__ModifyListViewResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ModifyListViewResponse->soap_get(soap, "ns2:ModifyListViewResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ResetListView(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ResetListViewRequestType *ns2__ResetListView, _ns2__ResetListViewResponse *ns2__ResetListViewResponse)
{	struct __ns2__ResetListView soap_tmp___ns2__ResetListView;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ResetListView.ns2__ResetListView = ns2__ResetListView;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ResetListView(soap, &soap_tmp___ns2__ResetListView);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ResetListView(soap, &soap_tmp___ns2__ResetListView, "-ns2:ResetListView", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ResetListView(soap, &soap_tmp___ns2__ResetListView, "-ns2:ResetListView", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ResetListViewResponse)
		return soap_closesock(soap);
	ns2__ResetListViewResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ResetListViewResponse->soap_get(soap, "ns2:ResetListViewResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ResetListViewFromView(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ResetListViewFromViewRequestType *ns2__ResetListViewFromView, _ns2__ResetListViewFromViewResponse *ns2__ResetListViewFromViewResponse)
{	struct __ns2__ResetListViewFromView soap_tmp___ns2__ResetListViewFromView;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ResetListViewFromView.ns2__ResetListViewFromView = ns2__ResetListViewFromView;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ResetListViewFromView(soap, &soap_tmp___ns2__ResetListViewFromView);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ResetListViewFromView(soap, &soap_tmp___ns2__ResetListViewFromView, "-ns2:ResetListViewFromView", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ResetListViewFromView(soap, &soap_tmp___ns2__ResetListViewFromView, "-ns2:ResetListViewFromView", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ResetListViewFromViewResponse)
		return soap_closesock(soap);
	ns2__ResetListViewFromViewResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ResetListViewFromViewResponse->soap_get(soap, "ns2:ResetListViewFromViewResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__DestroyView(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__DestroyViewRequestType *ns2__DestroyView, _ns2__DestroyViewResponse *ns2__DestroyViewResponse)
{	struct __ns2__DestroyView soap_tmp___ns2__DestroyView;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__DestroyView.ns2__DestroyView = ns2__DestroyView;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__DestroyView(soap, &soap_tmp___ns2__DestroyView);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__DestroyView(soap, &soap_tmp___ns2__DestroyView, "-ns2:DestroyView", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__DestroyView(soap, &soap_tmp___ns2__DestroyView, "-ns2:DestroyView", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__DestroyViewResponse)
		return soap_closesock(soap);
	ns2__DestroyViewResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__DestroyViewResponse->soap_get(soap, "ns2:DestroyViewResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__CreateInventoryView(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__CreateInventoryViewRequestType *ns2__CreateInventoryView, _ns2__CreateInventoryViewResponse *ns2__CreateInventoryViewResponse)
{	struct __ns2__CreateInventoryView soap_tmp___ns2__CreateInventoryView;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__CreateInventoryView.ns2__CreateInventoryView = ns2__CreateInventoryView;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__CreateInventoryView(soap, &soap_tmp___ns2__CreateInventoryView);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__CreateInventoryView(soap, &soap_tmp___ns2__CreateInventoryView, "-ns2:CreateInventoryView", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__CreateInventoryView(soap, &soap_tmp___ns2__CreateInventoryView, "-ns2:CreateInventoryView", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CreateInventoryViewResponse)
		return soap_closesock(soap);
	ns2__CreateInventoryViewResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CreateInventoryViewResponse->soap_get(soap, "ns2:CreateInventoryViewResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__CreateContainerView(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__CreateContainerViewRequestType *ns2__CreateContainerView, _ns2__CreateContainerViewResponse *ns2__CreateContainerViewResponse)
{	struct __ns2__CreateContainerView soap_tmp___ns2__CreateContainerView;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__CreateContainerView.ns2__CreateContainerView = ns2__CreateContainerView;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__CreateContainerView(soap, &soap_tmp___ns2__CreateContainerView);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__CreateContainerView(soap, &soap_tmp___ns2__CreateContainerView, "-ns2:CreateContainerView", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__CreateContainerView(soap, &soap_tmp___ns2__CreateContainerView, "-ns2:CreateContainerView", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CreateContainerViewResponse)
		return soap_closesock(soap);
	ns2__CreateContainerViewResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CreateContainerViewResponse->soap_get(soap, "ns2:CreateContainerViewResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__CreateListView(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__CreateListViewRequestType *ns2__CreateListView, _ns2__CreateListViewResponse *ns2__CreateListViewResponse)
{	struct __ns2__CreateListView soap_tmp___ns2__CreateListView;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__CreateListView.ns2__CreateListView = ns2__CreateListView;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__CreateListView(soap, &soap_tmp___ns2__CreateListView);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__CreateListView(soap, &soap_tmp___ns2__CreateListView, "-ns2:CreateListView", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__CreateListView(soap, &soap_tmp___ns2__CreateListView, "-ns2:CreateListView", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CreateListViewResponse)
		return soap_closesock(soap);
	ns2__CreateListViewResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CreateListViewResponse->soap_get(soap, "ns2:CreateListViewResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__CreateListViewFromView(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__CreateListViewFromViewRequestType *ns2__CreateListViewFromView, _ns2__CreateListViewFromViewResponse *ns2__CreateListViewFromViewResponse)
{	struct __ns2__CreateListViewFromView soap_tmp___ns2__CreateListViewFromView;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__CreateListViewFromView.ns2__CreateListViewFromView = ns2__CreateListViewFromView;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__CreateListViewFromView(soap, &soap_tmp___ns2__CreateListViewFromView);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__CreateListViewFromView(soap, &soap_tmp___ns2__CreateListViewFromView, "-ns2:CreateListViewFromView", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__CreateListViewFromView(soap, &soap_tmp___ns2__CreateListViewFromView, "-ns2:CreateListViewFromView", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CreateListViewFromViewResponse)
		return soap_closesock(soap);
	ns2__CreateListViewFromViewResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CreateListViewFromViewResponse->soap_get(soap, "ns2:CreateListViewFromViewResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RevertToSnapshot_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RevertToSnapshotRequestType *ns2__RevertToSnapshot_USCORETask, _ns2__RevertToSnapshot_USCORETaskResponse *ns2__RevertToSnapshot_USCORETaskResponse)
{	struct __ns2__RevertToSnapshot_USCORETask soap_tmp___ns2__RevertToSnapshot_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RevertToSnapshot_USCORETask.ns2__RevertToSnapshot_USCORETask = ns2__RevertToSnapshot_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RevertToSnapshot_USCORETask(soap, &soap_tmp___ns2__RevertToSnapshot_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RevertToSnapshot_USCORETask(soap, &soap_tmp___ns2__RevertToSnapshot_USCORETask, "-ns2:RevertToSnapshot_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RevertToSnapshot_USCORETask(soap, &soap_tmp___ns2__RevertToSnapshot_USCORETask, "-ns2:RevertToSnapshot_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RevertToSnapshot_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__RevertToSnapshot_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RevertToSnapshot_USCORETaskResponse->soap_get(soap, "ns2:RevertToSnapshot_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RemoveSnapshot_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RemoveSnapshotRequestType *ns2__RemoveSnapshot_USCORETask, _ns2__RemoveSnapshot_USCORETaskResponse *ns2__RemoveSnapshot_USCORETaskResponse)
{	struct __ns2__RemoveSnapshot_USCORETask soap_tmp___ns2__RemoveSnapshot_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RemoveSnapshot_USCORETask.ns2__RemoveSnapshot_USCORETask = ns2__RemoveSnapshot_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RemoveSnapshot_USCORETask(soap, &soap_tmp___ns2__RemoveSnapshot_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RemoveSnapshot_USCORETask(soap, &soap_tmp___ns2__RemoveSnapshot_USCORETask, "-ns2:RemoveSnapshot_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RemoveSnapshot_USCORETask(soap, &soap_tmp___ns2__RemoveSnapshot_USCORETask, "-ns2:RemoveSnapshot_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RemoveSnapshot_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__RemoveSnapshot_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RemoveSnapshot_USCORETaskResponse->soap_get(soap, "ns2:RemoveSnapshot_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__RenameSnapshot(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__RenameSnapshotRequestType *ns2__RenameSnapshot, _ns2__RenameSnapshotResponse *ns2__RenameSnapshotResponse)
{	struct __ns2__RenameSnapshot soap_tmp___ns2__RenameSnapshot;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__RenameSnapshot.ns2__RenameSnapshot = ns2__RenameSnapshot;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__RenameSnapshot(soap, &soap_tmp___ns2__RenameSnapshot);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__RenameSnapshot(soap, &soap_tmp___ns2__RenameSnapshot, "-ns2:RenameSnapshot", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__RenameSnapshot(soap, &soap_tmp___ns2__RenameSnapshot, "-ns2:RenameSnapshot", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__RenameSnapshotResponse)
		return soap_closesock(soap);
	ns2__RenameSnapshotResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__RenameSnapshotResponse->soap_get(soap, "ns2:RenameSnapshotResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ExportSnapshot(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ExportSnapshotRequestType *ns2__ExportSnapshot, _ns2__ExportSnapshotResponse *ns2__ExportSnapshotResponse)
{	struct __ns2__ExportSnapshot soap_tmp___ns2__ExportSnapshot;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ExportSnapshot.ns2__ExportSnapshot = ns2__ExportSnapshot;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ExportSnapshot(soap, &soap_tmp___ns2__ExportSnapshot);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ExportSnapshot(soap, &soap_tmp___ns2__ExportSnapshot, "-ns2:ExportSnapshot", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ExportSnapshot(soap, &soap_tmp___ns2__ExportSnapshot, "-ns2:ExportSnapshot", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ExportSnapshotResponse)
		return soap_closesock(soap);
	ns2__ExportSnapshotResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ExportSnapshotResponse->soap_get(soap, "ns2:ExportSnapshotResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__CheckCompatibility_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__CheckCompatibilityRequestType *ns2__CheckCompatibility_USCORETask, _ns2__CheckCompatibility_USCORETaskResponse *ns2__CheckCompatibility_USCORETaskResponse)
{	struct __ns2__CheckCompatibility_USCORETask soap_tmp___ns2__CheckCompatibility_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__CheckCompatibility_USCORETask.ns2__CheckCompatibility_USCORETask = ns2__CheckCompatibility_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__CheckCompatibility_USCORETask(soap, &soap_tmp___ns2__CheckCompatibility_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__CheckCompatibility_USCORETask(soap, &soap_tmp___ns2__CheckCompatibility_USCORETask, "-ns2:CheckCompatibility_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__CheckCompatibility_USCORETask(soap, &soap_tmp___ns2__CheckCompatibility_USCORETask, "-ns2:CheckCompatibility_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CheckCompatibility_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__CheckCompatibility_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CheckCompatibility_USCORETaskResponse->soap_get(soap, "ns2:CheckCompatibility_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__QueryVMotionCompatibilityEx_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__QueryVMotionCompatibilityExRequestType *ns2__QueryVMotionCompatibilityEx_USCORETask, _ns2__QueryVMotionCompatibilityEx_USCORETaskResponse *ns2__QueryVMotionCompatibilityEx_USCORETaskResponse)
{	struct __ns2__QueryVMotionCompatibilityEx_USCORETask soap_tmp___ns2__QueryVMotionCompatibilityEx_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__QueryVMotionCompatibilityEx_USCORETask.ns2__QueryVMotionCompatibilityEx_USCORETask = ns2__QueryVMotionCompatibilityEx_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__QueryVMotionCompatibilityEx_USCORETask(soap, &soap_tmp___ns2__QueryVMotionCompatibilityEx_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__QueryVMotionCompatibilityEx_USCORETask(soap, &soap_tmp___ns2__QueryVMotionCompatibilityEx_USCORETask, "-ns2:QueryVMotionCompatibilityEx_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__QueryVMotionCompatibilityEx_USCORETask(soap, &soap_tmp___ns2__QueryVMotionCompatibilityEx_USCORETask, "-ns2:QueryVMotionCompatibilityEx_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__QueryVMotionCompatibilityEx_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__QueryVMotionCompatibilityEx_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__QueryVMotionCompatibilityEx_USCORETaskResponse->soap_get(soap, "ns2:QueryVMotionCompatibilityEx_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__CheckMigrate_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__CheckMigrateRequestType *ns2__CheckMigrate_USCORETask, _ns2__CheckMigrate_USCORETaskResponse *ns2__CheckMigrate_USCORETaskResponse)
{	struct __ns2__CheckMigrate_USCORETask soap_tmp___ns2__CheckMigrate_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__CheckMigrate_USCORETask.ns2__CheckMigrate_USCORETask = ns2__CheckMigrate_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__CheckMigrate_USCORETask(soap, &soap_tmp___ns2__CheckMigrate_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__CheckMigrate_USCORETask(soap, &soap_tmp___ns2__CheckMigrate_USCORETask, "-ns2:CheckMigrate_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__CheckMigrate_USCORETask(soap, &soap_tmp___ns2__CheckMigrate_USCORETask, "-ns2:CheckMigrate_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CheckMigrate_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__CheckMigrate_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CheckMigrate_USCORETaskResponse->soap_get(soap, "ns2:CheckMigrate_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__CheckRelocate_USCORETask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__CheckRelocateRequestType *ns2__CheckRelocate_USCORETask, _ns2__CheckRelocate_USCORETaskResponse *ns2__CheckRelocate_USCORETaskResponse)
{	struct __ns2__CheckRelocate_USCORETask soap_tmp___ns2__CheckRelocate_USCORETask;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__CheckRelocate_USCORETask.ns2__CheckRelocate_USCORETask = ns2__CheckRelocate_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__CheckRelocate_USCORETask(soap, &soap_tmp___ns2__CheckRelocate_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__CheckRelocate_USCORETask(soap, &soap_tmp___ns2__CheckRelocate_USCORETask, "-ns2:CheckRelocate_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__CheckRelocate_USCORETask(soap, &soap_tmp___ns2__CheckRelocate_USCORETask, "-ns2:CheckRelocate_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CheckRelocate_USCORETaskResponse)
		return soap_closesock(soap);
	ns2__CheckRelocate_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CheckRelocate_USCORETaskResponse->soap_get(soap, "ns2:CheckRelocate_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ValidateCredentialsInGuest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ValidateCredentialsInGuestRequestType *ns2__ValidateCredentialsInGuest, _ns2__ValidateCredentialsInGuestResponse *ns2__ValidateCredentialsInGuestResponse)
{	struct __ns2__ValidateCredentialsInGuest soap_tmp___ns2__ValidateCredentialsInGuest;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ValidateCredentialsInGuest.ns2__ValidateCredentialsInGuest = ns2__ValidateCredentialsInGuest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ValidateCredentialsInGuest(soap, &soap_tmp___ns2__ValidateCredentialsInGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ValidateCredentialsInGuest(soap, &soap_tmp___ns2__ValidateCredentialsInGuest, "-ns2:ValidateCredentialsInGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ValidateCredentialsInGuest(soap, &soap_tmp___ns2__ValidateCredentialsInGuest, "-ns2:ValidateCredentialsInGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ValidateCredentialsInGuestResponse)
		return soap_closesock(soap);
	ns2__ValidateCredentialsInGuestResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ValidateCredentialsInGuestResponse->soap_get(soap, "ns2:ValidateCredentialsInGuestResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__AcquireCredentialsInGuest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__AcquireCredentialsInGuestRequestType *ns2__AcquireCredentialsInGuest, _ns2__AcquireCredentialsInGuestResponse *ns2__AcquireCredentialsInGuestResponse)
{	struct __ns2__AcquireCredentialsInGuest soap_tmp___ns2__AcquireCredentialsInGuest;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__AcquireCredentialsInGuest.ns2__AcquireCredentialsInGuest = ns2__AcquireCredentialsInGuest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__AcquireCredentialsInGuest(soap, &soap_tmp___ns2__AcquireCredentialsInGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__AcquireCredentialsInGuest(soap, &soap_tmp___ns2__AcquireCredentialsInGuest, "-ns2:AcquireCredentialsInGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__AcquireCredentialsInGuest(soap, &soap_tmp___ns2__AcquireCredentialsInGuest, "-ns2:AcquireCredentialsInGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__AcquireCredentialsInGuestResponse)
		return soap_closesock(soap);
	ns2__AcquireCredentialsInGuestResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__AcquireCredentialsInGuestResponse->soap_get(soap, "ns2:AcquireCredentialsInGuestResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ReleaseCredentialsInGuest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ReleaseCredentialsInGuestRequestType *ns2__ReleaseCredentialsInGuest, _ns2__ReleaseCredentialsInGuestResponse *ns2__ReleaseCredentialsInGuestResponse)
{	struct __ns2__ReleaseCredentialsInGuest soap_tmp___ns2__ReleaseCredentialsInGuest;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ReleaseCredentialsInGuest.ns2__ReleaseCredentialsInGuest = ns2__ReleaseCredentialsInGuest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ReleaseCredentialsInGuest(soap, &soap_tmp___ns2__ReleaseCredentialsInGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ReleaseCredentialsInGuest(soap, &soap_tmp___ns2__ReleaseCredentialsInGuest, "-ns2:ReleaseCredentialsInGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ReleaseCredentialsInGuest(soap, &soap_tmp___ns2__ReleaseCredentialsInGuest, "-ns2:ReleaseCredentialsInGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ReleaseCredentialsInGuestResponse)
		return soap_closesock(soap);
	ns2__ReleaseCredentialsInGuestResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ReleaseCredentialsInGuestResponse->soap_get(soap, "ns2:ReleaseCredentialsInGuestResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__MakeDirectoryInGuest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__MakeDirectoryInGuestRequestType *ns2__MakeDirectoryInGuest, _ns2__MakeDirectoryInGuestResponse *ns2__MakeDirectoryInGuestResponse)
{	struct __ns2__MakeDirectoryInGuest soap_tmp___ns2__MakeDirectoryInGuest;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__MakeDirectoryInGuest.ns2__MakeDirectoryInGuest = ns2__MakeDirectoryInGuest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__MakeDirectoryInGuest(soap, &soap_tmp___ns2__MakeDirectoryInGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__MakeDirectoryInGuest(soap, &soap_tmp___ns2__MakeDirectoryInGuest, "-ns2:MakeDirectoryInGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__MakeDirectoryInGuest(soap, &soap_tmp___ns2__MakeDirectoryInGuest, "-ns2:MakeDirectoryInGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__MakeDirectoryInGuestResponse)
		return soap_closesock(soap);
	ns2__MakeDirectoryInGuestResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__MakeDirectoryInGuestResponse->soap_get(soap, "ns2:MakeDirectoryInGuestResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__DeleteFileInGuest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__DeleteFileInGuestRequestType *ns2__DeleteFileInGuest, _ns2__DeleteFileInGuestResponse *ns2__DeleteFileInGuestResponse)
{	struct __ns2__DeleteFileInGuest soap_tmp___ns2__DeleteFileInGuest;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__DeleteFileInGuest.ns2__DeleteFileInGuest = ns2__DeleteFileInGuest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__DeleteFileInGuest(soap, &soap_tmp___ns2__DeleteFileInGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__DeleteFileInGuest(soap, &soap_tmp___ns2__DeleteFileInGuest, "-ns2:DeleteFileInGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__DeleteFileInGuest(soap, &soap_tmp___ns2__DeleteFileInGuest, "-ns2:DeleteFileInGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__DeleteFileInGuestResponse)
		return soap_closesock(soap);
	ns2__DeleteFileInGuestResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__DeleteFileInGuestResponse->soap_get(soap, "ns2:DeleteFileInGuestResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__DeleteDirectoryInGuest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__DeleteDirectoryInGuestRequestType *ns2__DeleteDirectoryInGuest, _ns2__DeleteDirectoryInGuestResponse *ns2__DeleteDirectoryInGuestResponse)
{	struct __ns2__DeleteDirectoryInGuest soap_tmp___ns2__DeleteDirectoryInGuest;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__DeleteDirectoryInGuest.ns2__DeleteDirectoryInGuest = ns2__DeleteDirectoryInGuest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__DeleteDirectoryInGuest(soap, &soap_tmp___ns2__DeleteDirectoryInGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__DeleteDirectoryInGuest(soap, &soap_tmp___ns2__DeleteDirectoryInGuest, "-ns2:DeleteDirectoryInGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__DeleteDirectoryInGuest(soap, &soap_tmp___ns2__DeleteDirectoryInGuest, "-ns2:DeleteDirectoryInGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__DeleteDirectoryInGuestResponse)
		return soap_closesock(soap);
	ns2__DeleteDirectoryInGuestResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__DeleteDirectoryInGuestResponse->soap_get(soap, "ns2:DeleteDirectoryInGuestResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__MoveDirectoryInGuest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__MoveDirectoryInGuestRequestType *ns2__MoveDirectoryInGuest, _ns2__MoveDirectoryInGuestResponse *ns2__MoveDirectoryInGuestResponse)
{	struct __ns2__MoveDirectoryInGuest soap_tmp___ns2__MoveDirectoryInGuest;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__MoveDirectoryInGuest.ns2__MoveDirectoryInGuest = ns2__MoveDirectoryInGuest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__MoveDirectoryInGuest(soap, &soap_tmp___ns2__MoveDirectoryInGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__MoveDirectoryInGuest(soap, &soap_tmp___ns2__MoveDirectoryInGuest, "-ns2:MoveDirectoryInGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__MoveDirectoryInGuest(soap, &soap_tmp___ns2__MoveDirectoryInGuest, "-ns2:MoveDirectoryInGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__MoveDirectoryInGuestResponse)
		return soap_closesock(soap);
	ns2__MoveDirectoryInGuestResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__MoveDirectoryInGuestResponse->soap_get(soap, "ns2:MoveDirectoryInGuestResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__MoveFileInGuest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__MoveFileInGuestRequestType *ns2__MoveFileInGuest, _ns2__MoveFileInGuestResponse *ns2__MoveFileInGuestResponse)
{	struct __ns2__MoveFileInGuest soap_tmp___ns2__MoveFileInGuest;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__MoveFileInGuest.ns2__MoveFileInGuest = ns2__MoveFileInGuest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__MoveFileInGuest(soap, &soap_tmp___ns2__MoveFileInGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__MoveFileInGuest(soap, &soap_tmp___ns2__MoveFileInGuest, "-ns2:MoveFileInGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__MoveFileInGuest(soap, &soap_tmp___ns2__MoveFileInGuest, "-ns2:MoveFileInGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__MoveFileInGuestResponse)
		return soap_closesock(soap);
	ns2__MoveFileInGuestResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__MoveFileInGuestResponse->soap_get(soap, "ns2:MoveFileInGuestResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__CreateTemporaryFileInGuest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__CreateTemporaryFileInGuestRequestType *ns2__CreateTemporaryFileInGuest, _ns2__CreateTemporaryFileInGuestResponse *ns2__CreateTemporaryFileInGuestResponse)
{	struct __ns2__CreateTemporaryFileInGuest soap_tmp___ns2__CreateTemporaryFileInGuest;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__CreateTemporaryFileInGuest.ns2__CreateTemporaryFileInGuest = ns2__CreateTemporaryFileInGuest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__CreateTemporaryFileInGuest(soap, &soap_tmp___ns2__CreateTemporaryFileInGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__CreateTemporaryFileInGuest(soap, &soap_tmp___ns2__CreateTemporaryFileInGuest, "-ns2:CreateTemporaryFileInGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__CreateTemporaryFileInGuest(soap, &soap_tmp___ns2__CreateTemporaryFileInGuest, "-ns2:CreateTemporaryFileInGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CreateTemporaryFileInGuestResponse)
		return soap_closesock(soap);
	ns2__CreateTemporaryFileInGuestResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CreateTemporaryFileInGuestResponse->soap_get(soap, "ns2:CreateTemporaryFileInGuestResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__CreateTemporaryDirectoryInGuest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__CreateTemporaryDirectoryInGuestRequestType *ns2__CreateTemporaryDirectoryInGuest, _ns2__CreateTemporaryDirectoryInGuestResponse *ns2__CreateTemporaryDirectoryInGuestResponse)
{	struct __ns2__CreateTemporaryDirectoryInGuest soap_tmp___ns2__CreateTemporaryDirectoryInGuest;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__CreateTemporaryDirectoryInGuest.ns2__CreateTemporaryDirectoryInGuest = ns2__CreateTemporaryDirectoryInGuest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__CreateTemporaryDirectoryInGuest(soap, &soap_tmp___ns2__CreateTemporaryDirectoryInGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__CreateTemporaryDirectoryInGuest(soap, &soap_tmp___ns2__CreateTemporaryDirectoryInGuest, "-ns2:CreateTemporaryDirectoryInGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__CreateTemporaryDirectoryInGuest(soap, &soap_tmp___ns2__CreateTemporaryDirectoryInGuest, "-ns2:CreateTemporaryDirectoryInGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__CreateTemporaryDirectoryInGuestResponse)
		return soap_closesock(soap);
	ns2__CreateTemporaryDirectoryInGuestResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__CreateTemporaryDirectoryInGuestResponse->soap_get(soap, "ns2:CreateTemporaryDirectoryInGuestResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ListFilesInGuest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ListFilesInGuestRequestType *ns2__ListFilesInGuest, _ns2__ListFilesInGuestResponse *ns2__ListFilesInGuestResponse)
{	struct __ns2__ListFilesInGuest soap_tmp___ns2__ListFilesInGuest;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ListFilesInGuest.ns2__ListFilesInGuest = ns2__ListFilesInGuest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ListFilesInGuest(soap, &soap_tmp___ns2__ListFilesInGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ListFilesInGuest(soap, &soap_tmp___ns2__ListFilesInGuest, "-ns2:ListFilesInGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ListFilesInGuest(soap, &soap_tmp___ns2__ListFilesInGuest, "-ns2:ListFilesInGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ListFilesInGuestResponse)
		return soap_closesock(soap);
	ns2__ListFilesInGuestResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ListFilesInGuestResponse->soap_get(soap, "ns2:ListFilesInGuestResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ChangeFileAttributesInGuest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ChangeFileAttributesInGuestRequestType *ns2__ChangeFileAttributesInGuest, _ns2__ChangeFileAttributesInGuestResponse *ns2__ChangeFileAttributesInGuestResponse)
{	struct __ns2__ChangeFileAttributesInGuest soap_tmp___ns2__ChangeFileAttributesInGuest;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ChangeFileAttributesInGuest.ns2__ChangeFileAttributesInGuest = ns2__ChangeFileAttributesInGuest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ChangeFileAttributesInGuest(soap, &soap_tmp___ns2__ChangeFileAttributesInGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ChangeFileAttributesInGuest(soap, &soap_tmp___ns2__ChangeFileAttributesInGuest, "-ns2:ChangeFileAttributesInGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ChangeFileAttributesInGuest(soap, &soap_tmp___ns2__ChangeFileAttributesInGuest, "-ns2:ChangeFileAttributesInGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ChangeFileAttributesInGuestResponse)
		return soap_closesock(soap);
	ns2__ChangeFileAttributesInGuestResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ChangeFileAttributesInGuestResponse->soap_get(soap, "ns2:ChangeFileAttributesInGuestResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__InitiateFileTransferFromGuest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__InitiateFileTransferFromGuestRequestType *ns2__InitiateFileTransferFromGuest, _ns2__InitiateFileTransferFromGuestResponse *ns2__InitiateFileTransferFromGuestResponse)
{	struct __ns2__InitiateFileTransferFromGuest soap_tmp___ns2__InitiateFileTransferFromGuest;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__InitiateFileTransferFromGuest.ns2__InitiateFileTransferFromGuest = ns2__InitiateFileTransferFromGuest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__InitiateFileTransferFromGuest(soap, &soap_tmp___ns2__InitiateFileTransferFromGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__InitiateFileTransferFromGuest(soap, &soap_tmp___ns2__InitiateFileTransferFromGuest, "-ns2:InitiateFileTransferFromGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__InitiateFileTransferFromGuest(soap, &soap_tmp___ns2__InitiateFileTransferFromGuest, "-ns2:InitiateFileTransferFromGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__InitiateFileTransferFromGuestResponse)
		return soap_closesock(soap);
	ns2__InitiateFileTransferFromGuestResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__InitiateFileTransferFromGuestResponse->soap_get(soap, "ns2:InitiateFileTransferFromGuestResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__InitiateFileTransferToGuest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__InitiateFileTransferToGuestRequestType *ns2__InitiateFileTransferToGuest, _ns2__InitiateFileTransferToGuestResponse *ns2__InitiateFileTransferToGuestResponse)
{	struct __ns2__InitiateFileTransferToGuest soap_tmp___ns2__InitiateFileTransferToGuest;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__InitiateFileTransferToGuest.ns2__InitiateFileTransferToGuest = ns2__InitiateFileTransferToGuest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__InitiateFileTransferToGuest(soap, &soap_tmp___ns2__InitiateFileTransferToGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__InitiateFileTransferToGuest(soap, &soap_tmp___ns2__InitiateFileTransferToGuest, "-ns2:InitiateFileTransferToGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__InitiateFileTransferToGuest(soap, &soap_tmp___ns2__InitiateFileTransferToGuest, "-ns2:InitiateFileTransferToGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__InitiateFileTransferToGuestResponse)
		return soap_closesock(soap);
	ns2__InitiateFileTransferToGuestResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__InitiateFileTransferToGuestResponse->soap_get(soap, "ns2:InitiateFileTransferToGuestResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__StartProgramInGuest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__StartProgramInGuestRequestType *ns2__StartProgramInGuest, _ns2__StartProgramInGuestResponse *ns2__StartProgramInGuestResponse)
{	struct __ns2__StartProgramInGuest soap_tmp___ns2__StartProgramInGuest;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__StartProgramInGuest.ns2__StartProgramInGuest = ns2__StartProgramInGuest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__StartProgramInGuest(soap, &soap_tmp___ns2__StartProgramInGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__StartProgramInGuest(soap, &soap_tmp___ns2__StartProgramInGuest, "-ns2:StartProgramInGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__StartProgramInGuest(soap, &soap_tmp___ns2__StartProgramInGuest, "-ns2:StartProgramInGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__StartProgramInGuestResponse)
		return soap_closesock(soap);
	ns2__StartProgramInGuestResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__StartProgramInGuestResponse->soap_get(soap, "ns2:StartProgramInGuestResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ListProcessesInGuest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ListProcessesInGuestRequestType *ns2__ListProcessesInGuest, _ns2__ListProcessesInGuestResponse *ns2__ListProcessesInGuestResponse)
{	struct __ns2__ListProcessesInGuest soap_tmp___ns2__ListProcessesInGuest;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ListProcessesInGuest.ns2__ListProcessesInGuest = ns2__ListProcessesInGuest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ListProcessesInGuest(soap, &soap_tmp___ns2__ListProcessesInGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ListProcessesInGuest(soap, &soap_tmp___ns2__ListProcessesInGuest, "-ns2:ListProcessesInGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ListProcessesInGuest(soap, &soap_tmp___ns2__ListProcessesInGuest, "-ns2:ListProcessesInGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ListProcessesInGuestResponse)
		return soap_closesock(soap);
	ns2__ListProcessesInGuestResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ListProcessesInGuestResponse->soap_get(soap, "ns2:ListProcessesInGuestResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__TerminateProcessInGuest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__TerminateProcessInGuestRequestType *ns2__TerminateProcessInGuest, _ns2__TerminateProcessInGuestResponse *ns2__TerminateProcessInGuestResponse)
{	struct __ns2__TerminateProcessInGuest soap_tmp___ns2__TerminateProcessInGuest;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__TerminateProcessInGuest.ns2__TerminateProcessInGuest = ns2__TerminateProcessInGuest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__TerminateProcessInGuest(soap, &soap_tmp___ns2__TerminateProcessInGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__TerminateProcessInGuest(soap, &soap_tmp___ns2__TerminateProcessInGuest, "-ns2:TerminateProcessInGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__TerminateProcessInGuest(soap, &soap_tmp___ns2__TerminateProcessInGuest, "-ns2:TerminateProcessInGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__TerminateProcessInGuestResponse)
		return soap_closesock(soap);
	ns2__TerminateProcessInGuestResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__TerminateProcessInGuestResponse->soap_get(soap, "ns2:TerminateProcessInGuestResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ReadEnvironmentVariableInGuest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns2__ReadEnvironmentVariableInGuestRequestType *ns2__ReadEnvironmentVariableInGuest, _ns2__ReadEnvironmentVariableInGuestResponse *ns2__ReadEnvironmentVariableInGuestResponse)
{	struct __ns2__ReadEnvironmentVariableInGuest soap_tmp___ns2__ReadEnvironmentVariableInGuest;
	if (!soap_action)
		soap_action = "urn:vim25/5.5";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__ReadEnvironmentVariableInGuest.ns2__ReadEnvironmentVariableInGuest = ns2__ReadEnvironmentVariableInGuest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__ReadEnvironmentVariableInGuest(soap, &soap_tmp___ns2__ReadEnvironmentVariableInGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__ReadEnvironmentVariableInGuest(soap, &soap_tmp___ns2__ReadEnvironmentVariableInGuest, "-ns2:ReadEnvironmentVariableInGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__ReadEnvironmentVariableInGuest(soap, &soap_tmp___ns2__ReadEnvironmentVariableInGuest, "-ns2:ReadEnvironmentVariableInGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__ReadEnvironmentVariableInGuestResponse)
		return soap_closesock(soap);
	ns2__ReadEnvironmentVariableInGuestResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__ReadEnvironmentVariableInGuestResponse->soap_get(soap, "ns2:ReadEnvironmentVariableInGuestResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

#if defined(__BORLANDC__)
#pragma option pop
#pragma option pop
#endif

/* End of soapClient.cpp */
