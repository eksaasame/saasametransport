/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
#if !SILVERLIGHT
using System.Xml.Serialization;
#endif
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace mwdc.ironman.remoting.thrift
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  [DataContract(Namespace="")]
  public partial class agent_info : TBase
  {
    private string _agent_id;
    private string _agent_name;
    private string _agent_version;
    private long _status;

    [DataMember(Order = 0)]
    public string Agent_id
    {
      get
      {
        return _agent_id;
      }
      set
      {
        __isset.agent_id = true;
        this._agent_id = value;
      }
    }

    [DataMember(Order = 0)]
    public string Agent_name
    {
      get
      {
        return _agent_name;
      }
      set
      {
        __isset.agent_name = true;
        this._agent_name = value;
      }
    }

    [DataMember(Order = 0)]
    public string Agent_version
    {
      get
      {
        return _agent_version;
      }
      set
      {
        __isset.agent_version = true;
        this._agent_version = value;
      }
    }

    [DataMember(Order = 0)]
    public long? Status
    {
      get
      {
        return _status;
      }
      set
      {
        __isset.status = value.HasValue;
        if (value.HasValue) this._status = value.Value;
      }
    }


    [XmlIgnore] // XmlSerializer
    [DataMember(Order = 1)]  // XmlObjectSerializer, DataContractJsonSerializer, etc.
    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    [DataContract]
    public struct Isset {
      [DataMember]
      public bool agent_id;
      [DataMember]
      public bool agent_name;
      [DataMember]
      public bool agent_version;
      [DataMember]
      public bool status;
    }

    #region XmlSerializer support

    public bool ShouldSerializeAgent_id()
    {
      return __isset.agent_id;
    }

    public bool ShouldSerializeAgent_name()
    {
      return __isset.agent_name;
    }

    public bool ShouldSerializeAgent_version()
    {
      return __isset.agent_version;
    }

    public bool ShouldSerializeStatus()
    {
      return __isset.status;
    }

    #endregion XmlSerializer support

    public agent_info() {
      this._agent_id = "";
      this.__isset.agent_id = true;
      this._agent_name = "";
      this.__isset.agent_name = true;
      this._agent_version = "";
      this.__isset.agent_version = true;
      this._status = -1;
      this.__isset.status = true;
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.String) {
              Agent_id = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.String) {
              Agent_name = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.String) {
              Agent_version = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.I64) {
              Status = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("agent_info");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (Agent_id != null && __isset.agent_id) {
        field.Name = "agent_id";
        field.Type = TType.String;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Agent_id);
        oprot.WriteFieldEnd();
      }
      if (Agent_name != null && __isset.agent_name) {
        field.Name = "agent_name";
        field.Type = TType.String;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Agent_name);
        oprot.WriteFieldEnd();
      }
      if (Agent_version != null && __isset.agent_version) {
        field.Name = "agent_version";
        field.Type = TType.String;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Agent_version);
        oprot.WriteFieldEnd();
      }
      if (__isset.status) {
        field.Name = "status";
        field.Type = TType.I64;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(Status.Value);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("agent_info(");
      bool __first = true;
      if (Agent_id != null && __isset.agent_id) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Agent_id: ");
        __sb.Append(Agent_id);
      }
      if (Agent_name != null && __isset.agent_name) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Agent_name: ");
        __sb.Append(Agent_name);
      }
      if (Agent_version != null && __isset.agent_version) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Agent_version: ");
        __sb.Append(Agent_version);
      }
      if (__isset.status) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Status: ");
        __sb.Append(Status);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }

}
