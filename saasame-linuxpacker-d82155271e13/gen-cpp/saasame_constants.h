/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef saasame_CONSTANTS_H
#define saasame_CONSTANTS_H

#include "saasame_types.h"

namespace saasame { namespace transport {

class saasameConstants {
 public:
  saasameConstants();

  std::string CONFIG_PATH;
  std::string SCHEDULER_SERVICE;
  std::string PHYSICAL_PACKER_SERVICE;
  std::string VIRTUAL_PACKER_SERVICE;
  std::string CARRIER_SERVICE;
  std::string LOADER_SERVICE;
  std::string LAUNCHER_SERVICE;
  std::string LINUX_LAUNCHER_SERVICE;
  std::string TRANSPORTER_SERVICE;
  std::string TRANSPORTER_SERVICE_DISPLAY_NAME;
  std::string TRANSPORTER_SERVICE_DESCRIPTION;
  std::string SCHEDULER_SERVICE_DISPLAY_NAME;
  std::string SCHEDULER_SERVICE_DESCRIPTION;
  std::string PHYSICAL_PACKER_SERVICE_DISPLAY_NAME;
  std::string PHYSICAL_PACKER_SERVICE_DESCRIPTION;
  std::string VIRTUAL_PACKER_SERVICE_DISPLAY_NAME;
  std::string VIRTUAL_PACKER_SERVICE_DESCRIPTION;
  std::string CARRIER_SERVICE_DISPLAY_NAME;
  std::string CARRIER_SERVICE_DESCRIPTION;
  std::string LOADER_SERVICE_DISPLAY_NAME;
  std::string LOADER_SERVICE_DESCRIPTION;
  std::string LAUNCHER_SERVICE_DISPLAY_NAME;
  std::string LAUNCHER_SERVICE_DESCRIPTION;
  int32_t SCHEDULER_SERVICE_PORT;
  int32_t PHYSICAL_PACKER_SERVICE_PORT;
  int32_t VIRTUAL_PACKER_SERVICE_PORT;
  int32_t CARRIER_SERVICE_PORT;
  int32_t LOADER_SERVICE_PORT;
  int32_t LAUNCHER_SERVICE_PORT;
  int32_t LAUNCHER_EMULATOR_PORT;
  int32_t TRANSPORT_SERVICE_PORT;
  int32_t TRANSPORT_SERVICE_HTTP_PORT;
  int32_t CARRIER_SERVICE_HTTP_PORT;
  int32_t CARRIER_SERVICE_SSL_PORT;
  int32_t MANAGEMENT_SERVICE_PORT;
  std::string MANAGEMENT_SERVICE_PATH;
  std::string CARRIER_SERVICE_PATH;
  std::string TRANSPORTER_SERVICE_PATH;
};

extern const saasameConstants g_saasame_constants;

}} // namespace

#endif
